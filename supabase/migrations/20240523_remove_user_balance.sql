-- –ú–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä—è–º—ã—Ö –æ–±—Ä–∞—â–µ–Ω–∏–π –∫ –∫–æ–ª–æ–Ω–∫–µ balance –≤ —Ç–∞–±–ª–∏—Ü–µ users
-- –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å payments_v2

-- 1. –û–±–Ω–æ–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é add_stars_to_balance, —á—Ç–æ–±—ã –æ–Ω–∞ –Ω–µ –æ–±—Ä–∞—â–∞–ª–∞—Å—å –∫ –ø–æ–ª—é balance —Ç–∞–±–ª–∏—Ü—ã users
CREATE OR REPLACE FUNCTION public.add_stars_to_balance(p_telegram_id bigint, p_stars numeric, p_description text, p_bot_name text, p_type text DEFAULT 'money_income'::text, p_service_type text DEFAULT 'default'::text)
 RETURNS jsonb
 LANGUAGE plpgsql
AS $function$
DECLARE
    v_old_balance numeric;
    v_new_balance numeric;
    v_payment_id integer;
    v_user_id uuid;
BEGIN
    -- –õ–æ–≥–∏—Ä—É–µ–º –Ω–∞—á–∞–ª–æ –æ–ø–µ—Ä–∞—Ü–∏–∏
    RAISE NOTICE 'üöÄ –ù–∞—á–∞–ª–æ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è % –∑–≤–µ–∑–¥ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è %', p_stars, p_telegram_id;

    -- –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å —á–µ—Ä–µ–∑ get_user_balance
    SELECT get_user_balance(p_telegram_id::text) INTO v_old_balance;

    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    SELECT id INTO v_user_id
    FROM users
    WHERE telegram_id = p_telegram_id;

    -- –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ –±–µ–∑ –ø–æ–ª—è balance
    IF v_user_id IS NULL THEN
        RAISE NOTICE 'üë§ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å telegram_id: %', p_telegram_id;
        INSERT INTO users (telegram_id, last_payment_date, bot_name)
        VALUES (p_telegram_id, NOW(), p_bot_name);
    END IF;

    -- –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –æ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–∏ –≤ payments_v2
    INSERT INTO payments_v2 (
        payment_date,
        amount,
        status,
        payment_method,
        description,
        metadata,
        stars,
        telegram_id,
        currency,
        subscription,
        bot_name,
        language,
        type
    ) VALUES (
        NOW(),
        p_stars,  -- –°—É–º–º–∞ —Ä–∞–≤–Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∑–≤–µ–∑–¥
        'COMPLETED',
        'system',
        p_description,
        jsonb_build_object(
            'type', 'system_add',
            'old_balance', v_old_balance,
            'added_stars', p_stars,
            'service_type', p_service_type
        ),
        p_stars,
        p_telegram_id,
        'STARS',
        'none',
        p_bot_name,
        'ru',
        p_type::operation_type  -- –ü—Ä–∏–≤–æ–¥–∏–º –∫ —Ç–∏–ø—É operation_type
    )
    RETURNING payment_id INTO v_payment_id;

    -- –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å —á–µ—Ä–µ–∑ get_user_balance
    SELECT get_user_balance(p_telegram_id::text) INTO v_new_balance;

    RETURN jsonb_build_object(
        'payment_id', v_payment_id,
        'old_balance', v_old_balance,
        'new_balance', v_new_balance,
        'success', true
    );
END;
$function$;

-- 2. –£–¥–∞–ª—è–µ–º —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –≤–µ—Ä—Å–∏–∏ —Ñ—É–Ω–∫—Ü–∏–∏ add_stars_to_balance
DROP FUNCTION IF EXISTS public.add_stars_to_balance(bigint, integer, text, text);
DROP FUNCTION IF EXISTS public.add_stars_to_balance(bigint, integer, text, text, text, text);

-- 3. –û–±–Ω–æ–≤–ª—è–µ–º —Ç—Ä–∏–≥–≥–µ—Ä–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é sync_user_balance, —á—Ç–æ–±—ã –æ–Ω–∞ –Ω–µ –æ–±–Ω–æ–≤–ª—è–ª–∞ –ø–æ–ª–µ balance
DROP FUNCTION IF EXISTS public.sync_user_balance();

-- 4. –û–±–Ω–æ–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é fix_user_balance, —á—Ç–æ–±—ã –æ–Ω–∞ —Ä–∞–±–æ—Ç–∞–ª–∞ —Å payments_v2 –≤–º–µ—Å—Ç–æ –ø–æ–ª—è balance
CREATE OR REPLACE FUNCTION public.fix_user_balance(p_telegram_id text, p_bot_name text)
 RETURNS TABLE(old_balance numeric, new_balance numeric, difference numeric)
 LANGUAGE plpgsql
AS $function$
DECLARE
    v_old_balance DECIMAL;
    v_new_balance DECIMAL;
BEGIN
    -- –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å
    SELECT get_user_balance(p_telegram_id) INTO v_old_balance;

    -- –í—ã—á–∏—Å–ª—è–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å –∏–∑ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    v_new_balance := calculate_user_balance(p_telegram_id::bigint, p_bot_name);

    -- –°–æ–∑–¥–∞–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É—é—â—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é, –µ—Å–ª–∏ –µ—Å—Ç—å —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–µ
    IF v_old_balance != v_new_balance THEN
        -- –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å –º–µ–Ω—å—à–µ —Ä–∞—Å—á–µ—Ç–Ω–æ–≥–æ, –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∑–≤–µ–∑–¥—ã (income)
        -- –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å –±–æ–ª—å—à–µ —Ä–∞—Å—á–µ—Ç–Ω–æ–≥–æ, –Ω—É–∂–Ω–æ –≤—ã—á–µ—Å—Ç—å –∑–≤–µ–∑–¥—ã (outcome)
        INSERT INTO payments_v2 (
            telegram_id,
            amount,
            stars,
            type,
            status,
            description,
            bot_name,
            metadata,
            payment_method,
            payment_date,
            currency
        ) VALUES (
            p_telegram_id::bigint,
            ABS(v_new_balance - v_old_balance),
            ABS(v_new_balance - v_old_balance),
            CASE WHEN v_old_balance < v_new_balance THEN 'money_income'::operation_type ELSE 'money_expense'::operation_type END,
            'COMPLETED',
            '–ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –±–∞–ª–∞–Ω—Å–∞: –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏—è –º–µ–∂–¥—É —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–º –±–∞–ª–∞–Ω—Å–æ–º –∏ —Ä–∞—Å—á–µ—Ç–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º',
            p_bot_name,
            jsonb_build_object(
                'correction', true,
                'old_balance', v_old_balance,
                'calculated_balance', v_new_balance,
                'difference', v_old_balance - v_new_balance
            ),
            'System',
            NOW(),
            'STARS'
        );
    END IF;

    -- –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –±–∞–ª–∞–Ω—Å
    SELECT get_user_balance(p_telegram_id) INTO v_new_balance;

    -- –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    RETURN QUERY SELECT 
        v_old_balance,
        v_new_balance,
        (v_old_balance - v_new_balance);
END;
$function$;

-- 5. –û–±–Ω–æ–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é migrate_user_balance, —á—Ç–æ–±—ã –æ–Ω–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∞ –ø–æ–ª–µ balance
DROP FUNCTION IF EXISTS public.migrate_user_balance(bigint);

-- 6. –û–±–Ω–æ–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é migrate_user_balances
DROP FUNCTION IF EXISTS public.migrate_user_balances(); 