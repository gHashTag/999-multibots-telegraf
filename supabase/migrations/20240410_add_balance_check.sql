-- –ß–µ—Ç–≤–µ—Ä—Ç–∞—è –≤–µ—Ä—Å–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ add_stars_to_balance —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –Ω–∞–ª–∏—á–∏—è –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞
CREATE OR REPLACE FUNCTION public.add_stars_to_balance_with_check(
    p_telegram_id bigint, 
    p_stars numeric, 
    p_description text, 
    p_bot_name text, 
    p_type text DEFAULT 'money_income'::text, 
    p_service_type text DEFAULT 'default'::text
)
 RETURNS jsonb
 LANGUAGE plpgsql
AS $function$
DECLARE
    v_old_balance numeric;
    v_new_balance numeric;
    v_payment_id integer;
    v_user_id integer;
    v_error_message text;
BEGIN
    -- –õ–æ–≥–∏—Ä—É–µ–º –Ω–∞—á–∞–ª–æ –æ–ø–µ—Ä–∞—Ü–∏–∏
    RAISE NOTICE 'üöÄ –ù–∞—á–∞–ª–æ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å–æ –∑–≤–µ–∑–¥–∞–º–∏ (% –∑–≤–µ–∑–¥) –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è %', p_stars, p_telegram_id;

    -- –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å –∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    SELECT balance, id INTO v_old_balance, v_user_id
    FROM users
    WHERE telegram_id = p_telegram_id;

    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    IF v_user_id IS NULL THEN
        -- –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –∏ —ç—Ç–æ —Å–ø–∏—Å–∞–Ω–∏–µ, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É
        IF p_type = 'money_expense' AND p_stars < 0 THEN
            v_error_message := format('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å telegram_id %s –Ω–µ –Ω–∞–π–¥–µ–Ω', p_telegram_id);
            RAISE NOTICE '‚ö†Ô∏è %', v_error_message;
            
            RETURN jsonb_build_object(
                'success', false,
                'error', v_error_message,
                'old_balance', NULL,
                'new_balance', NULL
            );
        END IF;
        
        -- –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –∏ —ç—Ç–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ
        RAISE NOTICE 'üë§ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å telegram_id: %', p_telegram_id;
        INSERT INTO users (telegram_id, balance, last_payment_date, bot_name)
        VALUES (p_telegram_id, 0, NOW(), p_bot_name)
        RETURNING id, balance INTO v_user_id, v_old_balance;
    END IF;
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –ø—Ä–∏ —Å–ø–∏—Å–∞–Ω–∏–∏
    IF p_type = 'money_expense' AND v_old_balance < ABS(p_stars) THEN
        v_error_message := format('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤. –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: %s, —Ç—Ä–µ–±—É–µ—Ç—Å—è: %s', 
                                 v_old_balance, ABS(p_stars));
        RAISE NOTICE '‚ö†Ô∏è %', v_error_message;
        
        -- –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –æ –Ω–µ—É–¥–∞—á–Ω–æ–π –ø–æ–ø—ã—Ç–∫–µ —Å–ø–∏—Å–∞–Ω–∏—è
        INSERT INTO payments_v2 (
            payment_date,
            amount,
            status,
            payment_method,
            description,
            metadata,
            stars,
            telegram_id,
            currency,
            subscription,
            bot_name,
            language,
            type
        ) VALUES (
            NOW(),
            p_stars,
            'FAILED',
            'system',
            p_description || ' (–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤)',
            jsonb_build_object(
                'type', 'system_deduction_failed',
                'error', 'insufficient_funds',
                'old_balance', v_old_balance,
                'requested_stars', p_stars,
                'service_type', p_service_type,
                'user_id', v_user_id
            ),
            p_stars,
            p_telegram_id,
            'STARS',
            'none',
            p_bot_name,
            'ru',
            p_type::operation_type
        );
        
        RETURN jsonb_build_object(
            'success', false,
            'error', 'insufficient_funds',
            'error_message', v_error_message,
            'old_balance', v_old_balance,
            'requested_amount', p_stars,
            'user_id', v_user_id
        );
    END IF;

    -- –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –æ–± –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤ payments_v2
    INSERT INTO payments_v2 (
        payment_date,
        amount,
        status,
        payment_method,
        description,
        metadata,
        stars,
        telegram_id,
        currency,
        subscription,
        bot_name,
        language,
        type
    ) VALUES (
        NOW(),
        p_stars,
        'COMPLETED',
        'system',
        p_description,
        jsonb_build_object(
            'type', CASE WHEN p_stars >= 0 THEN 'system_add' ELSE 'system_deduction' END,
            'old_balance', v_old_balance,
            'stars_change', p_stars,
            'service_type', p_service_type,
            'user_id', v_user_id
        ),
        p_stars,
        p_telegram_id,
        'STARS',
        'none',
        p_bot_name,
        'ru',
        p_type::operation_type
    )
    RETURNING payment_id INTO v_payment_id;

    -- –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    UPDATE users 
    SET 
        balance = COALESCE(balance, 0) + p_stars,
        last_payment_date = NOW()
    WHERE telegram_id = p_telegram_id
    RETURNING balance INTO v_new_balance;

    RETURN jsonb_build_object(
        'payment_id', v_payment_id,
        'old_balance', v_old_balance,
        'new_balance', v_new_balance,
        'success', true,
        'user_id', v_user_id
    );
END;
$function$; 