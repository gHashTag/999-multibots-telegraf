import type { Inngest } from 'inngest'
import type { Logger as PinoLogger } from 'pino'
import type { replicate as ReplicateClientInstance } from '@/core/replicate'
import type winston from 'winston'
import type { Message } from 'telegraf/types'
// import { MyContext } from '@/interfaces'; // MyContext –Ω–µ –Ω—É–∂–µ–Ω –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è—Ö –º–æ–¥—É–ª—è –Ω–∞–ø—Ä—è–º—É—é

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–π —Ç–∏–ø –¥–ª—è –∫–æ–Ω—Ñ–∏–≥–∞, –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º–æ–≥–æ –≤ –º–æ–¥—É–ª—å
interface ModuleConfig {
  API_URL?: string
  CONFIG_UPLOAD_DIR?: string
  SECRET_API_KEY?: string // –ü—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –Ω—É–∂–µ–Ω
  COSTS?: {
    [key: string]: number
  }
  REPLICATE?: {
    TRAINING_MODEL_ID?: string
    TRAINING_MODEL_VERSION?: string
    // –î—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã Replicate, –µ—Å–ª–∏ –Ω—É–∂–Ω—ã
  }
  // –î—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ–Ω—Ñ–∏–≥–∞, –µ—Å–ª–∏ –Ω—É–∂–Ω—ã
}

export interface DigitalAvatarBodyDependencies {
  inngest: Inngest
  logger: winston.Logger
  replicate: typeof ReplicateClientInstance
  config: ModuleConfig // –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–π —Ç–∏–ø ModuleConfig
  // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å Telegram –∏ Supabase
  sendTelegramMessage: (
    chatId: number | string,
    text: string,
    extra?: any
  ) => Promise<Message.TextMessage>
  // saveErrorToSupabase: (errorData: any) => Promise<any>; // –£–¥–∞–ª—è–µ–º, —Ç–∞–∫ –∫–∞–∫ –ø–æ–∫–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è
  updateUserBalance: (
    telegramId: string | number,
    amount: number,
    type: PaymentType,
    description?: string,
    metadata?: any
  ) => Promise<boolean> // –°—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä—É–µ–º –Ω–∞ updateUserBalance –∏ —É—Ç–æ—á–Ω—è–µ–º —Ç–∏–ø type –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
  getUserBalance: (telegramId: string | number) => Promise<number | null>
  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ Supabase, –µ—Å–ª–∏ –Ω—É–∂–Ω—ã
}

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å—ã –∏ –≤–æ—Ä–∫–µ—Ä—ã –º–æ–¥—É–ª—è
import { createModelTrainingService } from './services/modelTraining.service'
import { createModelTrainingWorker } from './inngest/modelTraining.worker'

// –¢–∏–ø—ã –¥–ª—è API –º–æ–¥—É–ª—è
import type { ModelTrainingRequest, ModelTrainingResponse } from './types'

// –ù—É–∂–µ–Ω –∏–º–ø–æ—Ä—Ç PaymentType, –µ—Å–ª–∏ –æ–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ updateUserBalance
import { PaymentType } from '@/interfaces/payments.interface'

// API, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –º–æ–¥—É–ª—å
export interface DigitalAvatarBodyAPI {
  startModelTraining: (
    request: ModelTrainingRequest /*, ctx?: MyContext */
  ) => Promise<ModelTrainingResponse>
  // –î—Ä—É–≥–∏–µ –º–µ—Ç–æ–¥—ã API –º–æ–¥—É–ª—è, –µ—Å–ª–∏ –±—É–¥—É—Ç
}

// –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –º–æ–¥—É–ª—è
export function initDigitalAvatarBodyModule(
  dependencies: DigitalAvatarBodyDependencies
) {
  const modelTrainingService = createModelTrainingService(dependencies)
  const modelTrainingWorkerConfig = createModelTrainingWorker(dependencies) // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤–æ—Ä–∫–µ—Ä–∞

  // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ Inngest (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ —ç—Ç–æ –¥–µ–ª–∞–µ—Ç—Å—è –≥–¥–µ-—Ç–æ –≤—ã—à–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä –≤ bot.ts –∏–ª–∏ functions.ts)
  // dependencies.inngest.createFunction(...modelTrainingWorkerConfig); // –ü—Ä–∏–º–µ—Ä, –∫–∞–∫ —ç—Ç–æ –º–æ–≥–ª–æ –±—ã –≤—ã–≥–ª—è–¥–µ—Ç—å
  // –í–∞–∂–Ω–æ: —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤–æ—Ä–∫–µ—Ä–∞ –¥–æ–ª–∂–Ω–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å —Ç–∞–º, –≥–¥–µ –¥–æ—Å—Ç—É–ø–µ–Ω –∏–Ω—Å—Ç–∞–Ω—Å Inngest —Å .createFunction()

  return {
    startModelTraining: modelTrainingService,
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤–æ—Ä–∫–µ—Ä–∞, —á—Ç–æ–±—ã –µ–µ –º–æ–∂–Ω–æ –±—ã–ª–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –≤–æ–≤–Ω–µ
    // –≠—Ç–æ –±–æ–ª–µ–µ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –ø–æ–¥—Ö–æ–¥, —á–µ–º –ø–æ–ø—ã—Ç–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–Ω—É—Ç—Ä–∏ –º–æ–¥—É–ª—è –±–µ–∑ –ø–æ–ª–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è –Ω–∞–¥ Inngest –∫–ª–∏–µ–Ω—Ç–æ–º
    inngestFunctions: [modelTrainingWorkerConfig],
  }
}

// –¢–µ–ø–µ—Ä—å –≤–æ—Ä–∫–µ—Ä Inngest —Ç–∞–∫–∂–µ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏,
// –Ω–æ —ç—Ç–æ —Å–ª–æ–∂–Ω–µ–µ, —Ç.–∫. Inngest —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±—ã—á–Ω–æ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É—é—Ç—Å—è –≥–ª–æ–±–∞–ª—å–Ω–æ.
// –í–æ–∑–º–æ–∂–Ω–æ, –≤–æ—Ä–∫–µ—Ä—É –ø—Ä–∏–¥–µ—Ç—Å—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–æ–¥—É–ª—å
// –∏–ª–∏ –º—ã –ø–µ—Ä–µ–¥–∞–¥–∏–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –µ–º—É –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ –≥–ª–∞–≤–Ω–æ–º —Ñ–∞–π–ª–µ Inngest.

import {
  createGenerateModelTrainingHandler,
  // type GenerateModelTrainingDependencies, // <-- –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π —Ç–∏–ø –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
} from './inngest/generateModelTraining'
import {
  startModelTraining,
  StartModelTrainingArgs,
} from './services/startModelTraining.service'
import { replicateWebhookHandler } from './webhooks/replicate.webhook.controller'

// üëá –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ù–û–í–´–ô, —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
export interface DigitalAvatarBodyMinimalDependencies {
  inngest: Inngest
  sendTelegramMessage: (
    chatId: string | number,
    text: string,
    extra?: any
  ) => Promise<any> // –£—Ç–æ—á–Ω–∏—Ç—å —Ç–∏–ø –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –º–æ–¥—É–ª—å Digital Avatar Body.
 * –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç Inngest —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç API –º–æ–¥—É–ª—è.
 */
export function initDigitalAvatarBodyModuleMinimal(
  // üëá –ò—Å–ø–æ–ª—å–∑—É–µ–º –ù–û–í–´–ô –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
  deps: DigitalAvatarBodyMinimalDependencies
) {
  console.log(
    '[Module Init] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è digitalAvatarBody... (Minimal Deps)'
  )

  // –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ Inngest, –ø–µ—Ä–µ–¥–∞–≤–∞—è –µ–º—É —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –≤–Ω–µ—à–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
  // –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ (supabase, replicate, logger, config) –±—É–¥—É—Ç –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤–Ω—É—Ç—Ä–∏
  const generateModelTrainingFnConfig = createGenerateModelTrainingHandler({
    // –ü–µ—Ä–µ–¥–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–æ, —á—Ç–æ –ø—Ä–∏—à–ª–æ —Å–Ω–∞—Ä—É–∂–∏
    inngest: deps.inngest,
    sendTelegramMessage: deps.sendTelegramMessage,
    // –û—Å—Ç–∞–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–ª–∂–µ–Ω –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–∞–º
  })

  console.log(
    '[Module Init] –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Inngest —Ñ—É–Ω–∫—Ü–∏–∏ modelTrainingWorker —Å–æ–∑–¥–∞–Ω–∞.'
  )

  return {
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ bot.ts
    inngestFunctions: [generateModelTrainingFnConfig],
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä—è–º–æ–π –º–µ—Ç–æ–¥ API
    startModelTraining: startModelTraining, // –°–µ—Ä–≤–∏—Å startModelTraining –¥–æ–ª–∂–µ–Ω —Å–∞–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–µ–±—Ö—É–∫–∞ (–æ–Ω —Ç–æ–∂–µ –¥–æ–ª–∂–µ–Ω –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏)
    replicateWebhookHandler: replicateWebhookHandler,
  }
}

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞–ø—Ä—è–º—É—é –æ—Ç—Ä–µ—Ñ–∞–∫—Ç–æ—Ä–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
import { generateModelTraining } from './inngest/generateModelTraining.refactored'

// –£–¥–∞–ª—è–µ–º –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
// interface LocalDependencies extends DigitalAvatarBodyMinimalDependencies {}

// API, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –º–æ–¥—É–ª—å
// –ï—Å–ª–∏ DigitalAvatarBodyModuleAPI –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∏–ª–∏ –≤—ã–∑—ã–≤–∞–µ—Ç –æ—à–∏–±–∫–∏, –º–æ–∂–Ω–æ –µ–≥–æ –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–ª–∏ —É–ø—Ä–æ—Å—Ç–∏—Ç—å
export interface DigitalAvatarBodyModuleAPI {
  // –ú–µ—Ç–æ–¥ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –º–æ–¥–µ–ª–∏ (–µ—Å–ª–∏ –æ–Ω –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è)
  // startModelTraining?: (
  //   request: ModelTrainingRequest
  // ) => Promise<ModelTrainingResponse>;
  inngestFunctions: any[] // –ú–∞—Å—Å–∏–≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π Inngest —Ñ—É–Ω–∫—Ü–∏–π
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è —Ç–µ–ø–µ—Ä—å –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç API —Å Inngest —Ñ—É–Ω–∫—Ü–∏–µ–π
export const initDigitalAvatarBodyModule = (
  deps: DigitalAvatarBodyMinimalDependencies // –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
): DigitalAvatarBodyModuleAPI => {
  // –õ–æ–≥–∏–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏, –µ—Å–ª–∏ –Ω—É–∂–Ω–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–æ–≤–µ—Ä–∫–∞ deps.inngest)
  if (!deps.inngest) {
    throw new Error('Inngest instance is required for DigitalAvatarBody module')
  }

  return {
    inngestFunctions: [
      generateModelTraining, // –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é –∏ –æ—Ç—Ä–µ—Ñ–∞–∫—Ç–æ—Ä–µ–Ω–Ω—É—é Inngest —Ñ—É–Ω–∫—Ü–∏—é
    ],
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ç–∏–ø—ã –≤–æ–≤–Ω–µ
export type {
  DigitalAvatarBodyMinimalDependencies, // –≠—Ç–æ—Ç —Ç–∏–ø –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –≤ bot.ts
  // DigitalAvatarBodyModuleAPI, // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º, –µ—Å–ª–∏ –æ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –Ω—É–∂–µ–Ω –≤–Ω–µ—à–Ω–µ–º—É –∫–æ–¥—É
  ModelTrainingRequest, // –ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤–Ω–µ—à–Ω–∏–º –∫–æ–¥–æ–º
  ModelTrainingResponse, // –ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤–Ω–µ—à–Ω–∏–º –∫–æ–¥–æ–º
}
