import { Telegraf } from 'telegraf'
import { MyContext } from '@/interfaces'
import { generateImageToVideo } from '../generateImageToVideo'
import { logger } from '@/utils/logger'
import { isRussian } from '@/helpers/language'

/**
 * TelegramConnector - –∞–¥–∞–ø—Ç–µ—Ä –¥–ª—è —Å–≤—è–∑–∏ –º–µ–∂–¥—É Telegram-–±–æ—Ç–æ–º –∏ –º–æ–¥—É–ª–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ.
 * –≠—Ç–æ—Ç –∫–ª–∞—Å—Å –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π —Å Telegram API –∏ –ø–µ—Ä–µ–¥–∞—á—É –¥–∞–Ω–Ω—ã—Ö –≤ –º–æ–¥—É–ª—å.
 */
export class TelegramConnector {
  private telegram: Telegraf<MyContext>['telegram']
  private chatId: number
  private isRu: boolean

  constructor(
    telegram: Telegraf<MyContext>['telegram'],
    chatId: number,
    isRu: boolean
  ) {
    this.telegram = telegram
    this.chatId = chatId
    this.isRu = isRu
  }

  /**
   * –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ, –ø–µ—Ä–µ–¥–∞–≤–∞—è –¥–∞–Ω–Ω—ã–µ –∏–∑ Telegram –≤ –º–æ–¥—É–ª—å.
   * @param telegramId ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram
   * @param username –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   * @param botName –ò–º—è –±–æ—Ç–∞
   * @param videoModel –ú–æ–¥–µ–ª—å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ
   * @param imageUrl URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
   * @param prompt –¢–µ–∫—Å—Ç–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç
   * @param isMorphing –§–ª–∞–≥ —Ä–µ–∂–∏–º–∞ –º–æ—Ä—Ñ–∏–Ω–≥–∞
   * @param imageAUrl URL –ø–µ—Ä–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –º–æ—Ä—Ñ–∏–Ω–≥–∞
   * @param imageBUrl URL –≤—Ç–æ—Ä–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –º–æ—Ä—Ñ–∏–Ω–≥–∞
   * @param dependencies –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è –º–æ–¥—É–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ
   */
  async startVideoGeneration(
    telegramId: string,
    username: string,
    botName: string,
    videoModel: string,
    imageUrl: string | null,
    prompt: string | null,
    isMorphing: boolean,
    imageAUrl: string | null,
    imageBUrl: string | null,
    dependencies: any
  ): Promise<void> {
    try {
      logger.info('[TelegramConnector] Starting video generation', {
        telegramId,
        videoModel,
        isMorphing,
      })
      await this.telegram.sendMessage(
        this.chatId,
        this.isRu
          ? '‚úÖ –ó–∞–ø—Ä–æ—Å –ø—Ä–∏–Ω—è—Ç! –ù–∞—á–∏–Ω–∞—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –≤–∏–¥–µ–æ... –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è.'
          : '‚úÖ Request accepted! Starting video generation... This might take a while.'
      )

      await generateImageToVideo(
        telegramId,
        username,
        this.isRu,
        botName,
        videoModel,
        imageUrl,
        prompt,
        isMorphing,
        imageAUrl,
        imageBUrl,
        this.telegram,
        this.chatId,
        dependencies
      )
    } catch (error) {
      logger.error('[TelegramConnector] Error starting video generation', {
        error,
        telegramId,
      })
      await this.telegram.sendMessage(
        this.chatId,
        this.isRu
          ? '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ.'
          : '‚ùå Error starting video generation.'
      )
    }
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
   * @param errorMessage –¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏
   */
  async onError(errorMessage: string): Promise<void> {
    await this.telegram.sendMessage(this.chatId, errorMessage)
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏.
   */
  async onGenerationStart(): Promise<void> {
    await this.telegram.sendMessage(
      this.chatId,
      this.isRu
        ? 'üïí –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–¥–µ–æ –Ω–∞—á–∞–ª–∞—Å—å...'
        : 'üïí Video generation started...'
    )
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏ –≤–∏–¥–µ–æ.
   * @param videoPath –ü—É—Ç—å –∫ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–º—É –≤–∏–¥–µ–æ
   * @param caption –ü–æ–¥–ø–∏—Å—å –∫ –≤–∏–¥–µ–æ
   */
  async onGenerationComplete(
    videoPath: string,
    caption: string
  ): Promise<void> {
    await this.telegram.sendVideo(
      this.chatId,
      { source: videoPath },
      { caption }
    )
  }
}

logger.info('‚ö°Ô∏è TelegramConnector initialized for video generation module')
