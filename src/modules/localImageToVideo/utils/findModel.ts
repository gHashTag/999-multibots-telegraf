import {
  VIDEO_MODELS_CONFIG,
  VideoModelConfig,
} from '@/price/models/VIDEO_MODELS_CONFIG'

/**
 * Finds a video model ID by its title and input type.
 * @param title - The title to search for (case-insensitive, trimmed).
 * @param type - The required input type ('image' or 'text').
 * @returns The model ID string if found, otherwise undefined.
 */
export const findModelByTitle = (
  title: string,
  type: 'image' | 'text'
): string | undefined => {
  console.log('üîç –ü–æ–∏—Å–∫ –º–æ–¥–µ–ª–∏ –ø–æ –∑–∞–≥–æ–ª–æ–≤–∫—É:', {
    inputTitle: title.trim(),
    inputType: type,
  })

  const foundModel = Object.values(VIDEO_MODELS_CONFIG).find(
    (model: VideoModelConfig) => {
      const normalizedInput = title.toLowerCase().trim()
      const normalizedModelTitle = model.title.toLowerCase().trim()

      const titleMatch = normalizedModelTitle === normalizedInput
      const typeMatch = model.inputType.includes(type)

      console.log(`üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ "${model.title}" [${model.inputType}]:`, {
        titleMatch,
        typeMatch,
      })

      return titleMatch && typeMatch
    }
  )

  const resultId = foundModel?.id
  console.log('üîé –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞:', resultId || '–ú–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞')
  return resultId
}
