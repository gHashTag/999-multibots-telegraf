/**
 * –ï–î–ò–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –ú–ê–ü–ü–ò–ù–ì–ê –°–ï–†–í–ò–°–û–í
 *
 * –≠—Ç–æ—Ç —Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –µ–¥–∏–Ω—É—é –ª–æ–≥–∏–∫—É –¥–ª—è:
 * 1. –ú–∞–ø–ø–∏–Ω–≥–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –¥–µ—Ç–∞–ª–µ–π –≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å–µ—Ä–≤–∏—Å—ã
 * 2. –ü–æ–ª—É—á–µ–Ω–∏—è —ç–º–æ–¥–∑–∏ –¥–ª—è —Å–µ—Ä–≤–∏—Å–æ–≤
 * 3. –ö–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
 *
 * –ü–†–ò–ù–¶–ò–ü: –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ü–û–ù–Ø–¢–ù–´–ï —Å–µ—Ä–≤–∏—Å—ã, –∞ –Ω–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏
 */

/**
 * –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å–µ—Ä–≤–∏—Å—ã –ø–µ—Ä–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è
 * –≠—Ç–æ —Ç–æ, —á—Ç–æ –ø–æ–Ω–∏–º–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
 */
export enum UserService {
  // üñºÔ∏è –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø
  NeuroPhoto = 'neuro_photo',
  ImageToPrompt = 'image_to_prompt',

  // üé¨ –í–ò–î–ï–û
  TextToVideo = 'text_to_video',
  ImageToVideo = 'image_to_video',

  // üéµ –ê–£–î–ò–û
  TextToSpeech = 'text_to_speech',
  Voice = 'voice',
  VoiceToText = 'voice_to_text',
  LipSync = 'lip_sync',

  // üé≠ –ê–í–ê–¢–ê–†–´
  DigitalAvatarBody = 'digital_avatar_body',

  // üé® –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï
  TextToImage = 'text_to_image',

  // ‚öôÔ∏è –°–ò–°–¢–ï–ú–ù–´–ï
  PaymentOperation = 'payment_operation',
  Other = 'other',
  Unknown = 'unknown',
}

/**
 * –ú–∞–ø–ø–∏–Ω–≥ —ç–º–æ–¥–∑–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
 */
export const SERVICE_EMOJI_MAP: Record<UserService, string> = {
  // üñºÔ∏è –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø
  [UserService.NeuroPhoto]: 'üñºÔ∏è',
  [UserService.ImageToPrompt]: 'üìù',

  // üé¨ –í–ò–î–ï–û
  [UserService.TextToVideo]: 'üìπ',
  [UserService.ImageToVideo]: 'üé¨',

  // üéµ –ê–£–î–ò–û
  [UserService.TextToSpeech]: 'üó£Ô∏è',
  [UserService.Voice]: 'üé§',
  [UserService.VoiceToText]: 'üéôÔ∏è',
  [UserService.LipSync]: 'üíã',

  // üé≠ –ê–í–ê–¢–ê–†–´
  [UserService.DigitalAvatarBody]: 'üé≠',

  // üé® –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï
  [UserService.TextToImage]: 'üé®',

  // ‚öôÔ∏è –°–ò–°–¢–ï–ú–ù–´–ï
  [UserService.PaymentOperation]: 'üí≥',
  [UserService.Other]: '‚ùì',
  [UserService.Unknown]: '‚ùì',
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è —Å–µ—Ä–≤–∏—Å–∞
 * –ú–∞–ø–ø–∏—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏ –≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å–µ—Ä–≤–∏—Å—ã –ø–µ—Ä–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è
 */
export function getServiceDisplayName(
  serviceType: string | null,
  description: string | null
): UserService {
  // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –ø—Ä–æ–º–æ-–æ–ø–µ—Ä–∞—Ü–∏–π –∏ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
  if (description) {
    const desc = description.toLowerCase()

    // –ü–†–û–ú–û-–û–ü–ï–†–ê–¶–ò–ò ‚Üí payment_operation (—Å–∏—Å—Ç–µ–º–Ω—ã–π —Å–µ—Ä–≤–∏—Å)
    if (desc.includes('promo bonus') || desc.includes('üéÅ')) {
      return UserService.PaymentOperation
    }

    // –ê–í–¢–û–ê–ö–¢–ò–í–ê–¶–ò–Ø –ü–û–î–ü–ò–°–ö–ò ‚Üí payment_operation (—Å–∏—Å—Ç–µ–º–Ω—ã–π —Å–µ—Ä–≤–∏—Å)
    if (
      desc.includes('auto-activated subscription') ||
      desc.includes('üéÅ auto-activated')
    ) {
      return UserService.PaymentOperation
    }

    // –í–°–ï –í–ò–î–ï–û –ì–ï–ù–ï–†–ê–¶–ò–ò ‚Üí text_to_video (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Å–µ—Ä–≤–∏—Å)
    if (desc.includes('video generation')) {
      return UserService.TextToVideo
    }

    // –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –º–æ–¥–µ–ª–µ–π ‚Üí digital_avatar_body (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Å–µ—Ä–≤–∏—Å)
    if (
      desc.includes('—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –º–æ–¥–µ–ª–∏') ||
      desc.includes('model training') ||
      desc.includes('neuro_train_lora_debit')
    ) {
      return UserService.DigitalAvatarBody
    }

    // –ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π ‚Üí image_to_prompt (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Å–µ—Ä–≤–∏—Å)
    if (
      desc.includes('image to prompt') ||
      desc.includes('–∞–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è')
    ) {
      return UserService.ImageToPrompt
    }

    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π ‚Üí neuro_photo (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Å–µ—Ä–≤–∏—Å)
    if (desc.includes('generating') && desc.includes('image')) {
      return UserService.NeuroPhoto
    }

    // –ü–ª–∞—Ç–µ–∂–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ ‚Üí payment_operation (—Å–∏—Å—Ç–µ–º–Ω—ã–π —Å–µ—Ä–≤–∏—Å)
    if (desc === 'payment operation') {
      return UserService.PaymentOperation
    }
  }

  // –ï—Å–ª–∏ –µ—Å—Ç—å service_type, –ø—Ä–æ–≤–µ—Ä—è–µ–º —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º —Å–µ—Ä–≤–∏—Å–æ–º
  if (
    serviceType &&
    Object.values(UserService).includes(serviceType as UserService)
  ) {
    return serviceType as UserService
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º service_type –¥–ª—è —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
  if (serviceType) {
    const normalizedServiceType = serviceType.toLowerCase()

    // –°–∏—Å—Ç–µ–º–Ω—ã–µ —Å—Ü–µ–Ω—ã –∏ –æ–ø–µ—Ä–∞—Ü–∏–∏
    if (
      normalizedServiceType === 'start_scene' ||
      normalizedServiceType === 'main_menu' ||
      normalizedServiceType === 'balance_scene' ||
      normalizedServiceType === 'payment_scene' ||
      normalizedServiceType === 'subscription_scene' ||
      normalizedServiceType === 'top_up_balance' ||
      normalizedServiceType === 'subscribe'
    ) {
      return UserService.PaymentOperation
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ unknown –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ —Å–ª—É—á–∞—è
    if (normalizedServiceType === 'unknown') {
      return UserService.Unknown
    }
  }

  return UserService.Other
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —ç–º–æ–¥–∑–∏ –¥–ª—è —Å–µ—Ä–≤–∏—Å–∞
 */
export function getServiceEmoji(serviceName: string): string {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —è–≤–ª—è–µ—Ç—Å—è –ª–∏ serviceName –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º —Å–µ—Ä–≤–∏—Å–æ–º
  if (Object.values(UserService).includes(serviceName as UserService)) {
    return SERVICE_EMOJI_MAP[serviceName as UserService]
  }

  // –ï—Å–ª–∏ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è, –ø—ã—Ç–∞–µ–º—Å—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
  const normalizedName = serviceName.toLowerCase()

  // –ú–∞–ø–ø–∏–Ω–≥ —Å—Ç–∞—Ä—ã—Ö/—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –Ω–∞–∑–≤–∞–Ω–∏–π –≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å–µ—Ä–≤–∏—Å—ã
  const legacyMapping: Record<string, UserService> = {
    // –°—Ç–∞—Ä—ã–µ –≤–∏–¥–µ–æ —Å–µ—Ä–≤–∏—Å—ã
    kling_video: UserService.TextToVideo,
    haiper_video: UserService.TextToVideo,
    minimax_video: UserService.TextToVideo,
    video_kling_pro: UserService.TextToVideo,
    video_kling_v2: UserService.TextToVideo,
    video_haiper: UserService.TextToVideo,
    video_minimax: UserService.TextToVideo,
    video_ray: UserService.TextToVideo,
    video_standard: UserService.TextToVideo,
    video_wan: UserService.TextToVideo,
    neurovideo: UserService.TextToVideo,
    neurobase: UserService.TextToVideo,

    // –°—Ç–∞—Ä—ã–µ —Å–µ—Ä–≤–∏—Å—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    image_generation: UserService.NeuroPhoto,
    image_analysis: UserService.ImageToPrompt,

    // –°—Ç–∞—Ä—ã–µ —Å–µ—Ä–≤–∏—Å—ã –∞–≤–∞—Ç–∞—Ä–æ–≤
    model_training: UserService.DigitalAvatarBody,

    // –°–∏—Å—Ç–µ–º–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
    system: UserService.PaymentOperation,
    prompts: UserService.Other,
    start_scene: UserService.PaymentOperation,
    main_menu: UserService.PaymentOperation,
    balance_scene: UserService.PaymentOperation,
    payment_scene: UserService.PaymentOperation,
    subscription_scene: UserService.PaymentOperation,
    top_up_balance: UserService.PaymentOperation,
    subscribe: UserService.PaymentOperation,
    unknown: UserService.Unknown,
  }

  const mappedService = legacyMapping[normalizedName]
  if (mappedService) {
    return SERVICE_EMOJI_MAP[mappedService]
  }

  return SERVICE_EMOJI_MAP[UserService.Unknown]
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Å–µ—Ä–≤–∏—Å–∞
 */
export function getServiceCategory(
  service: UserService
): 'image' | 'video' | 'audio' | 'avatar' | 'system' {
  switch (service) {
    case UserService.NeuroPhoto:
    case UserService.ImageToPrompt:
    case UserService.TextToImage:
      return 'image'

    case UserService.TextToVideo:
    case UserService.ImageToVideo:
      return 'video'

    case UserService.TextToSpeech:
    case UserService.Voice:
    case UserService.VoiceToText:
    case UserService.LipSync:
      return 'audio'

    case UserService.DigitalAvatarBody:
      return 'avatar'

    default:
      return 'system'
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —á–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ —Å —É—á–µ—Ç–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏
 */
export function getServiceDisplayTitle(
  service: UserService,
  description?: string,
  isRu: boolean = true
): string {
  // –ï—Å–ª–∏ —ç—Ç–æ –ø–ª–∞—Ç–µ–∂–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è, –ø—ã—Ç–∞–µ–º—Å—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
  if (service === UserService.PaymentOperation && description) {
    const desc = description.toLowerCase()

    if (desc.includes('promo bonus') || desc.includes('üéÅ promo bonus')) {
      return isRu ? '–ü—Ä–æ–º–æ-–±–æ–Ω—É—Å' : 'Promo Bonus'
    }

    if (
      desc.includes('auto-activated subscription') ||
      desc.includes('üéÅ auto-activated')
    ) {
      return isRu ? '–ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø–æ–¥–ø–∏—Å–∫–∏' : 'Subscription Activation'
    }

    if (desc.includes('subscription') || desc.includes('–ø–æ–¥–ø–∏—Å–∫–∞')) {
      return isRu ? '–ü–æ–¥–ø–∏—Å–∫–∞' : 'Subscription'
    }

    if (desc.includes('top-up') || desc.includes('–ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ')) {
      return isRu ? '–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞' : 'Balance Top-up'
    }
  }

  const titlesRu: Record<UserService, string> = {
    // üñºÔ∏è –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø
    [UserService.NeuroPhoto]: '–ù–µ–π—Ä–æ—Ñ–æ—Ç–æ',
    [UserService.ImageToPrompt]: '–ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π',

    // üé¨ –í–ò–î–ï–û
    [UserService.TextToVideo]: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–¥–µ–æ',
    [UserService.ImageToVideo]: '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –≤–∏–¥–µ–æ',

    // üéµ –ê–£–î–ò–û
    [UserService.TextToSpeech]: '–û–∑–≤—É—á–∫–∞ —Ç–µ–∫—Å—Ç–∞',
    [UserService.Voice]: '–ì–æ–ª–æ—Å–æ–≤–æ–π –∞–≤–∞—Ç–∞—Ä',
    [UserService.VoiceToText]: '–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏',
    [UserService.LipSync]: '–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≥—É–±',

    // üé≠ –ê–í–ê–¢–ê–†–´
    [UserService.DigitalAvatarBody]: '–¶–∏—Ñ—Ä–æ–≤–æ–π –∞–≤–∞—Ç–∞—Ä',

    // üé® –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï
    [UserService.TextToImage]: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π',

    // ‚öôÔ∏è –°–ò–°–¢–ï–ú–ù–´–ï
    [UserService.PaymentOperation]: '–°–∏—Å—Ç–µ–º–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è',
    [UserService.Other]: '–î—Ä—É–≥–æ–µ',
    [UserService.Unknown]: '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ',
  }

  const titlesEn: Record<UserService, string> = {
    // üñºÔ∏è IMAGES
    [UserService.NeuroPhoto]: 'NeuroPhoto',
    [UserService.ImageToPrompt]: 'Image Analysis',

    // üé¨ VIDEO
    [UserService.TextToVideo]: 'Video Generation',
    [UserService.ImageToVideo]: 'Image to Video',

    // üéµ AUDIO
    [UserService.TextToSpeech]: 'Text to Speech',
    [UserService.Voice]: 'Voice Avatar',
    [UserService.VoiceToText]: 'Speech Recognition',
    [UserService.LipSync]: 'Lip Sync',

    // üé≠ AVATARS
    [UserService.DigitalAvatarBody]: 'Digital Avatar',

    // üé® ADDITIONAL
    [UserService.TextToImage]: 'Image Generation',

    // ‚öôÔ∏è SYSTEM
    [UserService.PaymentOperation]: 'System Operation',
    [UserService.Other]: 'Other',
    [UserService.Unknown]: 'Unknown',
  }

  const titles = isRu ? titlesRu : titlesEn
  return titles[service] || titles[UserService.Unknown]
}
