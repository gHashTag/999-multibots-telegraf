import { Scenes } from 'telegraf'
import { MyContext } from '@/interfaces'
import { upscaleImage } from '@/services/imageUpscaler'
import { createHelpCancelKeyboard } from '@/menu'
import { handleHelpCancel } from '@/handlers/handleHelpCancel'
import { ModeEnum } from '@/interfaces/modes'
import { logger } from '@/utils/logger'

export const imageUpscalerWizard = new Scenes.WizardScene<MyContext>(
  ModeEnum.ImageUpscaler,
  async ctx => {
    console.log('CASE 0: image_upscaler')
    const isRu = ctx.from?.language_code === 'ru'
    console.log('CASE: imageUpscalerCommand')

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–µ–∂–∏–º –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å–ø—Ä–∞–≤–∫–∏
    ctx.session.mode = ModeEnum.ImageUpscaler

    const isCancel = await handleHelpCancel(ctx)
    if (isCancel) {
      return ctx.scene.leave()
    }

    await ctx.reply(
      isRu
        ? '‚¨ÜÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–∞\n\nüéØ Clarity Upscaler —É–≤–µ–ª–∏—á–∏—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –≤ 2 —Ä–∞–∑–∞ –∏ —É–ª—É—á—à–∏—Ç –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—é\nüíé –°—Ç–æ–∏–º–æ—Å—Ç—å: 3 ‚≠ê'
        : '‚¨ÜÔ∏è Send a photo to upscale quality\n\nüéØ Clarity Upscaler will increase resolution 2x and improve details\nüíé Cost: 3 ‚≠ê'
    )
    ctx.scene.session.state = { step: 0 }
    return ctx.wizard.next()
  },
  async ctx => {
    console.log('CASE 1: image_upscaler')
    const isRu = ctx.from?.language_code === 'ru'

    const isCancel = await handleHelpCancel(ctx)
    if (isCancel) {
      return ctx.scene.leave()
    }

    if (!ctx.message) {
      await ctx.reply(
        isRu ? '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ' : 'Please send an image',
        {
          reply_markup: createHelpCancelKeyboard(isRu).reply_markup,
        }
      )
      return
    }

    if ('photo' in ctx.message) {
      // –ï—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ñ–æ—Ç–æ, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –µ–≥–æ
      const photo = ctx.message.photo
      const fileId = photo[photo.length - 1].file_id
      const file = await ctx.telegram.getFileLink(fileId)
      const imageUrl = file.href

      logger.info('Image upscaler started', {
        telegramId: ctx.from?.id,
        imageUrl,
      })

      try {
        // –í—ã–∑—ã–≤–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–π —Å–µ—Ä–≤–∏—Å upscaler'–∞ (–Ω–µ —Å–≤—è–∑–∞–Ω–Ω—ã–π —Å FLUX Kontext)
        await upscaleImage({
          imageUrl,
          telegram_id: String(ctx.from?.id),
          username: ctx.from?.username || 'unknown_user',
          is_ru: isRu,
          ctx,
          originalPrompt: 'Manual upscale request',
        })

        return ctx.scene.leave()
      } catch (error) {
        logger.error('Error in imageUpscalerWizard:', {
          error: error instanceof Error ? error.message : 'Unknown error',
          telegramId: ctx.from?.id,
        })

        await ctx.reply(
          isRu
            ? '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–≤–µ–ª–∏—á–µ–Ω–∏–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
            : 'An error occurred while upscaling the image. Please try again later.'
        )
        return ctx.scene.leave()
      }
    } else {
      // –ï—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–µ —Ñ–æ—Ç–æ, –ø—Ä–æ—Å–∏–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ
      await ctx.reply(
        isRu ? '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ' : 'Please send an image',
        {
          reply_markup: createHelpCancelKeyboard(isRu).reply_markup,
        }
      )
      return
    }
  }
)

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ HELP –∏ CANCEL –∫–∞–∫ –≤ –¥—Ä—É–≥–∏—Ö wizard'–∞—Ö
imageUpscalerWizard.help(handleHelpCancel)
imageUpscalerWizard.command('cancel', handleHelpCancel)

export default imageUpscalerWizard
