import { MyContext } from '@/interfaces'
import { WizardScene } from 'telegraf/scenes'
import { getUserByTelegramId } from '@/core/supabase'
// –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ —Ç–∏–ø—É –≤ payments_v2
import { checkActivePaymentSubscription } from '@/core/supabase/checkSubscriptionByTelegramId'
import { verifySubscription } from '@/middlewares/verifySubscription'
import { getSubScribeChannel } from '@/handlers'
import { ADMIN_IDS_ARRAY } from '@/config' // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤ ID –∞–¥–º–∏–Ω–æ–≤
import { logger } from '@/utils/logger' // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ª–æ–≥–≥–µ—Ä

const subscriptionCheckStep = async (ctx: MyContext) => {
  const telegramId = ctx.from?.id
  logger.info('‚öôÔ∏è CASE: subscriptionCheckScene started', {
    telegram_id: telegramId,
    username: ctx.from?.username,
  })

  if (!telegramId) {
    logger.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å telegramId –≤ subscriptionCheckScene')
    return ctx.scene.leave() // –í—ã—Ö–æ–¥–∏–º, –µ—Å–ª–∏ –Ω–µ—Ç ID
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º/—Ç–µ—Å—Ç–µ—Ä–æ–º
  if (ADMIN_IDS_ARRAY.includes(telegramId)) {
    logger.info(
      'üëë –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–æ–º/—Ç–µ—Å—Ç–µ—Ä–æ–º, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫–∏',
      {
        telegram_id: telegramId,
      }
    )
    // –°—Ä–∞–∑—É –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –Ω—É–∂–Ω–æ–π —Å—Ü–µ–Ω–µ, –º–∏–Ω—É—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    const nextScene =
      ctx.session.mode === 'main_menu' ? 'menuScene' : 'startScene'
    logger.info(`üöÄ –ê–¥–º–∏–Ω –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω –≤ —Å—Ü–µ–Ω—É: ${nextScene}`, {
      telegram_id: telegramId,
    })
    return ctx.scene.enter(nextScene)
  }

  // --- –û–±—ã—á–Ω–∞—è –ª–æ–≥–∏–∫–∞ –¥–ª—è –Ω–µ-–∞–¥–º–∏–Ω–æ–≤ ---
  logger.info('üë§ –û–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –≤—ã–ø–æ–ª–Ω—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏', {
    telegram_id: telegramId,
  })

  const { language_code } = ctx.from

  // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ
  const existingUser = await getUserByTelegramId(ctx)
  console.log('subscriptionCheckStep - existingUser:', existingUser)

  if (!existingUser) {
    console.log(`CASE: User ${telegramId} not found, entering createUserScene`)
    return ctx.scene.enter('createUserScene')
  }

  // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–π –ø–ª–∞—Ç–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏ ('neurophoto' –∏–ª–∏ 'neurobase')
  const paidSubscription = await checkActivePaymentSubscription(telegramId)
  console.log(
    `subscriptionCheckStep - User ${telegramId} paid subscription check:`,
    paidSubscription
  )

  // 3. –õ–æ–≥–∏–∫–∞ –¥–æ—Å—Ç—É–ø–∞
  if (paidSubscription.isActive) {
    // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –∞–∫—Ç–∏–≤–Ω–æ–π –ø–ª–∞—Ç–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–æ–π - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∫–∞–Ω–∞–ª–∞
    console.log(
      `CASE: User ${telegramId} has active paid subscription (${paidSubscription.type}), skipping channel check`
    )
  } else {
    // –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ù–ï–¢ –∞–∫—Ç–∏–≤–Ω–æ–π –ø–ª–∞—Ç–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏ - –ø—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª
    console.log(
      `CASE: User ${telegramId} does NOT have active paid subscription`
    )
    const SUBSCRIBE_CHANNEL_ID = getSubScribeChannel(ctx)

    if (SUBSCRIBE_CHANNEL_ID) {
      console.log(
        `Checking mandatory channel subscription for user ${telegramId}, channel ${SUBSCRIBE_CHANNEL_ID}`
      )
      const isSubscribedToChannel = await verifySubscription(
        ctx,
        language_code?.toString() || 'ru',
        SUBSCRIBE_CHANNEL_ID
      )

      if (!isSubscribedToChannel) {
        // –ù–ï –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª - –≤—ã—Ö–æ–¥
        console.log(
          `CASE: User ${telegramId} is NOT subscribed to required channel ${SUBSCRIBE_CHANNEL_ID}. Leaving scene.`
        )
        // –¢—É—Ç –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–µ—Ä–µ–¥ –≤—ã—Ö–æ–¥–æ–º
        // await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª X –¥–ª—è –¥–æ—Å—Ç—É–ø–∞...');
        return ctx.scene.leave()
      }
      console.log(
        `CASE: User ${telegramId} IS subscribed to required channel ${SUBSCRIBE_CHANNEL_ID}`
      )
    } else {
      // ID –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
      // –í–ê–ñ–ù–û: –ï—Å–ª–∏ –∫–∞–Ω–∞–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –í–°–ï–ì–î–ê –¥–ª—è –ù–ï –ø–ª–∞—Ç–Ω—ã—Ö —é–∑–µ—Ä–æ–≤,
      // —Ç–æ –∑–¥–µ—Å—å –Ω—É–∂–Ω–æ –≤—ã—Ö–æ–¥–∏—Ç—å –∏–∑ —Å—Ü–µ–Ω—ã ctx.scene.leave()
      console.log(
        'CASE: SUBSCRIBE_CHANNEL_ID not set, skipping mandatory channel check'
      )
    }
  }

  // 4. –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ü–µ–Ω–µ (–µ—Å–ª–∏ –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã)
  if (ctx.session.mode === 'main_menu') {
    console.log(`User ${telegramId} passed checks, entering menuScene`)
    return ctx.scene.enter('menuScene')
  } else {
    console.log(`User ${telegramId} passed checks, entering startScene`)
    return ctx.scene.enter('startScene')
  }
}

export const subscriptionCheckScene = new WizardScene(
  'subscriptionCheckScene',
  subscriptionCheckStep
)
