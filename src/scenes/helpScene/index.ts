import { Scenes, Markup } from 'telegraf'
import type { MyContext } from '../../interfaces'
import {
  handleLevel1,
  handleLevel2,
  handleLevel3,
  handleLevel4,
  handleLevel5,
  handleLevel6,
  handleLevel7,
  handleLevel8,
  handleLevel9,
  handleLevel10,
  handleLevel11,
  handleLevel12,
  handleLevel13,
} from '../../scenes/levelQuestWizard/handlers'
import { mainMenu } from '@/menu'

import { getReferalsCountAndUserData } from '@/core/supabase'
import { ModeEnum } from '@/interfaces/modes';

export const helpScene = new Scenes.BaseScene<MyContext>('help')

helpScene.enter(async ctx => {
  const mode = ctx.session.mode
  const isRu = ctx.from?.language_code === 'ru'
  const telegram_id = ctx.from.id.toString()
  // –£–±–∏—Ä–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ –Ω—É–∂–Ω—ã –¥–ª—è —Ç–µ–∫—Å—Ç–∞ —Å–ø—Ä–∞–≤–∫–∏
  // const { count, subscriptionType, level } =
  //   await getReferalsCountAndUserData(telegram_id)

  let helpText = isRu ? '–û–±—â–∞—è —Å–ø—Ä–∞–≤–∫–∞...' : 'General help...'
  let requiresLevelHandler = true // –§–ª–∞–≥, –Ω—É–∂–Ω–æ –ª–∏ –≤—ã–∑—ã–≤–∞—Ç—å handleLevelX

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å–ø—Ä–∞–≤–∫–∏ –∏ –Ω—É–∂–Ω–æ –ª–∏ –≤—ã–∑—ã–≤–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —É—Ä–æ–≤–Ω—è
  switch (mode) {
    case ModeEnum.DigitalAvatarBody:
      helpText = isRu
        ? '–°–ø—Ä–∞–≤–∫–∞ –ø–æ –¶–∏—Ñ—Ä–æ–≤–æ–º—É —Ç–µ–ª—É...'
        : 'Help for Digital Body...'
      // await handleLevel1(ctx) // –í—ã–∑–æ–≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω
      break
    case ModeEnum.NeuroPhoto:
      helpText = isRu ? '–°–ø—Ä–∞–≤–∫–∞ –ø–æ –ù–µ–π—Ä–æ—Ñ–æ—Ç–æ...' : 'Help for NeuroPhoto...'
      // await handleLevel2(ctx) // –í—ã–∑–æ–≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω
      break
    case ModeEnum.ImageToPrompt:
      helpText = isRu
        ? '–°–ø—Ä–∞–≤–∫–∞ –ø–æ –ü—Ä–æ–º–ø—Ç—É –∏–∑ —Ñ–æ—Ç–æ...'
        : 'Help for Prompt from Photo...'
      // await handleLevel3(ctx) // –í—ã–∑–æ–≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω
      break
    case ModeEnum.Avatar:
      helpText = isRu
        ? '–°–ø—Ä–∞–≤–∫–∞ –ø–æ –ú–æ–∑–≥—É –∞–≤–∞—Ç–∞—Ä–∞...'
        : 'Help for Avatar Brain...'
      // await handleLevel4(ctx) // –í—ã–∑–æ–≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω
      break
    case ModeEnum.ChatWithAvatar:
      helpText = isRu
        ? '–°–ø—Ä–∞–≤–∫–∞ –ø–æ –ß–∞—Ç—É —Å –∞–≤–∞—Ç–∞—Ä–æ–º...'
        : 'Help for Chat with Avatar...'
      // await handleLevel5(ctx) // –í—ã–∑–æ–≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω
      break
    case ModeEnum.SelectModel:
      helpText = isRu
        ? '–°–ø—Ä–∞–≤–∫–∞ –ø–æ –í—ã–±–æ—Ä—É –º–æ–¥–µ–ª–∏ –ò–ò...'
        : 'Help for Choose AI Model...'
      // await handleLevel6(ctx) // –í—ã–∑–æ–≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω
      break
    case ModeEnum.Voice:
      helpText = isRu
        ? '–°–ø—Ä–∞–≤–∫–∞ –ø–æ –ì–æ–ª–æ—Å—É –∞–≤–∞—Ç–∞—Ä–∞...'
        : 'Help for Avatar Voice...'
      // await handleLevel7(ctx) // –í—ã–∑–æ–≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω
      break
    case ModeEnum.TextToSpeech:
      helpText = isRu
        ? '–°–ø—Ä–∞–≤–∫–∞ –ø–æ –¢–µ–∫—Å—Ç—É –≤ –≥–æ–ª–æ—Å...'
        : 'Help for Text to Voice...'
      // await handleLevel8(ctx) // –í—ã–∑–æ–≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω
      break
    case ModeEnum.ImageToVideo:
      helpText = isRu
        ? '–°–ø—Ä–∞–≤–∫–∞ –ø–æ –§–æ—Ç–æ –≤ –≤–∏–¥–µ–æ...'
        : 'Help for Photo to Video...'
      // await handleLevel9(ctx) // –í—ã–∑–æ–≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω
      break
    case ModeEnum.TextToImage:
      helpText = isRu
        ? '–°–ø—Ä–∞–≤–∫–∞ –ø–æ –¢–µ–∫—Å—Ç—É –≤ —Ñ–æ—Ç–æ...'
        : 'Help for Text to Image...'
      // await handleLevel10(ctx) // –í—ã–∑–æ–≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω
      break
    case ModeEnum.TextToVideo:
      helpText = isRu
        ? '–°–ø—Ä–∞–≤–∫–∞ –ø–æ –í–∏–¥–µ–æ –∏–∑ —Ç–µ–∫—Å—Ç–∞...'
        : 'Help for Text to Video...'
      // await handleLevel11(ctx) // –í—ã–∑–æ–≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω
      break
    case ModeEnum.ChangeSize:
      helpText = isRu
        ? '–°–ø—Ä–∞–≤–∫–∞ –ø–æ –ò–∑–º–µ–Ω–µ–Ω–∏—é —Ä–∞–∑–º–µ—Ä–∞...'
        : 'Help for Change Size...'
      // await handleLevel12(ctx) // –í—ã–∑–æ–≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω
      break
    case ModeEnum.Invite:
      helpText = isRu
        ? '–°–ø—Ä–∞–≤–∫–∞ –ø–æ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—é –¥—Ä—É–≥–∞...'
        : 'Help for Invite a Friend...'
      // await handleLevel13(ctx) // –í—ã–∑–æ–≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω
      break
    case ModeEnum.Help:
    default:
      // –î–ª—è –æ–±—â–µ–π —Å–ø—Ä–∞–≤–∫–∏ (ModeEnum.Help –∏–ª–∏ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π mode) –Ω–µ –≤—ã–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —É—Ä–æ–≤–Ω—è
      requiresLevelHandler = false
      helpText = isRu
        ? 'ü§ñ –û–±—â–∞—è —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É:\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.\n–ö–æ–º–∞–Ω–¥–∞ /menu - –≤–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.'
        : 'ü§ñ General Bot Help:\n\nPlease select a section from the main menu.\nUse the buttons to navigate.\nCommand /menu - return to main menu.'
      break
  }

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å–ø—Ä–∞–≤–∫–∏ –° –ö–ù–û–ü–ö–û–ô –ù–ê–ó–ê–î
  await ctx.reply(
    helpText,
    Markup.inlineKeyboard([
      Markup.button.callback(
        isRu ? '‚¨ÖÔ∏è –ù–∞–∑–∞–¥' : '‚¨ÖÔ∏è Back',
        'leave_help' // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π action –¥–ª—è –∫–Ω–æ–ø–∫–∏ –ù–∞–∑–∞–¥
      ),
    ])
  )

  // –í—ã–∑—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π handleLevelX –ü–û–°–õ–ï –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è,
  // –µ—Å–ª–∏ —ç—Ç–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ (—á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å –¥–æ–ø. –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–ª–∏ –∫–Ω–æ–ø–∫–∏)
  // –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ –î–í–£–• —Å–æ–æ–±—â–µ–Ω–∏–π. –í–æ–∑–º–æ–∂–Ω–æ, –ª—É—á—à–µ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å
  // –ª–æ–≥–∏–∫—É handleLevelX –ø—Ä—è–º–æ –≤ switch-case –≤—ã—à–µ, –µ—Å–ª–∏ –æ–Ω–∞ –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç.
  // –ü–æ–∫–∞ –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–∞–∫ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏, –Ω–æ —ç—Ç–æ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ –¥–ª—è —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞.
  if (requiresLevelHandler) {
    switch (mode) {
      case ModeEnum.DigitalAvatarBody:
        await handleLevel1(ctx)
        break
      case ModeEnum.NeuroPhoto:
        await handleLevel2(ctx)
        break
      case ModeEnum.ImageToPrompt:
        await handleLevel3(ctx)
        break
      case ModeEnum.Avatar:
        await handleLevel4(ctx)
        break
      case ModeEnum.ChatWithAvatar:
        await handleLevel5(ctx)
        break
      case ModeEnum.SelectModel:
        await handleLevel6(ctx)
        break
      case ModeEnum.Voice:
        await handleLevel7(ctx)
        break
      case ModeEnum.TextToSpeech:
        await handleLevel8(ctx)
        break
      case ModeEnum.ImageToVideo:
        await handleLevel9(ctx)
        break
      case ModeEnum.TextToImage:
        await handleLevel10(ctx)
        break
      case ModeEnum.TextToVideo:
        await handleLevel11(ctx)
        break
      case ModeEnum.ChangeSize:
        await handleLevel12(ctx)
        break
      case ModeEnum.Invite:
        await handleLevel13(ctx)
        break
      // default –Ω–µ –Ω—É–∂–µ–Ω, —Ç.–∫. requiresLevelHandler –±—É–¥–µ—Ç false
    }
  }
})

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
helpScene.action('leave_help', async ctx => {
  try {
    await ctx.answerCbQuery()
    await ctx.deleteMessage() // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø—Ä–∞–≤–∫–æ–π –∏ –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
  } catch (error) {
    console.error('Error handling leave_help action:', error)
    // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è/–æ—Ç–≤–µ—Ç–∞, –µ—Å–ª–∏ –æ–Ω–∏ –≤–æ–∑–Ω–∏–∫–ª–∏
  }
  // –ü—Ä–æ—Å—Ç–æ –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Å—Ü–µ–Ω—ã helpScene, –≤–æ–∑–≤—Ä–∞—â–∞—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  await ctx.scene.leave()
})
