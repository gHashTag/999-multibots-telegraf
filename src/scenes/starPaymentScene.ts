import { Markup, Scenes } from 'telegraf'
import { MyContext } from '@/interfaces'
import { isRussian } from '@/helpers'
import { handleSelectStars, handleBuySubscription } from '@/handlers'
import { starAmounts } from '@/price/helpers/starAmounts' // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
import { setPayments } from '@/core/supabase'
import { getBotNameByToken } from '@/core'
import { logger } from '@/utils/logger'
import { ModeEnum } from '@/interfaces/modes'
import { handleTopUp } from '@/handlers/paymentHandlers/handleTopUp'

export const starPaymentScene = new Scenes.BaseScene<MyContext>(
  ModeEnum.StarPaymentScene
)
//
// –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É: –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ–∫—É–ø–∫–∏ –∑–≤–µ–∑–¥ –∏–ª–∏ –æ–ø—Ü–∏—é –ø–æ–∫—É–ø–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏
starPaymentScene.enter(async ctx => {
  logger.info('### starPaymentScene ENTERED ###', {
    scene: ModeEnum.StarPaymentScene,
    step: 'enter',
    telegram_id: ctx.from?.id,
  })
  const isRu = isRussian(ctx)

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–∏—à–ª–∏ –ª–∏ –º—ã —Å—é–¥–∞ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –ö–û–ù–ö–†–ï–¢–ù–û–ô –ø–æ–¥–ø–∏—Å–∫–∏
  if (ctx.session.selectedPayment && ctx.session.selectedPayment.subscription) {
    const subscriptionToBuy = ctx.session.selectedPayment.subscription
    logger.info(
      `[${ModeEnum.StarPaymentScene}] Entered scene to buy subscription: ${subscriptionToBuy}`,
      {
        telegram_id: ctx.from?.id,
        selectedPayment: ctx.session.selectedPayment,
      }
    )
    // –ù–∞–ø—Ä—è–º—É—é –≤—ã–∑—ã–≤–∞–µ–º –ª–æ–≥–∏–∫—É –ø–æ–∫—É–ø–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏
    // –ü–µ—Ä–µ–¥–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏ —è–∑—ã–∫, handleBuySubscription –≤–æ–∑—å–º–µ—Ç –¥–µ—Ç–∞–ª–∏ –∏–∑ —Å–µ—Å—Å–∏–∏
    await handleBuySubscription({ ctx, isRu })
    // handleBuySubscription –¥–æ–ª–∂–µ–Ω —Å–∞–º –≤—ã–π—Ç–∏ –∏–∑ —Å—Ü–µ–Ω—ã –∏–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –¥–∞–ª—å–Ω–µ–π—à–∏–µ —à–∞–≥–∏
  } else {
    // –ï—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–¥–ø–∏—Å–∫–µ –Ω–µ—Ç, –∑–Ω–∞—á–∏—Ç, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å
    logger.info(
      `[${ModeEnum.StarPaymentScene}] Entered scene for star top-up. Offering package selection.`,
      {
        telegram_id: ctx.from?.id,
      }
    )
    // –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤—ã–±–æ—Ä –ø–∞–∫–µ—Ç–∞ –∑–≤–µ–∑–¥
    await handleSelectStars({ ctx, isRu, starAmounts })
  }
})

// –í—ã—Ö–æ–¥ –∏–∑ —Å—Ü–µ–Ω—ã
starPaymentScene.hears(['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'üè† Main menu'], async ctx => {
  logger.info(
    `[${ModeEnum.StarPaymentScene}] Leaving scene via Main Menu button`,
    {
      telegram_id: ctx.from?.id,
    }
  )
  await ctx.scene.enter(ModeEnum.MainMenu)
})

// Action handler for star top-up buttons
starPaymentScene.action(/top_up_(\d+)/, handleTopUp)
