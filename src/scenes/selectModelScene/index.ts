import { Scenes } from 'telegraf'
import { MyContext } from '@/types'
import { logger } from '@/utils/logger'
import { ModeEnum } from '@/types/modes'

export const selectModelScene = new Scenes.BaseScene<MyContext>('select_model')

selectModelScene.enter(async ctx => {
  logger.info('üéØ –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏', {
    telegram_id: ctx.from?.id,
    mode: ctx.session?.mode,
    current_scene: ctx.scene.current?.id,
    selected_model: ctx.session?.selected_model,
  })

  await ctx.reply(
    '–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ —Ç–µ–ª–∞:\n\n' +
      '1. FLUX - –±–∞–∑–æ–≤–∞—è –º–æ–¥–µ–ª—å\n' +
      '2. FLUX PRO - –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –º–æ–¥–µ–ª—å —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –∫–∞—á–µ—Å—Ç–≤–æ–º'
  )
})

selectModelScene.on('message', async ctx => {
  if (!ctx.message || !('text' in ctx.message)) {
    logger.warn('‚ö†Ô∏è –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ —Ç–µ–∫—Å—Ç–∞', {
      telegram_id: ctx.from?.id,
      messageType: ctx.message ? typeof ctx.message : 'undefined',
    })
    await ctx.reply(
      '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º –º–æ–¥–µ–ª–∏'
    )
    return
  }

  logger.info('üì© –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Å—Ü–µ–Ω–µ –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏', {
    telegram_id: ctx.from?.id,
    messageText: ctx.message.text,
    mode: ctx.session?.mode,
  })

  const messageText = ctx.message.text.toLowerCase()

  if (messageText === 'flux') {
    logger.info('üéØ –í—ã–±—Ä–∞–Ω–∞ –º–æ–¥–µ–ª—å FLUX', {
      telegram_id: ctx.from?.id,
      previousMode: ctx.session?.mode,
      selected_model: 'FLUX',
    })

    ctx.session.selected_model = 'FLUX'
    ctx.session.mode = ModeEnum.TextToImage
    await ctx.scene.enter('check_balance')
  } else if (messageText === 'flux pro') {
    logger.info('üéØ –í—ã–±—Ä–∞–Ω–∞ –º–æ–¥–µ–ª—å FLUX PRO', {
      telegram_id: ctx.from?.id,
      previousMode: ctx.session?.mode,
      selected_model: 'FLUX PRO',
    })

    ctx.session.selected_model = 'FLUX PRO'
    ctx.session.mode = ModeEnum.TextToImage
    await ctx.scene.enter('check_balance')
  } else {
    logger.warn('‚ö†Ô∏è –í—ã–±—Ä–∞–Ω–∞ –Ω–µ–≤–µ—Ä–Ω–∞—è –º–æ–¥–µ–ª—å', {
      telegram_id: ctx.from?.id,
      messageText: ctx.message.text,
    })

    await ctx.reply(
      '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π:\nFLUX –∏–ª–∏ FLUX PRO'
    )
  }
})

export default selectModelScene
