import { Scenes } from 'telegraf'
import { MyContext } from '@/interfaces'
import { isRussian } from '@/helpers/language'
import { handleHelpCancel } from '@/handlers/handleHelpCancel'
import { ModeEnum } from '@/price/helpers/modelsCost'
import { logger } from '@/utils/logger'
import { Markup } from 'telegraf'

export const selectModelScene = new Scenes.BaseScene<MyContext>(
  ModeEnum.SelectModel
)

selectModelScene.enter(async ctx => {
  logger.info('üéØ –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏', {
    description: 'Entering model selection scene',
    telegram_id: ctx.from?.id,
    current_mode: ctx.session?.mode,
    scene_id: ctx.scene?.current?.id,
    selected_model: ctx.session?.selectedModel
  })
  
  const isRu = isRussian(ctx)
  
  // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏
  const keyboard = {
    reply_markup: {
      keyboard: [
        [isRu ? 'FLUX - –±–∞–∑–æ–≤–∞—è –º–æ–¥–µ–ª—å' : 'FLUX - basic model'],
        [isRu ? 'FLUX PRO - –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –º–æ–¥–µ–ª—å' : 'FLUX PRO - advanced model'],
        [isRu ? '‚ùå –û—Ç–º–µ–Ω–∞' : '‚ùå Cancel']
      ],
      resize_keyboard: true,
      one_time_keyboard: true
    }
  }

  logger.info('‚å®Ô∏è –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã', {
    description: 'Preparing keyboard layout',
    telegram_id: ctx.from?.id,
    current_mode: ctx.session?.mode,
    keyboard_options: keyboard.reply_markup.keyboard.map(row => row[0]),
    action: 'prepare_keyboard'
  })

  await ctx.reply(
    isRu
      ? 'ü§ñ –í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ —Ç–µ–ª–∞:'
      : 'ü§ñ Choose a model for digital body creation:',
    keyboard
  )

  logger.info('üí¨ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏', {
    description: 'Sent model selection message',
    telegram_id: ctx.from?.id,
    current_mode: ctx.session?.mode,
    action: 'sent_model_selection_message',
    session_state: {
      mode: ctx.session?.mode,
      selectedModel: ctx.session?.selectedModel,
      targetScene: ctx.session?.targetScene
    }
  })
})

selectModelScene.on('message', async ctx => {
  if (!('text' in ctx.message)) {
    await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ')
    return
  }

  const messageText = ctx.message.text
  
  logger.info('üì© –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Å—Ü–µ–Ω–µ –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏', {
    description: 'Received message in model selection',
    telegram_id: ctx.from?.id,
    message_text: messageText
  })

  const isRu = isRussian(ctx)

  if (messageText === 'FLUX' || messageText === 'FLUX PRO') {
    const prevMode = ctx.session.mode
    ctx.session.selectedModel = messageText
    ctx.session.mode = messageText === 'FLUX' ? ModeEnum.DigitalAvatarBody : ModeEnum.DigitalAvatarBodyV2
    
    logger.info('‚úÖ –í—ã–±—Ä–∞–Ω–∞ –º–æ–¥–µ–ª—å', {
      description: 'Model selected',
      telegram_id: ctx.from?.id,
      selected_model: messageText,
      previous_mode: prevMode,
      new_mode: ctx.session?.mode
    })
    
    await ctx.scene.enter('check_balance')
    return
  }

  if (messageText === '‚¨ÖÔ∏è –ù–∞–∑–∞–¥') {
    await ctx.scene.enter('menu')
    return
  }

  if (messageText === '‚ùå –û—Ç–º–µ–Ω–∞' || messageText === '‚ùå Cancel') {
    logger.info('‚ùå –û—Ç–º–µ–Ω–∞ –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏', {
      description: 'Model selection cancelled',
      telegram_id: ctx.from?.id,
      action: 'cancel_model_selection'
    })

    await ctx.reply(
      isRu ? '‚ùå –í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏ –æ—Ç–º–µ–Ω–µ–Ω' : '‚ùå Model selection cancelled',
      { reply_markup: { remove_keyboard: true } }
    )

    return ctx.scene.enter('menu_scene')
  }

  logger.warn('‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä –º–æ–¥–µ–ª–∏', {
    description: 'Invalid model selection',
    telegram_id: ctx.from?.id,
    message_text: messageText
  })
  
  await ctx.reply(
    isRu
      ? '‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å, –∏—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ'
      : '‚ùå Please select a model using the buttons below'
  )
})
