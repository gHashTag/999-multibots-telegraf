import { Scenes } from 'telegraf'
import { MyContext } from '@/interfaces'
import { isRussian } from '@/helpers/language'
import { logger } from '@/utils/logger'
import { handleHelpCancel } from '@/handlers'
import { enhancePrompt } from '@/services/enhancePrompt'

export const promptEnhancerScene = new Scenes.WizardScene<MyContext>(
  'promptEnhancerScene',
  // –®–∞–≥ 1: –ó–∞–ø—Ä–æ—Å –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è
  async (ctx) => {
    const isRu = isRussian(ctx)
    
    await ctx.reply(
      isRu 
        ? '‚úçÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–æ–º–ø—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å\n\n–ü—Ä–æ–º–ø—Ç - —ç—Ç–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–ª–∏ –≤–∏–¥–µ–æ'
        : '‚úçÔ∏è Please send the prompt you want to enhance\n\nA prompt is a text description for generating an image or video',
      {
        reply_markup: { remove_keyboard: true }
      }
    )
    
    return ctx.wizard.next()
  },
  // –®–∞–≥ 2: –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–º–ø—Ç–∞
  async (ctx) => {
    const isRu = isRussian(ctx)
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–º–µ–Ω—É –æ–ø–µ—Ä–∞—Ü–∏–∏
    if (await handleHelpCancel(ctx)) {
      return ctx.scene.leave()
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–µ–∫—Å—Ç–∞
    if (!ctx.message || !('text' in ctx.message)) {
      await ctx.reply(
        isRu
          ? '‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç'
          : '‚ùå Please send a text prompt'
      )
      return
    }
    
    const prompt = ctx.message.text
    
    try {
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
      await ctx.reply(
        isRu
          ? 'üîÑ –£–ª—É—á—à–∞—é –ø—Ä–æ–º–ø—Ç...'
          : 'üîÑ Enhancing prompt...'
      )
      
      // –£–ª—É—á—à–∞–µ–º –ø—Ä–æ–º–ø—Ç
      const enhancedPrompt = await enhancePrompt(prompt, isRu)
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç
      await ctx.reply(
        isRu
          ? `‚ú® –£–ª—É—á—à–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è:\n\n${enhancedPrompt}\n\n–¢–µ–ø–µ—Ä—å —ç—Ç–æ—Ç –ø—Ä–æ–º–ø—Ç –¥–æ–ª–∂–µ–Ω –¥–∞–≤–∞—Ç—å –ª—É—á—à–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏.`
          : `‚ú® Enhanced version:\n\n${enhancedPrompt}\n\nThis prompt should now give better results when generating.`
      )
      
      logger.info({
        message: '–ü—Ä–æ–º–ø—Ç —É—Å–ø–µ—à–Ω–æ —É–ª—É—á—à–µ–Ω',
        description: 'Prompt enhancement completed successfully',
        telegram_id: ctx.from?.id,
      })
      
    } catch (error) {
      logger.error('Error in promptEnhancerScene:', error)
      
      await ctx.reply(
        isRu
          ? '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–ª—É—á—à–µ–Ω–∏–∏ –ø—Ä–æ–º–ø—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
          : '‚ùå An error occurred while enhancing the prompt. Please try again later.'
      )
    }
    
    return ctx.scene.leave()
  }
) 