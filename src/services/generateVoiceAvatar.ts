import { MyContext } from '@/interfaces'
import { inngest } from '@/core/inngest/clients'
import { sendGenericErrorMessage } from '@/menu'

interface VoiceAvatarResponse {
  success: boolean
  message: string
}

export async function generateVoiceAvatar(
  fileUrl: string,
  telegram_id: string,
  ctx: MyContext,
  isRu: boolean,
  botName: string
): Promise<VoiceAvatarResponse> {
  try {
    console.log('üì£ –ó–∞–ø—É—Å–∫ —Å–æ–∑–¥–∞–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∞–≤–∞—Ç–∞—Ä–∞:', {
      description: 'Starting voice avatar creation',
      telegram_id,
      username: ctx.from?.username,
    })

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –≤ Inngest –≤–º–µ—Å—Ç–æ API-–∑–∞–ø—Ä–æ—Å–∞
    await inngest.send({
      name: 'voice-avatar.requested',
      data: {
        fileUrl,
        telegram_id,
        username: ctx.from?.username || telegram_id,
        is_ru: isRu,
        bot_name: botName,
      },
    })

    console.log(
      'üì§ –°–æ–±—ã—Ç–∏–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∞–≤–∞—Ç–∞—Ä–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Inngest',
      {
        description: 'Voice avatar creation event sent to Inngest',
        telegram_id,
      }
    )

    return {
      success: true,
      message: isRu
        ? '–ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∞–≤–∞—Ç–∞—Ä–∞ –ø—Ä–∏–Ω—è—Ç –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É'
        : 'Voice avatar creation request has been accepted for processing',
    }
  } catch (error) {
    console.error('üî• –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–±—ã—Ç–∏—è –≤ Inngest:', {
      description: 'Error sending event to Inngest',
      error,
    })

    await sendGenericErrorMessage(ctx, isRu, error)

    throw error
  }
}
