import { inngest } from '@/core/inngest/clients'
import { logger } from '@/utils/logger'
import { v4 as uuidv4 } from 'uuid'
interface TextToVideoResponse {
  success: boolean
  videoUrl?: string
  message?: string
  prompt_id?: number
}

export async function generateTextToVideo(
  prompt: string,
  videoModel: string,
  telegram_id: string,
  username: string,
  isRu: boolean,
  botName: string
): Promise<TextToVideoResponse> {
  try {
    if (!prompt) {
      throw new Error(
        isRu
          ? 'generateTextToVideo: –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø—Ä–æ–º–ø—Ç'
          : 'generateTextToVideo: Could not identify prompt'
      )
    }
    if (!videoModel) {
      throw new Error(
        isRu
          ? 'generateTextToVideo: –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –º–æ–¥–µ–ª—å'
          : 'generateTextToVideo: Could not identify model'
      )
    }
    if (!telegram_id) {
      throw new Error(
        isRu
          ? 'generateTextToVideo: –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å telegram_id'
          : 'generateTextToVideo: Could not identify telegram_id'
      )
    }
    if (!username) {
      throw new Error(
        isRu
          ? 'generateTextToVideo: –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å username'
          : 'generateTextToVideo: Could not identify username'
      )
    }

    logger.info('üé¨ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–±—ã—Ç–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ', {
      description: 'Sending text-to-video generation event',
      prompt: prompt.substring(0, 50) + '...',
      videoModel,
      telegram_id,
      username,
      bot_name: botName,
    })

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –≤ Inngest
    const result = await inngest.send({
      id: `text-to-video-${uuidv4()}`,
      name: 'text-to-video/generate',
      data: {
        prompt,
        videoModel,
        telegram_id,
        username,
        is_ru: isRu,
        bot_name: botName,
      },
    })

    logger.info('‚úÖ –°–æ–±—ã—Ç–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ', {
      description: 'Text-to-video generation event sent',
      event_id: result.ids[0],
    })

    return {
      success: true,
      message: isRu
        ? '–ó–∞–ø—Ä–æ—Å –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –≤–∏–¥–µ–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω'
        : 'Video generation request sent',
    }
  } catch (error) {
    logger.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–±—ã—Ç–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ', {
      description: 'Error sending text-to-video generation event',
      error: error instanceof Error ? error.message : 'Unknown error',
    })

    throw new Error(
      isRu
        ? 'generateTextToVideo: –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –≤–∏–¥–µ–æ'
        : 'generateTextToVideo: Error occurred while sending video generation request'
    )
  }
}
