import axios from 'axios'

import { ELESTIO_URL, isDev, SECRET_API_KEY, LOCAL_SERVER_URL } from '@config'
import { MyContext } from '@/interfaces'
import { logger } from '@/utils/logger'

export const generateTextToImage = async (
  prompt: string,
  model_type: string,
  num_images: number,
  telegram_id: string,
  isRu: boolean,
  ctx: MyContext,
  botName: string
) => {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
  if (!prompt) {
    console.error('–û—à–∏–±–∫–∞: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–æ–º–ø—Ç', { telegram_id })
    await ctx.reply(
      isRu
        ? '‚ö†Ô∏è –û—à–∏–±–∫–∞: –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –ø—Ä–æ–º–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.'
        : '‚ö†Ô∏è Error: you need to specify a prompt for image generation.'
    )
    return
  }

  if (!model_type) {
    console.error('–û—à–∏–±–∫–∞: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ç–∏–ø –º–æ–¥–µ–ª–∏', { telegram_id })
    await ctx.reply(
      isRu
        ? '‚ö†Ô∏è –û—à–∏–±–∫–∞: –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å –º–æ–¥–µ–ª—å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.'
        : '‚ö†Ô∏è Error: you need to select a model for image generation.'
    )
    return
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
  const validNumImages = Number(num_images) || 1

  try {
    const url = `${
      isDev ? LOCAL_SERVER_URL : ELESTIO_URL
    }/generate/text-to-image`

    console.log('‚¨áÔ∏è –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', {
      url,
      prompt,
      model: model_type,
      num_images: validNumImages,
      telegram_id,
      bot_name: botName,
    })

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
    try {
      await ctx.reply(
        isRu
          ? 'üîÑ –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...'
          : 'üîÑ Connecting to the image generation server...'
      )

      // –ü—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å
      await axios.post(
        url,
        {
          prompt,
          model: model_type,
          num_images: validNumImages,
          telegram_id,
          username: ctx.from?.username,
          is_ru: isRu,
          bot_name: botName,
        },
        {
          headers: {
            'Content-Type': 'application/json',
            'x-secret-key': SECRET_API_KEY,
          },
          timeout: 5000, // –¢–∞–π–º–∞—É—Ç 5 —Å–µ–∫—É–Ω–¥
        }
      )

      console.log('‚úÖ –ó–∞–ø—Ä–æ—Å –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω', {
        telegram_id,
      })

      await ctx.reply(
        isRu
          ? '‚úÖ –ó–∞–ø—Ä–æ—Å –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–∏–Ω—è—Ç! –†–µ–∑—É–ª—å—Ç–∞—Ç –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —ç—Ç–æ—Ç —á–∞—Ç –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.'
          : '‚úÖ Image generation request accepted! The result will be sent to this chat shortly.'
      )
    } catch (connectionError) {
      console.error('‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', connectionError)

      await ctx.reply(
        isRu
          ? 'üòî –°–µ—Ä–≤–µ—Ä –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –ù–µ–π—Ä–æ—Ñ–æ—Ç–æ.'
          : 'üòî Image generation server is temporarily unavailable. Please try again later or use the NeuroPhoto function.'
      )

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ù–µ–π—Ä–æ—Ñ–æ—Ç–æ
      await ctx.reply(
        isRu
          ? 'üí° –°–æ–≤–µ—Ç: —Ñ—É–Ω–∫—Ü–∏—è –ù–µ–π—Ä–æ—Ñ–æ—Ç–æ —Ç–∞–∫–∂–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å! –í—ã–±–µ—Ä–∏—Ç–µ "üì∏ –ù–µ–π—Ä–æ—Ñ–æ—Ç–æ" –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.'
          : 'üí° Tip: the NeuroPhoto function also allows you to generate high-quality images and works right now! Select "üì∏ NeuroPhoto" in the main menu.'
      )
    }
  } catch (error) {
    console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', error)

    await ctx.reply(
      isRu
        ? 'üòî –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –ù–µ–π—Ä–æ—Ñ–æ—Ç–æ.'
        : 'üòî An error occurred while sending the generation request. Please try again later or use the NeuroPhoto function.'
    )
  }
}
