import { ReplyKeyboardMarkup } from 'telegraf/typings/core/types/typegram'
import { checkFullAccess } from '../handlers/checkFullAccess'
import { Markup } from 'telegraf'
import { MyContext, SubscriptionType } from '@/interfaces'

interface Level {
  ru: string
  en: string
}

// –£—Ä–æ–≤–Ω–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
export const LEVELS: Record<number, Level> = {
  1: {
    ru: '1Ô∏è‚É£ –ü–µ—Ä–≤—ã–π —É—Ä–æ–≤–µ–Ω—å - –§–æ—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è',
    en: '1Ô∏è‚É£ Level 1 - Photo Generation',
  },
  2: {
    ru: '2Ô∏è‚É£ –í—Ç–æ—Ä–æ–π —É—Ä–æ–≤–µ–Ω—å - –ù–µ–π—Ä–æ—Å—Ç–∏–ª–∏',
    en: '2Ô∏è‚É£ Level 2 - Neurostyles',
  },
  3: {
    ru: '3Ô∏è‚É£ –¢—Ä–µ—Ç–∏–π —É—Ä–æ–≤–µ–Ω—å - –•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –≥–∞–ª–µ—Ä–µ—è',
    en: '3Ô∏è‚É£ Level 3 - Art Gallery',
  },
  4: {
    ru: '4Ô∏è‚É£ –ß–µ—Ç–≤–µ—Ä—Ç—ã–π —É—Ä–æ–≤–µ–Ω—å - –í–∏–¥–µ–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è',
    en: '4Ô∏è‚É£ Level 4 - Video Generation',
  },
  5: {
    ru: '5Ô∏è‚É£ –ü—è—Ç—ã–π —É—Ä–æ–≤–µ–Ω—å - NeuroBlogger',
    en: '5Ô∏è‚É£ Level 5 - NeuroBlogger',
  },
  6: {
    ru: '6Ô∏è‚É£ –®–µ—Å—Ç–æ–π —É—Ä–æ–≤–µ–Ω—å - –ê–≤–∞—Ç–∞—Ä',
    en: '6Ô∏è‚É£ Level 6 - Avatar',
  },
  7: {
    ru: '7Ô∏è‚É£ –°–µ–¥—å–º–æ–π —É—Ä–æ–≤–µ–Ω—å - ChatGPT 4o',
    en: '7Ô∏è‚É£ Level 7 - ChatGPT 4o',
  },
  8: {
    ru: '8Ô∏è‚É£ –í–æ—Å—å–º–æ–π —É—Ä–æ–≤–µ–Ω—å - Claude 3',
    en: '8Ô∏è‚É£ Level 8 - Claude 3',
  },
  9: {
    ru: '9Ô∏è‚É£ –î–µ–≤—è—Ç—ã–π —É—Ä–æ–≤–µ–Ω—å - LLM-–º–∏–∫—Å',
    en: '9Ô∏è‚É£ Level 9 - LLM-mix',
  },
  10: {
    ru: 'üîü –î–µ—Å—è—Ç—ã–π —É—Ä–æ–≤–µ–Ω—å - –õ–∏—á–Ω—ã–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç—ã',
    en: 'üîü Level 10 - Personal assistants',
  },
}

// –¢–µ–∫—Å—Ç–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é —Å –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏
export const levels = {
  ...LEVELS,
  // –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
  100: {
    title_ru: 'üíé –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å',
    title_en: 'üíé Top up balance',
  },
  101: {
    title_ru: 'ü§ë –ë–∞–ª–∞–Ω—Å',
    title_en: 'ü§ë Balance',
  },
  103: {
    title_ru: 'üí¨ –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞',
    title_en: 'üí¨ Support',
  },
  105: {
    title_ru: 'üí´ –û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É',
    title_en: 'üí´ Subscribe',
  },
  // –ù–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞ –¥–ª—è —Ü–µ–Ω
  106: {
    title_ru: 'üí∞ –¶–µ–Ω—ã',
    title_en: 'üí∞ Prices',
  },
}

const adminIds = process.env.ADMIN_IDS?.split(',') || []

// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
interface MainMenuParams {
  isRu: boolean
  inviteCount: number
  subscription: SubscriptionType | null
  level: number
  ctx: MyContext
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export const mainMenu = async ({
  isRu,
  inviteCount,
  subscription,
  level,
  ctx,
}: MainMenuParams): Promise<Markup.Markup<ReplyKeyboardMarkup>> => {
  console.log('üíª CASE: mainMenu')
  let hasFullAccess = checkFullAccess(subscription)

  // –î–æ—Å—Ç—É–ø–Ω—ã–µ —É—Ä–æ–≤–Ω–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–æ–¥–ø–∏—Å–∫–∏
  const availableLevels: Record<string, number[]> = {
    [SubscriptionType.NEUROPHOTO]: [1, 2, 3],
    [SubscriptionType.NEUROBASE]: [1, 2, 3, 4],
    [SubscriptionType.NEUROTESTER]: [1, 2, 3, 4, 5],
    [SubscriptionType.NEUROBLOGGER]: [1, 2, 3, 4, 5],
    [SubscriptionType.STARS]: [1]
  }

  // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —É—Ä–æ–≤–Ω–∏
  const levelsArray =
    subscription && subscription in availableLevels
      ? availableLevels[subscription]
      : [1]

  // –§–∏–ª—å—Ç—Ä—É–µ–º –æ—Ç–∫–ª—é—á–µ–Ω–Ω—ã–µ —É—Ä–æ–≤–Ω–∏ –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
  const buttonsText = Object.entries(LEVELS)
    .filter(([key]) => levelsArray.includes(parseInt(key)))
    .map(([, value]) => (isRu ? value.ru : value.en))

  // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —è–∑—ã–∫–∞
  const profileText = isRu ? 'üë§ –ü—Ä–æ—Ñ–∏–ª—å' : 'üë§ Profile'
  const balanceText = isRu ? levels[101].title_ru : levels[101].title_en
  const supportText = isRu ? levels[103].title_ru : levels[103].title_en
  const questText = isRu ? 'üéÆ –ö–≤–µ—Å—Ç' : 'üéÆ Quest'
  const subscribeText = isRu ? levels[105].title_ru : levels[105].title_en
  const chatText = isRu ? 'üó£ –û–±—â–µ–Ω–∏–µ —Å –∞–≤–∞—Ç–∞—Ä–æ–º' : 'üó£ Chat with Avatar'
  const pricesText = isRu ? levels[106].title_ru : levels[106].title_en

  // –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã (–ø–æ 2 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥, –∫—Ä–æ–º–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ç—Ä–æ–∫–∏)
  const keyboard: string[][] = []
  
  // –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–∞–≤–∞ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∞–≤–∞—Ç–∞—Ä–∞ —Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –Ω–µ–≥–æ
  if (subscription && 
    [SubscriptionType.NEUROBASE, SubscriptionType.NEUROTESTER, SubscriptionType.NEUROBLOGGER].includes(subscription)) {
    keyboard.push([chatText])
  }

  // –î–æ–±–∞–≤–ª—è–µ–º —É—Ä–æ–≤–Ω–∏ –ø–æ –¥–≤–∞ –≤ —Ä—è–¥
  for (let i = 0; i < buttonsText.length; i += 2) {
    const row = []
    row.push(buttonsText[i])
    if (i + 1 < buttonsText.length) {
      row.push(buttonsText[i + 1])
    }
    keyboard.push(row)
  }

  // –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –≤ –º–µ–Ω—é
  keyboard.push([profileText, balanceText])
  keyboard.push([questText, supportText])
  keyboard.push([subscribeText, pricesText]) // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —Ü–µ–Ω —Ä—è–¥–æ–º —Å –ø–æ–¥–ø–∏—Å–∫–æ–π

  const userId = ctx.from?.id?.toString()

  if (userId && adminIds.includes(userId)) {
    // –ò–∑–º–µ–Ω—è–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω–∞
    keyboard.push([
      isRu ? 'ü§ñ –¶–∏—Ñ—Ä–æ–≤–æ–µ —Ç–µ–ª–æ 2' : 'ü§ñ Digital Body 2',
      isRu ? 'üì∏ –ù–µ–π—Ä–æ—Ñ–æ—Ç–æ 2' : 'üì∏ NeuroPhoto 2'
    ])
  }

  return Markup.keyboard(keyboard).resize()
}
