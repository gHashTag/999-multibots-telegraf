import { Markup } from 'telegraf'
import type { Message, Update } from "telegraf/types"

/**
 * –°–æ–∑–¥–∞–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.
 * @param isRu - –§–ª–∞–≥ —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞.
 * @param options - –û–ø—Ü–∏–∏ –¥–ª—è –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏–∏ –∫–Ω–æ–ø–æ–∫.
 * @param options.hideBack - –°–∫—Ä—ã—Ç—å –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥".
 * @param options.hideHelp - –°–∫—Ä—ã—Ç—å –∫–Ω–æ–ø–∫—É "–°–ø—Ä–∞–≤–∫–∞".
 * @param options.hideMainMenu - –°–∫—Ä—ã—Ç—å –∫–Ω–æ–ø–∫—É "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é".
 * @returns {Markup.Markup<InlineKeyboardMarkup>} Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ Telegraf.
 */
export function createNavigationInlineKeyboard(
  isRu: boolean,
  options: {
    hideBack?: boolean
    hideHelp?: boolean
    hideMainMenu?: boolean
  } = {}
): Markup.Markup<InlineKeyboardMarkup> {
  const buttons = []

  if (!options.hideBack) {
    buttons.push(
      Markup.button.callback(isRu ? '‚¨ÖÔ∏è –ù–∞–∑–∞–¥' : '‚¨ÖÔ∏è Back', 'go_back')
    )
  }

  if (!options.hideHelp) {
    buttons.push(
      Markup.button.callback(isRu ? '‚ùì –°–ø—Ä–∞–≤–∫–∞' : '‚ùì Help', 'go_help')
    )
  }

  if (!options.hideMainMenu) {
    buttons.push(
      Markup.button.callback(
        isRu ? 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é' : 'üè† Main menu',
        'go_main_menu'
      )
    )
  }

  // –†–∞—Å–ø–æ–ª–∞–≥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –æ–¥–∏–Ω —Ä—è–¥, –µ—Å–ª–∏ –∏—Ö 3 –∏–ª–∏ –º–µ–Ω—å—à–µ, –∏–Ω–∞—á–µ –≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ
  if (buttons.length <= 3) {
    return Markup.inlineKeyboard(buttons)
  } else {
    // –ü—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –º–∞—Å—Å–∏–≤ –∫–Ω–æ–ø–æ–∫, Telegraf —Å–∞–º —Ä–∞—Å–ø–æ–ª–æ–∂–∏—Ç –∏—Ö
    // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è —Ä–∞–∑–±–∏–µ–Ω–∏—è –Ω–∞ —Ä—è–¥—ã –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    return Markup.inlineKeyboard(buttons)
  }
}
