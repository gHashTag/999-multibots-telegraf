import express from 'express'
import cors from 'cors'

import dotenv from 'dotenv'
import { serve } from 'inngest/express'
import { inngest } from './core/inngest/clients'
import { neuroImageGeneration, generateModelTraining, modelTrainingV2, broadcastMessage, paymentProcessor } from './inngest-functions'

dotenv.config()

const app = express()

// Middleware
app.use(cors())
app.use(express.json())

// –ú–∞—Ä—à—Ä—É—Ç—ã API
app.get('/api', (req, res) => {
  console.log('üöÄ API –∑–∞–ø—Ä–æ—Å –ø–æ–ª—É—á–µ–Ω!') // Emoji –≤ –ª–æ–≥–∞—Ö –∫–∞–∫ –∑–∞–ø—Ä–æ—à–µ–Ω–æ
  res.json({
    message: 'Hello World API!',
    status: 'success',
    timestamp: new Date().toISOString(),
  })
})

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞
app.get('/api/status', (req, res) => {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞') // Emoji –≤ –ª–æ–≥–∞—Ö
  res.json({
    status: 'online',
    timestamp: new Date().toISOString(),
  })
})

// –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è Inngest
app.use(
  '/api/inngest',
  serve({
    client: inngest,
    functions: [
      neuroImageGeneration,
      generateModelTraining,
      modelTrainingV2,
      broadcastMessage,
      paymentProcessor,
    ],
  })
)

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ 404
app.use((req, res) => {
  console.log('‚ö†Ô∏è –ú–∞—Ä—à—Ä—É—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω: ' + req.originalUrl) // Emoji –≤ –ª–æ–≥–∞—Ö
  res.status(404).json({
    message: 'Route not found',
    status: 'error',
  })
})

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ API
const startApiServer = () => {
  const apiPort = process.env.API_PORT || 2999

  app.listen(apiPort, () => {
    console.log(`üåê API —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${apiPort}`) // Emoji –≤ –ª–æ–≥–∞—Ö
  })
}

export default startApiServer
