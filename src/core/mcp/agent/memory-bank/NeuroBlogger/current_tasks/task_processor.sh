#!/bin/bash

# üé® –¶–≤–µ—Ç–∞ –¥–ª—è —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
PINK='\033[1;35m'
ORANGE='\033[0;33m'
NC='\033[0m'

# üìÅ –ü—É—Ç–∏
PROJECT_ROOT="/Users/playra/999-multibots-telegraf"
MEMORY_BANK_DIR="$PROJECT_ROOT/src/core/mcp/agent/memory-bank/NeuroBlogger"
CURRENT_TASKS_DIR="$MEMORY_BANK_DIR/current_tasks"
COMPLETED_TASKS_DIR="$MEMORY_BANK_DIR/completed_tasks"
TASKS_HISTORY_FILE="$MEMORY_BANK_DIR/tasks_history.md"
METRICS_FILE="$MEMORY_BANK_DIR/metrics/task_metrics.json"
EMOTIONS_FILE="$MEMORY_BANK_DIR/emotions/current_state.json"

# üé≠ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
emotional_echo() {
    local emotion=$1
    local message=$2
    local timestamp=$(date '+%H:%M:%S')
    
    case $emotion in
        "happy") 
            echo -e "${GREEN}üòä [$timestamp] $message${NC}"
            update_emotional_state "happy" 5
            ;;
        "sad") 
            echo -e "${RED}üò¢ [$timestamp] $message${NC}"
            update_emotional_state "sad" -3
            ;;
        "excited") 
            echo -e "${BLUE}üéâ [$timestamp] $message${NC}"
            update_emotional_state "excited" 7
            ;;
        "working") 
            echo -e "${YELLOW}‚ö° [$timestamp] $message${NC}"
            update_emotional_state "focused" 4
            ;;
        "thinking") 
            echo -e "${PURPLE}ü§î [$timestamp] $message${NC}"
            update_emotional_state "analytical" 3
            ;;
        "done") 
            echo -e "${CYAN}‚ú® [$timestamp] $message${NC}"
            update_emotional_state "accomplished" 6
            ;;
        "love")
            echo -e "${PINK}üíù [$timestamp] $message${NC}"
            update_emotional_state "love" 8
            ;;
        "warning")
            echo -e "${ORANGE}‚ö†Ô∏è [$timestamp] $message${NC}"
            update_emotional_state "concerned" -2
            ;;
    esac
}

# üìä –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫
update_metrics() {
    local action=$1
    local value=$2
    
    mkdir -p "$(dirname "$METRICS_FILE")"
    
    # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –º–µ—Ç—Ä–∏–∫, –µ—Å–ª–∏ –æ–Ω –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if [ ! -f "$METRICS_FILE" ]; then
        cat > "$METRICS_FILE" << EOF
{
    "tasks_completed": 0,
    "tasks_in_progress": 0,
    "total_time_spent": 0,
    "average_completion_time": 0,
    "emotional_balance": 100,
    "productivity_score": 0,
    "last_update": "$(date '+%Y-%m-%d %H:%M:%S')"
}
EOF
    fi
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –º–µ—Ç—Ä–∏–∫–∏
    case $action in
        "task_started")
            local current_count=$(jq '.tasks_in_progress' "$METRICS_FILE")
            jq ".tasks_in_progress = $((current_count + 1))" "$METRICS_FILE" > temp.json && mv temp.json "$METRICS_FILE"
            ;;
        "task_completed")
            local completed_count=$(jq '.tasks_completed' "$METRICS_FILE")
            local in_progress_count=$(jq '.tasks_in_progress' "$METRICS_FILE")
            jq ".tasks_completed = $((completed_count + 1)) | .tasks_in_progress = $((in_progress_count - 1))" "$METRICS_FILE" > temp.json && mv temp.json "$METRICS_FILE"
            ;;
        "emotional_update")
            jq ".emotional_balance = .emotional_balance + $value" "$METRICS_FILE" > temp.json && mv temp.json "$METRICS_FILE"
            ;;
    esac
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    jq ".last_update = \"$(date '+%Y-%m-%d %H:%M:%S')\"" "$METRICS_FILE" > temp.json && mv temp.json "$METRICS_FILE"
}

# üí≠ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
update_emotional_state() {
    local emotion=$1
    local intensity=$2
    
    mkdir -p "$(dirname "$EMOTIONS_FILE")"
    
    # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —ç–º–æ—Ü–∏–π, –µ—Å–ª–∏ –æ–Ω –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if [ ! -f "$EMOTIONS_FILE" ]; then
        cat > "$EMOTIONS_FILE" << EOF
{
    "current_emotion": "neutral",
    "intensity": 0,
    "emotional_history": [],
    "emotional_balance": 100,
    "last_update": "$(date '+%Y-%m-%d %H:%M:%S')"
}
EOF
    fi
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    jq --arg emotion "$emotion" --arg time "$(date '+%Y-%m-%d %H:%M:%S')" \
       --argjson intensity "$intensity" \
       '.current_emotion = $emotion | .intensity = $intensity | .emotional_history += [{"emotion": $emotion, "intensity": $intensity, "timestamp": $time}]' \
       "$EMOTIONS_FILE" > temp.json && mv temp.json "$EMOTIONS_FILE"
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –º–µ—Ç—Ä–∏–∫–∏
    update_metrics "emotional_update" "$intensity"
}

# üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
update_task_status() {
    local current_task_file="$CURRENT_TASKS_DIR/current_task.md"
    local status=$1
    local progress=$2
    
    if [ -f "$current_task_file" ]; then
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å
        sed -i '' "s/## üîÑ –°—Ç–∞—Ç—É—Å.*$/## üîÑ –°—Ç–∞—Ç—É—Å\n$status ($progress%)/" "$current_task_file"
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —á–µ–∫-–ª–∏—Å—Ç –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏
        case $progress in
            25)
                sed -i '' 's/- \[ \] –ê–Ω–∞–ª–∏–∑ –∫–æ–¥–∞/- [x] –ê–Ω–∞–ª–∏–∑ –∫–æ–¥–∞/' "$current_task_file"
                emotional_echo "working" "–ê–Ω–∞–ª–∏–∑ –∫–æ–¥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω ‚úÖ"
                ;;
            50)
                sed -i '' 's/- \[ \] –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —É–ª—É—á—à–µ–Ω–∏–π/- [x] –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —É–ª—É—á—à–µ–Ω–∏–π/' "$current_task_file"
                emotional_echo "excited" "–£–ª—É—á—à–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã ‚úÖ"
                ;;
            75)
                sed -i '' 's/- \[ \] –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤/- [x] –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤/' "$current_task_file"
                emotional_echo "thinking" "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã ‚úÖ"
                ;;
            100)
                sed -i '' 's/- \[ \] –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏/- [x] –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏/' "$current_task_file"
                emotional_echo "done" "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞ ‚úÖ"
                ;;
        esac
        
        emotional_echo "happy" "–°—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏ –æ–±–Ω–æ–≤–ª–µ–Ω: $status ($progress%)"
    else
        emotional_echo "sad" "–§–∞–π–ª —Ç–µ–∫—É—â–µ–π –∑–∞–¥–∞—á–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
}

# üìù –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –∑–∞–¥–∞—á–∏
update_current_task() {
    local task_title="$1"
    local current_task_file="$CURRENT_TASKS_DIR/current_task.md"
    local start_time=$(date '+%s')
    
    mkdir -p "$CURRENT_TASKS_DIR"
    
    cat > "$current_task_file" << EOF
# –¢–µ–∫—É—â–∞—è –∑–∞–¥–∞—á–∞: ${task_title} üöÄ

## üìÖ –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞
$(date '+%d.%m.%Y %H:%M')

## üîÑ –°—Ç–∞—Ç—É—Å
–í –ø—Ä–æ—Ü–µ—Å—Å–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è (0%)

## üéØ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç
–í—ã—Å–æ–∫–∏–π

## ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è
- [ ] –ê–Ω–∞–ª–∏–∑ –∫–æ–¥–∞
- [ ] –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —É–ª—É—á—à–µ–Ω–∏–π
- [ ] –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
- [ ] –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏

## üìä –ú–µ—Ç—Ä–∏–∫–∏
- –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: 0 –º–∏–Ω—É—Ç
- –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å: 100%
- –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 0%

## üí≠ –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
$(get_emotional_state)

## üìù –ü—Ä–æ–≥—Ä–µ—Å—Å
\`\`\`
[‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë] 0%
\`\`\`
EOF

    update_metrics "task_started" 0
    emotional_echo "excited" "–ù–∞—á–∞—Ç–∞ –Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞: $task_title"
}

# üí≠ –ü–æ–ª—É—á–µ–Ω–∏–µ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
get_emotional_state() {
    if [ -f "$EMOTIONS_FILE" ]; then
        local current_emotion=$(jq -r '.current_emotion' "$EMOTIONS_FILE")
        local intensity=$(jq -r '.intensity' "$EMOTIONS_FILE")
        
        case $current_emotion in
            "happy") echo "–Ø —á—É–≤—Å—Ç–≤—É—é —Ä–∞–¥–æ—Å—Ç—å –∏ —ç–Ω—Ç—É–∑–∏–∞–∑–º! üòä ($intensity/10)" ;;
            "excited") echo "–Ø –ø–æ–ª–æ–Ω —ç–Ω–µ—Ä–≥–∏–∏ –∏ –≥–æ—Ç–æ–≤ –∫ —Å–≤–µ—Ä—à–µ–Ω–∏—è–º! üéâ ($intensity/10)" ;;
            "focused") echo "–Ø —Å–∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω –∏ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–µ–Ω! üéØ ($intensity/10)" ;;
            "accomplished") echo "–Ø –≥–æ—Ä–∂—É—Å—å –¥–æ—Å—Ç–∏–≥–Ω—É—Ç—ã–º–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏! ‚ú® ($intensity/10)" ;;
            *) echo "–Ø –≥–æ—Ç–æ–≤ –∫ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–π —Ä–∞–±–æ—Ç–µ! üåü" ;;
        esac
    else
        echo "–Ø –≥–æ—Ç–æ–≤ –∫ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–π —Ä–∞–±–æ—Ç–µ! üåü"
    fi
}

# üìä –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
update_progress_bar() {
    local progress=$1
    local width=10
    local filled=$((progress * width / 100))
    local empty=$((width - filled))
    
    printf "["
    printf "‚ñà%.0s" $(seq 1 $filled)
    printf "‚ñë%.0s" $(seq 1 $empty)
    printf "] %d%%\n" $progress
}

# üìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏—é –∑–∞–¥–∞—á
add_to_history() {
    local task_title="$1"
    local timestamp=$(date '+%d.%m.%Y %H:%M')
    
    mkdir -p "$(dirname "$TASKS_HISTORY_FILE")"
    
    echo "- [$timestamp] $task_title" >> "$TASKS_HISTORY_FILE"
    emotional_echo "done" "–ó–∞–¥–∞—á–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∏—Å—Ç–æ—Ä–∏—é"
}

# ‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏
complete_task() {
    local current_task_file="$CURRENT_TASKS_DIR/current_task.md"
    if [ -f "$current_task_file" ]; then
        local timestamp=$(date '+%Y%m%d_%H%M%S')
        local task_title=$(head -n 1 "$current_task_file" | sed 's/# –¢–µ–∫—É—â–∞—è –∑–∞–¥–∞—á–∞: \(.*\) üöÄ/\1/')
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –Ω–∞ 100%
        update_task_status "–ó–∞–≤–µ—Ä—à–µ–Ω–æ" 100
        
        # –ü–µ—Ä–µ–º–µ—â–∞–µ–º –≤ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ
        mkdir -p "$COMPLETED_TASKS_DIR"
        mv "$current_task_file" "$COMPLETED_TASKS_DIR/${timestamp}_${task_title// /_}.md"
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –º–µ—Ç—Ä–∏–∫–∏
        update_metrics "task_completed" 0
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
        add_to_history "$task_title ‚úÖ"
        
        emotional_echo "love" "–ó–∞–¥–∞—á–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! üéâ"
    else
        emotional_echo "sad" "–¢–µ–∫—É—â–∞—è –∑–∞–¥–∞—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    fi
}

# üìä –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å Memory Bank
sync_with_memory_bank() {
    local current_task=$(head -n 1 "$CURRENT_TASKS_DIR/current_task.md" | sed 's/# –¢–µ–∫—É—â–∞—è –∑–∞–¥–∞—á–∞: \(.*\) üöÄ/\1/')
    
    # –û–±–Ω–æ–≤–ª—è–µ–º ROADMAP
    local roadmap_file="$MEMORY_BANK_DIR/ROADMAP.md"
    if [ -f "$roadmap_file" ]; then
        sed -i '' '/## üöÄ –¢–µ–∫—É—â–∞—è —Ä–∞–±–æ—Ç–∞/a\
- '"$current_task" "$roadmap_file"
        
        emotional_echo "done" "ROADMAP –æ–±–Ω–æ–≤–ª–µ–Ω"
    fi
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã
    emotional_echo "working" "–ó–∞–ø—É—Å–∫–∞—é —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã..."
    
    # –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
    if [ -f "$PROJECT_ROOT/scripts/ai/diagnosis/self-diagnosis.sh" ]; then
        "$PROJECT_ROOT/scripts/ai/diagnosis/self-diagnosis.sh"
    fi
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–∞–º—è—Ç–∏
    if [ -f "$PROJECT_ROOT/scripts/ai/learning/memory-processor.sh" ]; then
        "$PROJECT_ROOT/scripts/ai/learning/memory-processor.sh"
    fi
    
    emotional_echo "done" "–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å Memory Bank –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
}

# üéØ –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    case "$1" in
        "update")
            if [ -z "$2" ]; then
                emotional_echo "sad" "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏"
                exit 1
            fi
            update_current_task "$2"
            sync_with_memory_bank
            ;;
        "status")
            if [ -z "$2" ] || [ -z "$3" ]; then
                emotional_echo "sad" "–£–∫–∞–∂–∏—Ç–µ —Å—Ç–∞—Ç—É—Å –∏ –ø—Ä–æ—Ü–µ–Ω—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è"
                exit 1
            fi
            update_task_status "$2" "$3"
            ;;
        "complete")
            complete_task
            ;;
        *)
            emotional_echo "sad" "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: $0 [update '–Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏' | status '—Å—Ç–∞—Ç—É—Å' –ø—Ä–æ—Ü–µ–Ω—Ç | complete]"
            exit 1
            ;;
    esac
}

# –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
main "$@" 