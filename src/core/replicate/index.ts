import { VIDEO_MODELS_CONFIG } from '@/menu/videoModelMenu'
import { logger } from '@/utils/logger'
import { replicate } from './client'
export * from './client'

export const modelPricing: Record<string, string> = {
  'black-forest-labs/flux-1.1-pro': '$0.040 / image',
  'black-forest-labs/flux-1.1-pro-ultra': '$0.060 / image',
  'black-forest-labs/flux-canny-dev': '$0.025 / image',
  'black-forest-labs/flux-canny-pro': '$0.050 / image',
  'black-forest-labs/flux-depth-dev': '$0.025 / image',
  'black-forest-labs/flux-depth-pro': '$0.050 / image',
  'black-forest-labs/flux-dev': '$0.025 / image',
  'black-forest-labs/flux-dev-lora': '$0.032 / image',
  'black-forest-labs/flux-fill-dev': '$0.040 / image',
  'black-forest-labs/flux-fill-pro': '$0.050 / image',
  'black-forest-labs/flux-pro': '$0.055 / image',
  'black-forest-labs/flux-redux-dev': '$0.025 / image',
  'black-forest-labs/flux-redux-schnell': '$0.003 / image',
  'black-forest-labs/flux-schnell': '$0.003 / image',
  'black-forest-labs/flux-schnell-lora': '$0.020 / image',
  'ideogram-ai/ideogram-v2': '$0.080 / image',
  'ideogram-ai/ideogram-v2-turbo': '$0.050 / image',
  'luma/photon': '$0.030 / image',
  'luma/photon-flash': '$0.010 / image',
  'recraft-ai/recraft-20b': '$0.022 / image',
  'recraft-ai/recraft-20b-svg': '$0.044 / image',
  'recraft-ai/recraft-v3': '$0.040 / image',
  'recraft-ai/recraft-v3-svg': '$0.080 / image',
  'stability-ai/stable-diffusion-3': '$0.035 / image',
  'stability-ai/stable-diffusion-3.5-large': '$0.065 / image',
  'stability-ai/stable-diffusion-3.5-large-turbo': '$0.040 / image',
  'stability-ai/stable-diffusion-3.5-medium': '$0.035 / image',
}

interface ModelConfig {
  key: string
  word: string
  description: {
    ru: string
    en: string
  }
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  getInput: (prompt: string, aspect_ratio?: string) => Record<string, any>
  price: number
}

const getInput = (prompt: string, aspect_ratio: string) => {
  console.log(aspect_ratio, 'getInput aspect_ratio')
  let width: number, height: number

  switch (aspect_ratio) {
    case '1:1':
      width = 1024
      height = 1024
      break
    case '16:9':
      width = 1368
      height = 768
      break
    case '9:16':
      width = 768
      height = 1368
      break
    default:
      width = 1368
      height = 1024
      break
  }

  return {
    prompt,
    aspect_ratio,
    width,
    height,
    negative_prompt:
      'nsfw, erotic, violence, bad anatomy, bad hands, text, error, missing fingers, extra digit, fewer digits, cropped, worst quality, low quality, normal quality, jpeg artifacts, signature, watermark, username, blurry',
  }
}
export const models: Record<string, ModelConfig> = {
  flux: {
    key: 'black-forest-labs/flux-1.1-pro-ultra',
    word: 'ultra realistic photograph, 8k uhd, high quality',
    description: {
      ru: 'üé® Flux - —Ñ–æ—Ç–æ—Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—ã—Å–æ–∫–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞',
      en: 'üé® Flux - photorealistic high quality images',
    },
    getInput: (prompt, aspect_ratio) =>
      getInput(prompt, aspect_ratio || '16:9'),
    price: 0.06,
  },
  sdxl: {
    key: 'stability-ai/sdxl:7762fd07cf82c948538e41f63f77d685e02b063e37e496e96eefd46c929f9bdc',
    word: 'ultra realistic photograph, 8k uhd, high quality',
    description: {
      ru: 'üé® SDXL - —Ñ–æ—Ç–æ—Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—ã—Å–æ–∫–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞',
      en: 'üé® SDXL - photorealistic high quality images',
    },
    getInput: (prompt, aspect_ratio) =>
      getInput(prompt, aspect_ratio || '16:9'),
    price: 0.04,
  },
  sd3: {
    key: 'stability-ai/stable-diffusion-3.5-large-turbo',
    word: '',
    description: {
      ru: 'üé® SD3 - —Ñ–æ—Ç–æ—Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—ã—Å–æ–∫–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞',
      en: 'üé® SD3 - photorealistic high quality images',
    },
    getInput: (prompt, aspect_ratio) =>
      getInput(prompt, aspect_ratio || '16:9'),
    price: 0.04,
  },
  recraft: {
    key: 'recraft-ai/recraft-v3',
    word: '',
    description: {
      ru: 'üé® Recraft - —Ñ–æ—Ç–æ—Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—ã—Å–æ–∫–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞',
      en: 'üé® Recraft - photorealistic high quality images',
    },
    getInput: (prompt, aspect_ratio) =>
      getInput(prompt, aspect_ratio || '16:9'),
    price: 0.022,
  },
  photon: {
    key: 'luma/photon',
    word: '',
    description: {
      ru: 'üé® Photon - —Ñ–æ—Ç–æ—Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—ã—Å–æ–∫–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞',
      en: 'üé® Photon - photorealistic high quality images',
    },
    getInput: (prompt, aspect_ratio) =>
      getInput(prompt, aspect_ratio || '16:9'),
    price: 0.03,
  },
  lee_solar: {
    key: 'ghashtag/lee_solar:7b7e9744c88e23c0eeccb9874c36336f73fce9d3d17992c8acabb04e67ee03b4',
    word: '',
    description: {
      ru: 'üé® Lee Solar - –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è',
      en: 'üé® Lee Solar - astrological images',
    },
    getInput: (prompt, aspect_ratio) =>
      getInput(prompt, aspect_ratio || '16:9'),
    price: 0.022,
  },
  dpbelarusx: {
    key: 'ghashtag/neuro_sage:89260ba5e46d2439111ab85686bfed9f08ff3a1cdc684ced5c1d04c639a0270b',
    word: '',
    description: {
      ru: 'üé® DPBelarusX - –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è',
      en: 'üé® DPBelarusX - astrological images',
    },
    getInput: (prompt, aspect_ratio) =>
      getInput(prompt, aspect_ratio || '16:9'),
    price: 0.022,
  },
  neuro_coder: {
    key: 'ghashtag/neuro_sage:65d4aa45988460fc1966dddd91245f7838161a0eec9847ac783fd1918b704033',
    word: 'NEURO_SAGE',
    description: {
      ru: 'üé® NeuroCoder - –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è',
      en: 'üé® NeuroCoder - astrological images',
    },
    getInput: (prompt, aspect_ratio) =>
      getInput(prompt, aspect_ratio || '16:9'),
    price: 0.022,
  },
}

export const processVideoGeneration = async (
  videoModel: string,
  aspect_ratio: string,
  prompt: string
) => {
  const modelConfig = VIDEO_MODELS_CONFIG[videoModel]

  if (!modelConfig) {
    logger.error('‚ùå –ú–æ–¥–µ–ª—å –≤–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞', {
      description: 'Video model not found',
      videoModel,
      availableModels: Object.keys(VIDEO_MODELS_CONFIG),
    })
    throw new Error(`Invalid video model: ${videoModel}`)
  }

  logger.info('üé¨ –ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ', {
    description: 'Starting video generation',
    model: videoModel,
    prompt: prompt.substring(0, 30) + '...',
    aspect_ratio,
  })

  try {
    logger.info('‚öôÔ∏è –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏', {
      description: 'Preparing generation parameters',
      model: modelConfig.api.model,
      aspect_ratio:
        typeof modelConfig.api.input.aspect_ratio === 'function'
          ? modelConfig.api.input.aspect_ratio(aspect_ratio)
          : aspect_ratio,
    })

    const output = await replicate.run(
      modelConfig.api.model as `${string}/${string}`,
      {
        input: {
          prompt,
          ...modelConfig.api.input,
          aspect_ratio:
            typeof modelConfig.api.input.aspect_ratio === 'function'
              ? modelConfig.api.input.aspect_ratio(aspect_ratio)
              : aspect_ratio,
        },
        webhook: process.env.REPLICATE_WEBHOOK_URL,
        webhook_events_filter: ['completed'],
      }
    )

    if (!output) {
      logger.error('‚ùå –ü—É—Å—Ç–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç API', {
        description: 'Empty response from API',
        model: videoModel,
      })
      throw new Error('Empty response from video generation API')
    }

    logger.info('‚úÖ –í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ', {
      description: 'Video generated successfully',
      model: videoModel,
    })

    return output
  } catch (error) {
    logger.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ', {
      description: 'Error generating video',
      model: videoModel,
      error: error instanceof Error ? error.message : 'Unknown error',
      stack: error instanceof Error ? error.stack : undefined,
    })

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –æ—à–∏–±–∫–∏ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    if (error instanceof Error) {
      if (error.message.includes('StepError')) {
        throw new Error(
          '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∏–¥–µ–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é –º–æ–¥–µ–ª—å –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ –∑–∞–ø—Ä–æ—Å.'
        )
      }
      throw error
    }

    throw new Error('Unexpected error during video generation')
  }
}
