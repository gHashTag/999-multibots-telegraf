import { supabase } from '.'
import { logger } from '@/utils/logger'
import { User } from '@/types/user.interface'
import { TelegramId } from '@/types/telegram.interface'

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –ø–æ –µ–≥–æ Telegram ID
 */
export const getUserByTelegramId = async (
  telegram_id: TelegramId,
  bot_name?: string
): Promise<User | null> => {
  try {
    logger.info('üîç –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ telegram_id', {
      description: 'Finding user by telegram_id',
      telegram_id,
      bot_name,
    })

    // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º telegram_id –∫ —Å—Ç—Ä–æ–∫–µ
    const normalizedTelegramId = String(telegram_id)

    let query = supabase
      .from('users')
      .select('*')
      .eq('telegram_id', normalizedTelegramId)

    // –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω bot_name, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ —É—Å–ª–æ–≤–∏–µ
    if (bot_name) {
      query = query.eq('bot_name', bot_name)
    }

    const { data, error } = await query.single()

    if (error && error.code !== 'PGRST116') {
      // PGRST116 - —ç—Ç–æ –∫–æ–¥ –æ—à–∏–±–∫–∏ "–Ω–µ –Ω–∞–π–¥–µ–Ω–æ", –µ–≥–æ –Ω–µ –ª–æ–≥–∏—Ä—É–µ–º –∫–∞–∫ –æ—à–∏–±–∫—É
      logger.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', {
        description: 'Error finding user',
        error: error.message,
        error_details: error,
        telegram_id,
        bot_name,
      })
      return null
    }

    if (!data) {
      logger.info('‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω:', {
        description: 'User not found',
        telegram_id,
        bot_name,
      })
      return null
    }

    logger.info('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω:', {
      description: 'User found',
      user_id: data.id,
      telegram_id,
      bot_name,
    })

    return data as User
  } catch (error) {
    logger.error('‚ùå –û—à–∏–±–∫–∞ –≤ getUserByTelegramId:', {
      description: 'Error in getUserByTelegramId function',
      error: error instanceof Error ? error.message : String(error),
      error_details: error,
      telegram_id,
      bot_name,
    })
    return null
  }
}
