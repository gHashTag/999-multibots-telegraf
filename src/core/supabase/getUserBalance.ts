import { TelegramId } from '@/interfaces/telegram.interface'
import { normalizeTelegramId } from '@/interfaces/telegram.interface'
import { supabase } from '@/core/supabase'
import { logger } from '@/utils/logger'

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –≤ payments_v2
 * –í—ã–∑—ã–≤–∞–µ—Ç SQL-—Ñ—É–Ω–∫—Ü–∏—é get_user_balance
 * –í–°–ï–ì–î–ê –ø–æ–ª—É—á–∞–µ—Ç —Å–≤–µ–∂–∏–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –ë–î (–∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —É–±—Ä–∞–Ω–æ)
 */
export const getUserBalance = async (
  telegram_id: TelegramId,
  bot_name?: string
): Promise<number> => {
  try {
    if (!telegram_id) {
      logger.warn('‚ö†Ô∏è –ó–∞–ø—Ä–æ—Å –±–∞–ª–∞–Ω—Å–∞ –±–µ–∑ telegram_id:', {
        description: 'Balance request without telegram_id',
        bot_name,
      })
      return 0
    }

    // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º telegram_id –≤ —Å—Ç—Ä–æ–∫—É
    const normalizedId = normalizeTelegramId(telegram_id)

    logger.info('üîç –ü–æ–ª—É—á–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î (–±–µ–∑ –∫—ç—à–∞):', {
      description: 'Getting user balance from database (no cache)',
      telegram_id: normalizedId,
      bot_name,
    })

    // –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ get_user_balance
    const { data: stars, error } = await supabase.rpc('get_user_balance', {
      user_telegram_id: normalizedId.toString(), // –í–∞–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏
    })

    if (error) {
      logger.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞:', {
        description: 'Error getting balance',
        error: error.message,
        error_details: error,
        telegram_id: normalizedId,
      })
      return 0
    }

    const balance = stars || 0

    logger.info('‚úÖ –ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–ª—É—á–µ–Ω –∏–∑ –ë–î:', {
      description: 'User balance retrieved from database',
      telegram_id: normalizedId,
      stars: balance,
      bot_name,
    })

    return balance
  } catch (error) {
    logger.error('‚ùå –û—à–∏–±–∫–∞ –≤ getUserBalance:', {
      description: 'Error in getUserBalance function',
      error: error instanceof Error ? error.message : String(error),
      error_details: error,
      telegram_id,
    })
    return 0
  }
}

/**
 * @deprecated –§—É–Ω–∫—Ü–∏—è –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω–∞, —Ç–∞–∫ –∫–∞–∫ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —É–±—Ä–∞–Ω–æ
 * –ò–Ω–≤–∞–ª–∏–¥–∏—Ä—É–µ—Ç –∫—ç—à –±–∞–ª–∞–Ω—Å–∞ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export const invalidateBalanceCache = (telegram_id: TelegramId): void => {
  // –§—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏, –Ω–æ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ—Ç
  logger.info('‚ÑπÔ∏è invalidateBalanceCache –≤—ã–∑–≤–∞–Ω–∞, –Ω–æ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ:', {
    description: 'invalidateBalanceCache called but caching is disabled',
    telegram_id: normalizeTelegramId(telegram_id),
  })
}

// –ù–æ–≤—ã–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏

export interface RubPurchaseDetail {
  payment_date: string // formatted as DD.MM.YYYY or ISO string
  amount_rub: number
  payment_system: string
  transaction_id?: string
}

export interface XtrPurchaseDetail {
  purchase_date: string // formatted as DD.MM.YYYY or ISO string
  xtr_amount: number
  rub_amount: number
  payment_system: string
  transaction_id?: string
}

export interface ServiceUsageDetail {
  usage_date: string // formatted as DD.MM.YYYY or ISO string
  xtr_cost: number
  service_name: string
  model_name?: string
  details?: string
  transaction_id?: string
}

export interface UserBalanceStats {
  user_telegram_id: string
  user_first_name?: string
  user_last_name?: string
  user_username?: string

  balance_rub?: number
  balance_xtr?: number

  total_rub_deposited?: number
  total_rub_purchases_count?: number
  rub_purchase_details?: RubPurchaseDetail[]

  total_rub_spent_for_xtr?: number
  total_xtr_purchased?: number
  total_xtr_purchases_count?: number
  xtr_purchase_details?: XtrPurchaseDetail[]

  total_xtr_spent_on_services?: number
  total_service_usage_count?: number
  service_usage_details?: ServiceUsageDetail[]

  first_payment_date?: string // ISO string
  last_payment_date?: string // ISO string
}

// –°—Ç–∞—Ä—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã PaymentDetail –∏ UserBalanceStats (—Å—Ç–∞—Ä–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞) –º–æ–∂–Ω–æ –±—É–¥–µ—Ç —É–¥–∞–ª–∏—Ç—å –∏–ª–∏ –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å,
// –µ—Å–ª–∏ –æ–Ω–∏ –±–æ–ª—å—à–µ –Ω–∏–≥–¥–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ getUserBalanceStats –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∞
// –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã UserBalanceStats.
// –ü–æ–∫–∞ –æ—Å—Ç–∞–≤–ª—è–µ–º –∏—Ö, —á—Ç–æ–±—ã –Ω–µ —Å–ª–æ–º–∞—Ç—å –¥—Ä—É–≥–∏–µ —á–∞—Å—Ç–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥–ª–∏ –∏—Ö –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å.

/**
 * @deprecated –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É UserBalanceStats –∏ –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã.
 * –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ
 */
/* // –ó–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ä–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ PaymentDetail
export interface PaymentDetail {
  currency: string
  stars: string
  amount: string
  payment_date: string
  type: string
  description: string
  payment_method: string
  status: string
}
*/

/**
 * @deprecated –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É UserBalanceStats.
 * –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –±–∞–ª–∞–Ω—Å–∞
 */
/* // –ó–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ä–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ UserBalanceStats
export interface UserBalanceStats {
  stars: number // –ë–∞–ª–∞–Ω—Å –≤ –∑–≤–µ–∑–¥–∞—Ö (–ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–æ —Å balance)
  total_added: number
  total_spent: number
  bonus_stars: number
  added_stars: number
  added_rub: number
  services: Record<string, number>
  payment_methods?: Record<string, number>
  payments?: PaymentDetail[] // –≠—Ç–æ—Ç PaymentDetail —Ç–∞–∫–∂–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω
}
*/
