import {
  TelegramId,
  normalizeTelegramId,
} from '@/interfaces/telegram.interface'
import { supabase } from './index'
import { logger } from '@/utils/logger'

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –≤ payments_v2
 * –í—ã–∑—ã–≤–∞–µ—Ç SQL-—Ñ—É–Ω–∫—Ü–∏—é get_user_balance
 */
export const getUserBalance = async (
  telegram_id: TelegramId,
  bot_name?: string
): Promise<number> => {
  try {
    if (!telegram_id) {
      logger.warn('‚ö†Ô∏è –ó–∞–ø—Ä–æ—Å –±–∞–ª–∞–Ω—Å–∞ –±–µ–∑ telegram_id:', {
        description: 'Balance request without telegram_id',
        bot_name,
      })
      return 0
    }

    // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º telegram_id –≤ —Å—Ç—Ä–æ–∫—É
    const normalizedId = normalizeTelegramId(telegram_id)

    logger.info('üîç –ü–æ–ª—É—á–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', {
      description: 'Getting user balance',
      telegram_id: normalizedId,
      bot_name,
    })

    // –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ get_user_balance
    const { data: balance, error } = await supabase.rpc('get_user_balance', {
      user_telegram_id: normalizedId.toString(), // –í–∞–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏
    })

    if (error) {
      logger.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞:', {
        description: 'Error getting balance',
        error: error.message,
        error_details: error,
        telegram_id: normalizedId,
      })
      return 0
    }

    logger.info('‚úÖ –ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–ª—É—á–µ–Ω:', {
      description: 'User balance retrieved',
      telegram_id: normalizedId,
      balance: balance || 0,
      bot_name,
    })

    return balance || 0
  } catch (error) {
    logger.error('‚ùå –û—à–∏–±–∫–∞ –≤ getUserBalance:', {
      description: 'Error in getUserBalance function',
      error: error instanceof Error ? error.message : String(error),
      error_details: error,
      telegram_id,
    })
    return 0
  }
}
