import { supabase } from '.'
import { logger } from '@/utils/logger'

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –ø–æ ID –∑–∞–¥–∞—á–∏ –Ω–µ–π—Ä–æ—Ñ–æ—Ç–æ
 * @param taskId ID –∑–∞–¥–∞—á–∏ –Ω–µ–π—Ä–æ—Ñ–æ—Ç–æ
 * @returns –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ null, –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω
 */
export async function getUserByTaskId(taskId: string) {
  try {
    logger.info({
      message: 'üîç –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID –∑–∞–¥–∞—á–∏',
      description: 'Looking up user by task ID',
      taskId,
    })

    // –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º –∑–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü–µ –ø—Ä–æ–º–ø—Ç–æ–≤
    const { data: promptData, error: promptError } = await supabase
      .from('prompts')
      .select('telegram_id')
      .eq('task_id', taskId)
      .single()

    if (promptError || !promptData) {
      logger.warn({
        message: '‚ö†Ô∏è –ó–∞–ø–∏—Å—å –ø—Ä–æ–º–ø—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è ID –∑–∞–¥–∞—á–∏',
        description: 'Prompt record not found for task ID',
        taskId,
        error: promptError?.message,
      })
      return null
    }

    const telegramId = promptData.telegram_id

    // –¢–µ–ø–µ—Ä—å –ø–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const { data: userData, error: userError } = await supabase
      .from('users')
      .select('*')
      .eq('telegram_id', telegramId)
      .single()

    if (userError || !userData) {
      logger.warn({
        message: '‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ Telegram ID',
        description: 'User not found by Telegram ID',
        telegramId,
        taskId,
        error: userError?.message,
      })
      return null
    }

    logger.info({
      message: '‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –ø–æ ID –∑–∞–¥–∞—á–∏',
      description: 'User found by task ID',
      taskId,
      telegramId,
      userId: userData.id,
    })

    return userData
  } catch (error) {
    logger.error({
      message: '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID –∑–∞–¥–∞—á–∏',
      description: 'Error looking up user by task ID',
      error: error instanceof Error ? error.message : 'Unknown error',
      stack: error instanceof Error ? error.stack : null,
      taskId,
    })
    return null
  }
}
