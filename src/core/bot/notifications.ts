import { Telegraf } from 'telegraf'
import { MyContext } from '@/interfaces'
import { logger } from '@/utils/logger'

export const sendPaymentNotification = async ({
  amount,
  stars,
  telegramId,
  language_code,
  username,
  groupId,
  bot,
}: {
  amount: string
  stars: number
  telegramId: string
  language_code: string
  username: string
  groupId: string
  bot: Telegraf<MyContext>
}) => {
  try {
    const caption =
      language_code === 'ru'
        ? `üí∏ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${
            username || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–µ–∑ username'
          } (Telegram ID: ${telegramId.toString()}) –æ–ø–ª–∞—Ç–∏–ª ${amount} —Ä—É–±–ª–µ–π –∏ –ø–æ–ª—É—á–∏–ª ${stars} –∑–≤–µ–∑–¥.`
        : `üí∏ User @${
            username || 'User without username'
          } (Telegram ID: ${telegramId.toString()}) paid ${amount} RUB and received ${stars} stars.`

    await bot.telegram.sendMessage(groupId, caption)
    logger.info('‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–ø–ª–∞—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –≥—Ä—É–ø–ø—É', {
      groupId,
      username,
      telegramId,
      amount,
      stars,
    })
  } catch (error) {
    logger.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ–ø–ª–∞—Ç–µ:', {
      error,
      groupId,
      telegramId,
    })
  }
}
