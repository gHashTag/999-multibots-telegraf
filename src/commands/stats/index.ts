import { MyContext } from '../../interfaces'
import { getRevenueStatistics, isOwner } from '@/core/supabase'
import { isRussian } from '@/helpers'
import { isDev } from '@/config'

const getStatsCommand = async (ctx: MyContext): Promise<void> => {
  const userId = ctx.from?.id

  const botName = isDev ? 'neuro_blogger_bot' : ctx.botInfo?.username

  // –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –±–æ—Ç–∞
  if (!(await isOwner(userId, botName))) {
    await ctx.reply(
      isRussian(ctx)
        ? 'üö´ –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —ç—Ç–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.'
        : 'üö´ You do not have permission to view this information.'
    )
    return
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
  const revenueStatistics = await getRevenueStatistics({
    bot_name: botName,
  })

  console.log('revenueStatistics', revenueStatistics)

  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
  const message = isRussian(ctx)
    ? `üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –¥–æ—Ö–æ–¥–∞–º –¥–ª—è –±–æ—Ç–∞ ${botName}:**\n\n` +
      `üí∞ **–í—Å–µ–≥–æ —Ä—É–±–ª–µ–π:** ${revenueStatistics.total_rub} ‚ÇΩ\n` +
      `‚≠ê **–í—Å–µ–≥–æ –∑–≤–µ–∑–¥:** ${revenueStatistics.total_stars} ‚≠ê\n\n` +
      `üí∞ **–í—Å–µ–≥–æ —Ä—É–±–ª–µ–π (–≤–∫–ª—é—á–∞—è –∑–≤–µ–∑–¥—ã):** ${revenueStatistics.total_rub_including_stars} ‚ÇΩ\n` +
      `‚≠ê **–í—Å–µ–≥–æ –∑–≤–µ–∑–¥ (–≤–∫–ª—é—á–∞—è —Ä—É–±–ª–∏):** ${revenueStatistics.total_stars_including_rub} ‚≠ê\n\n` +
      `üìÖ **–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–ª–∞—Ç–µ–∂–µ–π:** ${revenueStatistics.total_payments}`
    : `üìä **Revenue Statistics for Bot ${botName}:**\n\n` +
      `üí∞ **Total Rubles:** ${revenueStatistics.total_rub} ‚ÇΩ\n` +
      `‚≠ê **Total Stars:** ${revenueStatistics.total_stars} ‚≠ê\n\n` +
      `üí∞ **Total Rubles (including stars):** ${revenueStatistics.total_rub_including_stars} ‚ÇΩ\n` +
      `‚≠ê **Total Stars (including rubles):** ${revenueStatistics.total_stars_including_rub} ‚≠ê\n\n` +
      `üìÖ **Total Payments:** ${revenueStatistics.total_payments}`

  await ctx.replyWithMarkdown(message)
}

export { getStatsCommand }
