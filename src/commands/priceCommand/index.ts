import { Markup } from 'telegraf'
import { MyContext } from '@/interfaces'
import { logger } from '@/utils/logger'
import { getUserInfo } from '@/handlers/getUserInfo'

/**
 * –ö–æ–º–∞–Ω–¥–∞ /price –∏ –∫–Ω–æ–ø–∫–∞ "–¶–µ–Ω—ã"
 * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ü–µ–Ω–∞—Ö –Ω–∞ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —É—Å–ª—É–≥–∏ –±–æ—Ç–∞
 */
export const priceCommand = async (ctx: MyContext) => {
  try {
    const { telegramId } = getUserInfo(ctx)
    const isRu = ctx.from?.language_code === 'ru'

    logger.info({
      message: 'üí∞ [priceCommand] –ó–∞–ø—Ä–æ—Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ü–µ–Ω–∞—Ö',
      telegramId,
      function: 'priceCommand',
    })

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ü–µ–Ω–∞—Ö –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —è–∑—ã–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const priceMessage = isRu
      ? `
üí∞ *–¶–µ–Ω—ã –Ω–∞ —É—Å–ª—É–≥–∏ NeuroBlogger*

*üåü –ó–≤—ë–∑–¥–æ—á–∫–∏ (Stars):*
‚Ä¢ 100 –∑–≤—ë–∑–¥ - 300 ‚ÇΩ
‚Ä¢ 500 –∑–≤—ë–∑–¥ - 1400 ‚ÇΩ
‚Ä¢ 1000 –∑–≤—ë–∑–¥ - 2500 ‚ÇΩ

*üîÑ –ü–æ–¥–ø–∏—Å–∫–∏:*
‚Ä¢ –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è (30 –¥–Ω–µ–π) - 2900 ‚ÇΩ/–º–µ—Å
‚Ä¢ –ü—Ä–µ–º–∏—É–º (30 –¥–Ω–µ–π) - 4900 ‚ÇΩ/–º–µ—Å

*üìä –°—Ç–æ–∏–º–æ—Å—Ç—å —É—Å–ª—É–≥ (–≤ –∑–≤—ë–∑–¥–∞—Ö):*
‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ - –æ—Ç 5 –∑–≤—ë–∑–¥
‚Ä¢ –ù–µ–π—Ä–æ—Ñ–æ—Ç–æ - –æ—Ç 10 –∑–≤—ë–∑–¥
‚Ä¢ –ê–≤–∞—Ç–∞—Ä–∫–∏ - –æ—Ç 50 –∑–≤—ë–∑–¥
‚Ä¢ –í–∏–¥–µ–æ—Ä–æ–ª–∏–∫–∏ - –æ—Ç 100 –∑–≤—ë–∑–¥

üí° *–°–æ–≤–µ—Ç:* –í—ã–≥–æ–¥–Ω–µ–µ –≤—Å–µ–≥–æ –æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É!
`
      : `
üí∞ *NeuroBlogger Pricing*

*üåü Stars:*
‚Ä¢ 100 stars - $5
‚Ä¢ 500 stars - $20
‚Ä¢ 1000 stars - $35

*üîÑ Subscriptions:*
‚Ä¢ Standard (30 days) - $39/month
‚Ä¢ Premium (30 days) - $69/month

*üìä Service Costs (in stars):*
‚Ä¢ Text generation - from 5 stars
‚Ä¢ Neural photos - from 10 stars
‚Ä¢ Avatars - from 50 stars
‚Ä¢ Video clips - from 100 stars

üí° *Tip:* Subscription is the most cost-effective option!
`

    // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
    const keyboard = Markup.inlineKeyboard([
      [
        Markup.button.callback(
          isRu ? 'üíé –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å' : 'üíé Top up balance',
          'top_up_balance'
        ),
        Markup.button.callback(
          isRu ? 'üí´ –û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É' : 'üí´ Subscribe',
          'subscribe'
        ),
      ],
    ])

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ü–µ–Ω–∞—Ö –∏ –∫–Ω–æ–ø–∫–∞–º–∏
    await ctx.replyWithMarkdown(priceMessage, keyboard)

    logger.info({
      message: '‚úÖ [priceCommand] –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ü–µ–Ω–∞—Ö —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞',
      telegramId,
      function: 'priceCommand',
    })
  } catch (error) {
    console.error('‚ùå [priceCommand] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ —Ü–µ–Ω:', error)
    logger.error({
      message: '‚ùå [priceCommand] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ —Ü–µ–Ω',
      error,
      function: 'priceCommand',
    })

    const isRu = ctx.from?.language_code === 'ru'
    await ctx.reply(
      isRu
        ? '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ü–µ–Ω–∞—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
        : 'An error occurred while retrieving price information. Please try again later.'
    )
  }
}
