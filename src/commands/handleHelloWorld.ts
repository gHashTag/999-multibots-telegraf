import { MyContext } from '../interfaces'
import { logger } from '@/utils/logger'
import { inngest } from '../inngest_app/client'

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /hello_world
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ –≤ Inngest –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
 */
export const handleHelloWorld = async (ctx: MyContext) => {
  logger.info('COMMAND /hello_world: Testing Inngest integration', {
    telegramId: ctx.from?.id,
  })

  try {
    const waitingMessage = await ctx.reply(
      'üîÑ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è –≤ Inngest...'
    )

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ –≤ Inngest
    await inngest.send({
      name: 'test/hello.world',
      data: {
        test: true,
        message: 'Test event from Telegram bot',
        timestamp: new Date().toISOString(),
        telegramUser: {
          id: ctx.from?.id,
          username: ctx.from?.username,
          firstName: ctx.from?.first_name,
          lastName: ctx.from?.last_name,
        },
      },
    })

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
    await ctx.telegram.editMessageText(
      ctx.chat.id,
      waitingMessage.message_id,
      undefined,
      `‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Inngest!\n\n–°–æ–±—ã—Ç–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ Inngest-—Ñ—É–Ω–∫—Ü–∏–µ–π –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–µ–∫—É–Ω–¥.`
    )

    logger.info('COMMAND /hello_world: Inngest test event sent successfully', {
      telegramId: ctx.from?.id,
    })
  } catch (error) {
    logger.error('Error in /hello_world command:', {
      error: error instanceof Error ? error.message : String(error),
      telegramId: ctx.from?.id,
    })

    await ctx.reply(
      '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è –≤ Inngest. –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤ –ª–æ–≥–∞—Ö.'
    )
  }
}
