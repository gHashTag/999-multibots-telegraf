import { openai } from '@/core/openai'

// –¢–∏–ø –¥–ª—è –º–æ–¥–µ–ª–∏ —Å —Ä–µ–π—Ç–∏–Ω–≥–æ–º
interface ModelWithRating {
  id: string
  rating: number // —á–µ–º –≤—ã—à–µ, —Ç–µ–º –ø–æ–ø—É–ª—è—Ä–Ω–µ–µ
  provider: string
  category?: string // –∫–∞—Ç–µ–≥–æ—Ä–∏—è –º–æ–¥–µ–ª–∏
}

// –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–æ–¥–µ–ª–µ–π –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É
enum ModelCategory {
  TOP = '—Ç–æ–ø–æ–≤—ã–µ',
  HIGH = '–ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ',
  MEDIUM = '—Ö–æ—Ä–æ—à–∏–µ',
  BASIC = '–±–∞–∑–æ–≤—ã–µ',
}

// –°–ø–∏—Å–æ–∫ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π —Å —Ä–µ–π—Ç–∏–Ω–≥–æ–º
const popularModels: ModelWithRating[] = [
  // –¢–û–ü –∫–∞—Ç–µ–≥–æ—Ä–∏—è - —Å–∞–º—ã–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –º–æ–¥–µ–ª–∏ (—Ä–µ–π—Ç–∏–Ω–≥ 95-100)
  {
    id: 'google/gemini-2.0-flash-001',
    rating: 100,
    provider: 'google',
    category: ModelCategory.TOP,
  },
  {
    id: 'anthropic/claude-3.7-sonnet',
    rating: 99,
    provider: 'anthropic',
    category: ModelCategory.TOP,
  },
  {
    id: 'anthropic/claude-3.5-sonnet',
    rating: 98,
    provider: 'anthropic',
    category: ModelCategory.TOP,
  },
  {
    id: 'deepseek/deepseek-r1:free',
    rating: 97,
    provider: 'deepseek',
    category: ModelCategory.TOP,
  },
  {
    id: 'google/gemini-flash-1.5-8b',
    rating: 96,
    provider: 'google',
    category: ModelCategory.TOP,
  },
  {
    id: 'anthropic/claude-3.7-sonnet:thinking',
    rating: 95,
    provider: 'anthropic',
    category: ModelCategory.TOP,
  },

  // HIGH –∫–∞—Ç–µ–≥–æ—Ä–∏—è - –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –º–æ–¥–µ–ª–∏ (—Ä–µ–π—Ç–∏–Ω–≥ 80-94)
  {
    id: 'google/gemini-flash-1.5',
    rating: 94,
    provider: 'google',
    category: ModelCategory.HIGH,
  },
  {
    id: 'openai/gpt-4o-mini',
    rating: 93,
    provider: 'openai',
    category: ModelCategory.HIGH,
  },
  {
    id: 'anthropic/claude-3.7-sonnet:beta',
    rating: 92,
    provider: 'anthropic',
    category: ModelCategory.HIGH,
  },
  {
    id: 'meta-llama/llama-3.3-70b-instruct',
    rating: 91,
    provider: 'meta-llama',
    category: ModelCategory.HIGH,
  },
  {
    id: 'google/gemini-2.0-pro-exp-02-05:free',
    rating: 90,
    provider: 'google',
    category: ModelCategory.HIGH,
  },
  {
    id: 'google/gemini-2.0-flash-exp:free',
    rating: 89,
    provider: 'google',
    category: ModelCategory.HIGH,
  },
  {
    id: 'anthropic/claude-3.5-sonnet:beta',
    rating: 88,
    provider: 'anthropic',
    category: ModelCategory.HIGH,
  },
  {
    id: 'mistralai/mistral-nemo',
    rating: 87,
    provider: 'mistralai',
    category: ModelCategory.HIGH,
  },
  {
    id: 'deepseek/deepseek-chat:free',
    rating: 86,
    provider: 'deepseek',
    category: ModelCategory.HIGH,
  },

  // MEDIUM –∫–∞—Ç–µ–≥–æ—Ä–∏—è - —Ö–æ—Ä–æ—à–∏–µ –º–æ–¥–µ–ª–∏ (—Ä–µ–π—Ç–∏–Ω–≥ 60-79)
  {
    id: 'google/gemini-2.0-flash-lite-001',
    rating: 79,
    provider: 'google',
    category: ModelCategory.MEDIUM,
  },
  {
    id: 'meta-llama/llama-3.1-70b-instruct',
    rating: 78,
    provider: 'meta-llama',
    category: ModelCategory.MEDIUM,
  },
  {
    id: 'deepseek/deepseek-r1-distill-llama-70b',
    rating: 77,
    provider: 'deepseek',
    category: ModelCategory.MEDIUM,
  },
  {
    id: 'nousresearch/hermes-3-llama-3.1-405b',
    rating: 76,
    provider: 'nousresearch',
    category: ModelCategory.MEDIUM,
  },
]

// –û–ø—Ü–∏–∏ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –º–æ–¥–µ–ª–µ–π
interface ModelFilterOptions {
  minRating?: number // –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥
  maxResults?: number // –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
  category?: ModelCategory // —Ñ–∏–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  provider?: string // —Ñ–∏–ª—å—Ç—Ä –ø–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—É
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ –∏–∑ –ø–æ–ª–Ω–æ–≥–æ ID –º–æ–¥–µ–ª–∏
function getProviderFromFullId(fullId: string): string {
  return fullId.includes('/') ? fullId.split('/')[0] : ''
}

export async function getAvailableModels(
  options: ModelFilterOptions = {}
): Promise<string[]> {
  try {
    console.log(
      'üîç –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π... [Getting list of available models]'
    )

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    const { minRating = 0, maxResults = 50, category, provider } = options

    // –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –º–æ–¥–µ–ª–∏ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É, –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—É
    const filteredPopularModels = popularModels
      .filter(
        model =>
          model.rating >= minRating &&
          (category ? model.category === category : true) &&
          (provider
            ? getProviderFromFullId(model.id) === provider ||
              model.provider === provider
            : true)
      )
      .map(model => model.id)

    // –û–±—ä–µ–¥–∏–Ω—è–µ–º —Å –º–æ–¥–µ–ª—è–º–∏ OpenAI
    const combinedModels = [...filteredPopularModels]

    // –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã (—É—á–∏—Ç—ã–≤–∞—è –ø–æ–ª–Ω—ã–µ ID —Å –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–º)
    const uniqueModels = Array.from(new Set(combinedModels))

    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª–∏ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É (–ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Å–Ω–∞—á–∞–ª–∞)
    const sortedModels = uniqueModels.sort((a, b) => {
      const modelAInfo = popularModels.find(m => m.id === a)
      const modelBInfo = popularModels.find(m => m.id === b)

      // –ï—Å–ª–∏ –æ–±–µ –º–æ–¥–µ–ª–∏ –Ω–∞–π–¥–µ–Ω—ã –≤ —Å–ø–∏—Å–∫–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö, —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∏—Ö —Ä–µ–π—Ç–∏–Ω–≥–∏
      if (modelAInfo && modelBInfo) {
        return modelBInfo.rating - modelAInfo.rating
      }

      // –ï—Å–ª–∏ —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∞ –º–æ–¥–µ–ª—å –Ω–∞–π–¥–µ–Ω–∞, –æ–Ω–∞ –ø–æ–ª—É—á–∞–µ—Ç –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
      if (modelAInfo) return -1
      if (modelBInfo) return 1

      // –ï—Å–ª–∏ –Ω–∏ –æ–¥–Ω–∞ –º–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫
      return 0
    })

    console.log('models', sortedModels)

    // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    return sortedModels.slice(0, maxResults)
  } catch (error) {
    console.error(
      'üö® –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –º–æ–¥–µ–ª–µ–π: [Error fetching models:]',
      error
    )

    // –§–∏–ª—å—Ç—Ä—É–µ–º –º–æ–¥–µ–ª–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å —Ç–µ–º –∂–µ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º —Ä–µ–π—Ç–∏–Ω–≥–æ–º
    const minRating = options.minRating || 0
    const category = options.category
    const provider = options.provider

    // –°–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (–ø–µ—Ä–≤—ã–µ 10 –º–æ–¥–µ–ª–µ–π –∏–∑ —Å–ø–∏—Å–∫–∞)
    const defaultModels = popularModels.slice(0, 10).map(model => model.id)

    const maxResults = 20

    // –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥, —Ñ–∏–ª—å—Ç—Ä—É–µ–º –º–æ–¥–µ–ª–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    if (minRating > 0 || category || provider) {
      return popularModels
        .filter(
          model =>
            model.rating >= minRating &&
            (category ? model.category === category : true) &&
            (provider
              ? getProviderFromFullId(model.id) === provider ||
                model.provider === provider
              : true)
        )
        .map(model => model.id)
        .slice(0, maxResults)
    }

    return defaultModels
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–µ–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
export async function getModelsByCategory(
  category: ModelCategory
): Promise<string[]> {
  return getAvailableModels({ category })
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–ø–æ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π
export async function getTopModels(count = 5): Promise<string[]> {
  return getAvailableModels({ minRating: 95, maxResults: count })
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–µ–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
export async function getProviderModels(
  provider: string,
  minRating = 0
): Promise<string[]> {
  return getAvailableModels({ provider, minRating })
}
