import { MyContext } from '@/interfaces'
import {
  generateFluxKontext,
  FluxKontextParams,
} from '@/services/generateFluxKontext'
import { Markup } from 'telegraf'
import { logger } from '@/utils/logger'
import { cancelMenu } from '@/menu/cancelMenu'
import { cancelHelpArray } from '@/menu/cancelHelpArray'
import { ModeEnum } from '@/interfaces'
import { handleHelpCancel } from '@/handlers/handleHelpCancel'

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏
const createModelSelectionKeyboard = (is_ru: boolean) => {
  return Markup.keyboard([
    [
      { text: is_ru ? 'üíº FLUX Kontext Pro' : 'üíº FLUX Kontext Pro' },
      { text: is_ru ? 'üöÄ FLUX Kontext Max' : 'üöÄ FLUX Kontext Max' },
    ],
    ...cancelHelpArray(is_ru),
  ])
    .resize()
    .oneTime(true)
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const getInstructions = (is_ru: boolean) => {
  if (is_ru) {
    return `üé® *FLUX Kontext* - –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –ò–ò

‚ú® *–ß—Ç–æ –º–æ–∂–Ω–æ –¥–µ–ª–∞—Ç—å:*
‚Ä¢ –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∏–ª—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è ("—Å–¥–µ–ª–∞–π –≤ —Å—Ç–∏–ª–µ 90-—Ö")
‚Ä¢ –î–æ–±–∞–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã ("–¥–æ–±–∞–≤—å –∑–æ–ª–æ—Ç–æ–µ –æ–∂–µ—Ä–µ–ª—å–µ")
‚Ä¢ –ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∏—á—ë—Å–∫—É ("—Å–¥–µ–ª–∞–π –ø–∏–∫—Å–∏ —Å—Ç—Ä–∏–∂–∫—É")
‚Ä¢ –ó–∞–º–µ–Ω–∏—Ç—å —Ñ–æ–Ω ("–ø–æ—Å—Ç–∞–≤—å –Ω–∞ –ø–ª—è–∂")
‚Ä¢ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏
‚Ä¢ –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è –∏ —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã

üí° *–°–æ–≤–µ—Ç—ã –¥–ª—è –ª—É—á—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:*
‚Ä¢ –ë—É–¥—å—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ –≤ –æ–ø–∏—Å–∞–Ω–∏–∏
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–∞–≤—ã—á–∫–∏ –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
‚Ä¢ –î–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ª–∏—Ü–∞: "—Å–æ—Ö—Ä–∞–Ω—è—è —Ç–µ –∂–µ —á–µ—Ä—Ç—ã –ª–∏—Ü–∞"
‚Ä¢ –ù–∞—á–∏–Ω–∞–π—Ç–µ —Å –ø—Ä–æ—Å—Ç—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π

üîÑ *–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:*
1Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
2Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å
3Ô∏è‚É£ –û–ø–∏—à–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
4Ô∏è‚É£ –ü–æ–ª—É—á–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç!`
  } else {
    return `üé® *FLUX Kontext* - AI Image Editing

‚ú® *What you can do:*
‚Ä¢ Change image style ("make this a 90s cartoon")
‚Ä¢ Add elements ("give her a gold necklace")
‚Ä¢ Change hairstyle ("give her a pixie haircut")
‚Ä¢ Replace background ("put her on a beach")
‚Ä¢ Edit text in images
‚Ä¢ Stylization and artistic effects

üí° *Tips for best results:*
‚Ä¢ Be specific in descriptions
‚Ä¢ Use quotes for exact text
‚Ä¢ To preserve identity: "while keeping the same facial features"
‚Ä¢ Start with simple changes

üîÑ *How to use:*
1Ô∏è‚É£ Send an image
2Ô∏è‚É£ Choose model
3Ô∏è‚É£ Describe changes
4Ô∏è‚É£ Get result!`
  }
}

export const handleFluxKontextCommand = async (ctx: MyContext) => {
  try {
    const telegram_id = ctx.from?.id?.toString()
    if (!telegram_id) {
      return
    }

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —è–∑—ã–∫–∞
    const is_ru = ctx.from?.language_code === 'ru'

    const instructions = getInstructions(is_ru)

    await ctx.reply(instructions, {
      parse_mode: 'Markdown',
      reply_markup: {
        remove_keyboard: true,
      },
    })

    await ctx.reply(
      is_ru
        ? 'üì∑ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å:'
        : 'üì∑ Send an image you want to edit:',
      {
        reply_markup: cancelMenu(is_ru).reply_markup,
      }
    )

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Å—Å–∏—é –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    if (ctx.session) {
      ctx.session.awaitingFluxKontextImage = true
      ctx.session.mode = ModeEnum.FluxKontext // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–µ–∂–∏–º –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏
    }
  } catch (error) {
    logger.error('Error in FLUX Kontext command', {
      error: error instanceof Error ? error.message : 'Unknown error',
      telegram_id: ctx.from?.id,
    })

    const is_ru = ctx.from?.language_code === 'ru'
    await ctx.reply(
      is_ru
        ? '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.'
        : '‚ùå An error occurred. Please try again.'
    )
  }
}

export const handleFluxKontextImageUpload = async (ctx: MyContext) => {
  try {
    const telegram_id = ctx.from?.id?.toString()
    if (!telegram_id) {
      return
    }

    const is_ru = ctx.from?.language_code === 'ru'

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ Kontext —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    if (!ctx.session?.awaitingFluxKontextImage) {
      return
    }

    // –ü–æ–ª—É—á–∞–µ–º URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    let imageUrl: string | undefined

    if (ctx.message && 'photo' in ctx.message && ctx.message.photo) {
      const photo = ctx.message.photo[ctx.message.photo.length - 1]
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º getFileLink –≤–º–µ—Å—Ç–æ —Ä—É—á–Ω–æ–≥–æ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è URL –∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º URL –≤ —Å—Ç—Ä–æ–∫—É
      imageUrl = (await ctx.telegram.getFileLink(photo.file_id)).toString()
    }

    if (!imageUrl) {
      await ctx.reply(
        is_ru
          ? '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.'
          : '‚ùå Failed to get image. Please try again.'
      )
      return
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ —Å–µ—Å—Å–∏–∏
    if (ctx.session) {
      ctx.session.kontextImageUrl = imageUrl
      ctx.session.awaitingFluxKontextImage = false

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∞ –ª–∏ –º–æ–¥–µ–ª—å —É–∂–µ –≤—ã–±—Ä–∞–Ω–∞ –≤ —Å—Ü–µ–Ω–µ
      if (ctx.session.kontextSelectedModel) {
        // –ú–æ–¥–µ–ª—å —É–∂–µ –≤—ã–±—Ä–∞–Ω–∞, –ø–µ—Ä–µ—Ö–æ–¥–∏–º —Å—Ä–∞–∑—É –∫ –≤–≤–æ–¥—É –ø—Ä–æ–º–ø—Ç–∞
        ctx.session.kontextModelType = ctx.session.kontextSelectedModel
        ctx.session.awaitingFluxKontextPrompt = true
        ctx.session.kontextSelectedModel = undefined // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥–≤—ã–±–æ—Ä

        const modelName =
          ctx.session.kontextModelType === 'pro'
            ? 'FLUX Kontext Pro'
            : 'FLUX Kontext Max'

        await ctx.reply(
          is_ru
            ? `‚úÖ –í—ã–±—Ä–∞–Ω–∞ –º–æ–¥–µ–ª—å: ${modelName}\n\nüìù –¢–µ–ø–µ—Ä—å –æ–ø–∏—à–∏—Ç–µ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏:\n\nüí° –ü—Ä–∏–º–µ—Ä—ã:\n‚Ä¢ "–¥–æ–±–∞–≤—å –∑–æ–ª–æ—Ç–æ–µ –æ–∂–µ—Ä–µ–ª—å–µ"\n‚Ä¢ "—Å–¥–µ–ª–∞–π —Ñ–æ–Ω –≤ –≤–∏–¥–µ –ø–ª—è–∂–∞"\n‚Ä¢ "–∏–∑–º–µ–Ω–∏ —Ü–≤–µ—Ç –≤–æ–ª–æ—Å –Ω–∞ —Ä—ã–∂–∏–π"\n‚Ä¢ "—Å–¥–µ–ª–∞–π –≤ —Å—Ç–∏–ª–µ –≤–∏–Ω—Ç–∞–∂–Ω–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏"\n\nüåê *–°–æ–≤–µ—Ç: –î–ª—è –ª—É—á—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–∏—à–∏—Ç–µ –ø—Ä–æ–º–ø—Ç –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ*`
            : `‚úÖ Selected model: ${modelName}\n\nüìù Now describe what you want to change in the image:\n\nüí° Examples:\n‚Ä¢ "add a gold necklace"\n‚Ä¢ "change background to a beach"\n‚Ä¢ "change hair color to red"\n‚Ä¢ "make it vintage photography style"\n\nüåê *Tip: For best results, write your prompt in English*`,
          {
            reply_markup: cancelMenu(is_ru).reply_markup,
            parse_mode: 'Markdown',
          }
        )
      } else {
        // –ú–æ–¥–µ–ª—å –Ω–µ –≤—ã–±—Ä–∞–Ω–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –º–æ–¥–µ–ª–∏ –∫–∞–∫ –æ–±—ã—á–Ω–æ
        ctx.session.awaitingFluxKontextModel = true

        await ctx.reply(
          is_ru
            ? 'üéØ –í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:'
            : 'üéØ Choose a model for editing:',
          {
            reply_markup: createModelSelectionKeyboard(is_ru).reply_markup,
          }
        )
      }
    }
  } catch (error) {
    logger.error('Error handling FLUX Kontext image upload', {
      error: error instanceof Error ? error.message : 'Unknown error',
      telegram_id: ctx.from?.id,
    })

    const is_ru = ctx.from?.language_code === 'ru'
    await ctx.reply(
      is_ru
        ? '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.'
        : '‚ùå Error processing image.'
    )
  }
}

export const handleFluxKontextModelSelection = async (
  ctx: MyContext,
  modelType: 'pro' | 'max'
) => {
  try {
    const telegram_id = ctx.from?.id?.toString()
    if (!telegram_id) {
      return
    }

    const is_ru = ctx.from?.language_code === 'ru'

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±–∏—Ä–∞–µ—Ç –º–æ–¥–µ–ª—å –¥–ª—è Kontext
    if (
      !ctx.session?.awaitingFluxKontextModel ||
      !ctx.session?.kontextImageUrl
    ) {
      return
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –º–æ–¥–µ–ª—å
    if (ctx.session) {
      ctx.session.kontextModelType = modelType
      ctx.session.awaitingFluxKontextModel = false
      ctx.session.awaitingFluxKontextPrompt = true
    }

    const modelName =
      modelType === 'pro' ? 'FLUX Kontext Pro' : 'FLUX Kontext Max'

    await ctx.reply(
      is_ru
        ? `‚úÖ –í—ã–±—Ä–∞–Ω–∞ –º–æ–¥–µ–ª—å: ${modelName}\n\nüìù –¢–µ–ø–µ—Ä—å –æ–ø–∏—à–∏—Ç–µ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏:\n\nüí° –ü—Ä–∏–º–µ—Ä—ã:\n‚Ä¢ "–¥–æ–±–∞–≤—å –∑–æ–ª–æ—Ç–æ–µ –æ–∂–µ—Ä–µ–ª—å–µ"\n‚Ä¢ "—Å–¥–µ–ª–∞–π —Ñ–æ–Ω –≤ –≤–∏–¥–µ –ø–ª—è–∂–∞"\n‚Ä¢ "–∏–∑–º–µ–Ω–∏ —Ü–≤–µ—Ç –≤–æ–ª–æ—Å –Ω–∞ —Ä—ã–∂–∏–π"\n‚Ä¢ "—Å–¥–µ–ª–∞–π –≤ —Å—Ç–∏–ª–µ –≤–∏–Ω—Ç–∞–∂–Ω–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏"\n\nüåê *–°–æ–≤–µ—Ç: –î–ª—è –ª—É—á—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–∏—à–∏—Ç–µ –ø—Ä–æ–º–ø—Ç –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ*`
        : `‚úÖ Selected model: ${modelName}\n\nüìù Now describe what you want to change in the image:\n\nüí° Examples:\n‚Ä¢ "add a gold necklace"\n‚Ä¢ "change background to a beach"\n‚Ä¢ "change hair color to red"\n‚Ä¢ "make it vintage photography style"\n\nüåê *Tip: For best results, write your prompt in English*`,
      {
        reply_markup: cancelMenu(is_ru).reply_markup,
        parse_mode: 'Markdown',
      }
    )
  } catch (error) {
    logger.error('Error handling FLUX Kontext model selection', {
      error: error instanceof Error ? error.message : 'Unknown error',
      telegram_id: ctx.from?.id,
      modelType,
    })

    const is_ru = ctx.from?.language_code === 'ru'
    await ctx.reply(
      is_ru
        ? '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –º–æ–¥–µ–ª–∏.'
        : '‚ùå Error selecting model.'
    )
  }
}

export const handleFluxKontextPrompt = async (
  ctx: MyContext,
  prompt: string
) => {
  try {
    const telegram_id = ctx.from?.id?.toString()
    if (!telegram_id) {
      return
    }

    const is_ru = ctx.from?.language_code === 'ru'

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç –ø—Ä–æ–º–ø—Ç –¥–ª—è Kontext
    if (
      !ctx.session?.awaitingFluxKontextPrompt ||
      !ctx.session?.kontextImageUrl ||
      !ctx.session?.kontextModelType
    ) {
      return
    }

    const imageUrl = ctx.session.kontextImageUrl
    const modelType = ctx.session.kontextModelType

    // –û—á–∏—â–∞–µ–º —Å–µ—Å—Å–∏—é
    if (ctx.session) {
      ctx.session.awaitingFluxKontextPrompt = false
      ctx.session.kontextImageUrl = undefined
      ctx.session.kontextModelType = undefined
    }

    const username = ctx.from?.username || 'unknown'

    // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    const params: FluxKontextParams = {
      prompt,
      inputImageUrl: imageUrl,
      modelType,
      telegram_id,
      username,
      is_ru,
      ctx,
    }

    // –ó–∞–ø—É—Å–∫–∞–µ–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    await generateFluxKontext(params)
  } catch (error) {
    logger.error('Error handling FLUX Kontext prompt', {
      error: error instanceof Error ? error.message : 'Unknown error',
      telegram_id: ctx.from?.id,
      prompt,
    })

    const is_ru = ctx.from?.language_code === 'ru'
    await ctx.reply(
      is_ru
        ? '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.'
        : '‚ùå Error editing image.'
    )
  }
}
