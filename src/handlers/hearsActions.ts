import { MyContext, ModeEnum } from '@/interfaces'
import { isRussian } from '@/helpers/language'
import { logger } from '@/utils/logger'

import { Telegraf } from 'telegraf'

export function registerHearsActions(bot: Telegraf<MyContext>) {
  logger.info('hearsActions - Registering hears handlers')

  bot.hears(
    ['üéôÔ∏è –¢–µ–∫—Å—Ç –≤ –≥–æ–ª–æ—Å', 'üéôÔ∏è Text to speech'],
    async (ctx: MyContext) => {
      logger.info('hearsActions - Heard üéôÔ∏è –¢–µ–∫—Å—Ç –≤ –≥–æ–ª–æ—Å')
      ctx.session.mode = ModeEnum.TextToSpeech
      await ctx.scene.enter('text_to_speech')
    }
  )

  bot.hears(['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'üè† Main menu'], async (ctx: MyContext) => {
    logger.info('hearsActions - Heard üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
    ctx.session.mode = ModeEnum.MainMenu
    await ctx.scene.enter('menuScene')
  })

  bot.hears(
    ['üé• –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤–æ–µ –≤–∏–¥–µ–æ?', 'üé• Generate new video?'],
    async (ctx: MyContext) => {
      console.log('CASE: –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤–æ–µ –≤–∏–¥–µ–æ')
      const mode = ctx.session.mode
      console.log('mode', mode)
      if (mode === 'text_to_video') {
        await ctx.scene.enter('text_to_video')
      } else if (mode === 'image_to_video') {
        await ctx.scene.enter('image_to_video')
      } else {
        await ctx.reply(
          isRussian(ctx)
            ? '–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤–æ–µ –≤–∏–¥–µ–æ –≤ —ç—Ç–æ–º —Ä–µ–∂–∏–º–µ'
            : 'You cannot generate a new video in this mode'
        )
      }
    }
  )
}
