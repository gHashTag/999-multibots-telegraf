import { MyContext } from '@/interfaces/telegram-bot.interface'
import { levels } from '@/menu/mainMenu'
import { isRussian } from '@/helpers/language'
import { priceCommand } from '@/commands/priceCommand'
import { ModeEnum } from '@/interfaces/modes'
// –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ª–æ–≥–∏–∫—É —Å—Ü–µ–Ω—ã
export const handleMenu = async (ctx: MyContext) => {
  console.log('CASE: handleMenuCommand')
  const isRu = isRussian(ctx)
  if (ctx.message && 'text' in ctx.message) {
    const text = ctx.message.text || ''
    console.log('CASE: handleMenuCommand.text', text)

    // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–ª—è —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏
    const actions = {
      [isRu ? levels[0].title_ru : levels[0].title_en]: async () => {
        console.log('CASE: üí´ –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏')
        ctx.session.mode = ModeEnum.Subscribe
        await ctx.scene.enter('subscriptionScene')
      },
      [isRu ? levels[1].title_ru : levels[1].title_en]: async () => {
        console.log('CASE: ü§ñ –¶–∏—Ñ—Ä–æ–≤–æ–µ —Ç–µ–ª–æ')
        ctx.session.mode = ModeEnum.DigitalAvatarBody
        await ctx.scene.enter('checkBalanceScene')
      },
      [isRu ? 'ü§ñ –¶–∏—Ñ—Ä–æ–≤–æ–µ —Ç–µ–ª–æ 2' : 'ü§ñ Digital Body 2']: async () => {
        console.log('CASE: ü§ñ –¶–∏—Ñ—Ä–æ–≤–æ–µ —Ç–µ–ª–æ 2')
        ctx.session.mode = ModeEnum.DigitalAvatarBodyV2
        await ctx.scene.enter('checkBalanceScene')
      },
      [isRu ? levels[2].title_ru : levels[2].title_en]: async () => {
        console.log('CASE handleMenu: üì∏ –ù–µ–π—Ä–æ—Ñ–æ—Ç–æ')
        ctx.session.mode = ModeEnum.NeuroPhoto
        await ctx.scene.enter('checkBalanceScene')
      },
      [isRu ? 'üì∏ –ù–µ–π—Ä–æ—Ñ–æ—Ç–æ 2' : 'üì∏ NeuroPhoto 2']: async () => {
        console.log('CASE: üì∏ –ù–µ–π—Ä–æ—Ñ–æ—Ç–æ 2')
        ctx.session.mode = ModeEnum.NeuroPhotoV2
        await ctx.scene.enter('checkBalanceScene')
      },
      [isRu ? levels[3].title_ru : levels[3].title_en]: async () => {
        console.log('CASE: üîç –ü—Ä–æ–º–ø—Ç –∏–∑ —Ñ–æ—Ç–æ')
        ctx.session.mode = ModeEnum.ImageToPrompt
        await ctx.scene.enter('checkBalanceScene')
      },
      [isRu ? levels[4].title_ru : levels[4].title_en]: async () => {
        console.log('CASE: üß† –ú–æ–∑–≥ –∞–≤–∞—Ç–∞—Ä–∞')
        ctx.session.mode = ModeEnum.Avatar
        await ctx.scene.enter('checkBalanceScene')
      },
      [isRu ? levels[5].title_ru : levels[5].title_en]: async () => {
        console.log('CASE: üí≠ –ß–∞—Ç —Å –∞–≤–∞—Ç–∞—Ä–æ–º')
        ctx.session.mode = ModeEnum.ChatWithAvatar
        await ctx.scene.enter('checkBalanceScene')
      },
      [isRu ? levels[6].title_ru : levels[6].title_en]: async () => {
        console.log('CASE: ü§ñ –í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏ –ò–ò')
        ctx.session.mode = ModeEnum.SelectModel
        await ctx.scene.enter('checkBalanceScene')
      },
      [isRu ? levels[7].title_ru : levels[7].title_en]: async () => {
        console.log('CASE: üé§ –ì–æ–ª–æ—Å –∞–≤–∞—Ç–∞—Ä–∞')
        ctx.session.mode = ModeEnum.Voice
        await ctx.scene.enter('checkBalanceScene')
      },
      [isRu ? levels[8].title_ru : levels[8].title_en]: async () => {
        console.log('CASE: üéôÔ∏è –¢–µ–∫—Å—Ç –≤ –≥–æ–ª–æ—Å')
        ctx.session.mode = ModeEnum.TextToSpeech
        await ctx.scene.enter('checkBalanceScene')
      },
      [isRu ? levels[9].title_ru : levels[9].title_en]: async () => {
        console.log('CASE: üé• –§–æ—Ç–æ –≤ –≤–∏–¥–µ–æ')
        ctx.session.mode = ModeEnum.ImageToVideo
        await ctx.scene.enter('checkBalanceScene')
      },
      [isRu ? levels[10].title_ru : levels[10].title_en]: async () => {
        console.log('CASE:  –í–∏–¥–µ–æ –∏–∑ —Ç–µ–∫—Å—Ç–∞')
        ctx.session.mode = ModeEnum.TextToVideo
        await ctx.scene.enter('checkBalanceScene')
      },
      [isRu ? levels[11].title_ru : levels[11].title_en]: async () => {
        console.log('CASE: üñºÔ∏è –¢–µ–∫—Å—Ç –≤ —Ñ–æ—Ç–æ')
        ctx.session.mode = ModeEnum.TextToImage
        await ctx.scene.enter('checkBalanceScene')
      },
      // [isRu ? levels[12].title_ru : levels[12].title_en]: async () => {
      //   console.log('CASE: üé§ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≥—É–±')
      //   ctx.session.mode = 'lip_sync'
      //   await ctx.scene.enter('checkBalanceScene')
      // },
      // [isRu ? levels[13].title_ru : levels[13].title_en]: async () => {
      //   console.log('CASE: üé• –í–∏–¥–µ–æ –≤ URL')
      //   ctx.session.mode = 'video_in_url'
      //   await ctx.scene.enter('checkBalanceScene')
      // },
      [isRu ? levels[100].title_ru : levels[100].title_en]: async () => {
        console.log('CASE: üíé –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å')
        ctx.session.mode = ModeEnum.TopUpBalance
        await ctx.scene.enter('paymentScene')
      },
      [isRu ? levels[101].title_ru : levels[101].title_en]: async () => {
        console.log('CASE: ü§ë –ë–∞–ª–∞–Ω—Å')
        ctx.session.mode = ModeEnum.Balance
        await ctx.scene.enter('balanceScene')
      },
      [isRu ? levels[102].title_ru : levels[102].title_en]: async () => {
        console.log('CASE: üë• –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞')
        ctx.session.mode = ModeEnum.Invite
        await ctx.scene.enter('inviteScene')
      },
      [isRu ? levels[103].title_ru : levels[103].title_en]: async () => {
        console.log('CASE: ‚ùì –ü–æ–º–æ—â—å')
        ctx.session.mode = ModeEnum.Help
        await ctx.scene.enter('helpScene')
      },
      [isRu ? levels[104].title_ru : levels[104].title_en]: async () => {
        console.log('CASE: üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        ctx.session.mode = ModeEnum.MainMenu
        await ctx.scene.enter('menuScene')
      },
      '/invite': async () => {
        console.log('CASE: üë• –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞')
        ctx.session.mode = ModeEnum.Invite
        await ctx.scene.enter('inviteScene')
      },
      '/price': async () => {
        console.log('CASE: üí∞ –¶–µ–Ω–∞')
        ctx.session.mode = ModeEnum.Price
        await priceCommand(ctx)
      },
      '/buy': async () => {
        console.log('CASE: üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å')
        ctx.session.mode = ModeEnum.TopUpBalance
        await ctx.scene.enter('paymentScene')
      },
      '/balance': async () => {
        console.log('CASE: üí∞ –ë–∞–ª–∞–Ω—Å')
        ctx.session.mode = ModeEnum.Balance
        await ctx.scene.enter('balanceScene')
      },
      '/help': async () => {
        console.log('CASE: ‚ùì –ü–æ–º–æ—â—å')
        ctx.session.mode = ModeEnum.Help
        await ctx.scene.enter('helpScene')
      },
      '/menu': async () => {
        console.log('CASE: üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        ctx.session.mode = ModeEnum.MainMenu
        await ctx.scene.enter('menuScene')
      },
      '/start': async () => {
        console.log('CASE: üöÄ –ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ')

        await ctx.scene.enter('startScene')
      },
    }

    // –í—ã–ø–æ–ª–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –∏–Ω–∞—á–µ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    if (actions[text]) {
      console.log('CASE: handleMenuCommand.if', text)
      await actions[text]()
    } else {
      console.log('CASE: handleMenuCommand.else', text)
      // ctx.session.mode = 'main_menu'
      // await ctx.scene.enter('menuScene')
    }
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤ –¥—Ä—É–≥–æ–º –º–µ—Å—Ç–µ
export default handleMenu
