import type { MyContext } from '@/interfaces/telegram-bot.interface'
import { Markup } from 'telegraf'
import { levels } from '@/menu/mainMenu'
import { isRussian } from '@/helpers/language'
import { priceCommand } from '@/commands/priceCommand'
import { ModeEnum } from '@/interfaces/modes'
import { logger } from '@/utils/logger'
import { handleTechSupport } from '@/commands/handleTechSupport'
// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –≤–∏–¥–µ–æ —Å—Ü–µ–Ω—ã
import { handleRestartVideoGeneration } from './handleVideoRestart'

// –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ª–æ–≥–∏–∫—É —Å—Ü–µ–Ω—ã
export const handleMenu = async (ctx: MyContext) => {
  const telegramId = ctx.from?.id?.toString() || 'unknown'
  logger.info({
    message: 'üöÄ [handleMenu] –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –º–µ–Ω—é',
    telegramId,
    function: 'handleMenu',
    sessionData: JSON.stringify(ctx.session || {}),
  })

  console.log('CASE: handleMenuCommand')
  const isRu = isRussian(ctx)
  if (ctx.message && 'text' in ctx.message) {
    const text = ctx.message.text || ''
    logger.info({
      message: `üìù [handleMenu] –ü–æ–ª—É—á–µ–Ω —Ç–µ–∫—Å—Ç –∫–æ–º–∞–Ω–¥—ã: "${text}"`,
      telegramId,
      function: 'handleMenu',
      text,
    })

    console.log('CASE: handleMenuCommand.text', text)

    // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–ª—è —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏
    const actions: Record<string, () => Promise<void>> = {
      [isRu ? levels[105].title_ru : levels[105].title_en]: async () => {
        logger.info({
          message: 'üí´ [handleMenu] –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏',
          telegramId,
          function: 'handleMenu',
          action: 'subscribe',
          nextScene: ModeEnum.SubscriptionScene,
        })
        console.log('CASE: üí´ –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏')
        ctx.session.mode = ModeEnum.SubscriptionScene
        console.log(
          `üîÑ [handleMenu] –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.SubscriptionScene}`
        )
        await ctx.scene.enter(ModeEnum.SubscriptionScene)
        console.log(
          `‚úÖ [handleMenu] –ó–∞–≤–µ—Ä—à–µ–Ω –≤—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.SubscriptionScene}`
        )
      },
      [isRu ? levels[1].title_ru : levels[1].title_en]: async () => {
        logger.info({
          message: 'ü§ñ [handleMenu] –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Ü–∏—Ñ—Ä–æ–≤–æ–º—É —Ç–µ–ª—É',
          telegramId,
          function: 'handleMenu',
          action: 'digital_avatar_body',
          nextScene: ModeEnum.CheckBalanceScene,
        })
        console.log('CASE: ü§ñ –¶–∏—Ñ—Ä–æ–≤–æ–µ —Ç–µ–ª–æ')
        ctx.session.mode = ModeEnum.DigitalAvatarBody
        console.log(
          `üîÑ [handleMenu] –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.CheckBalanceScene}`
        )
        await ctx.scene.enter(ModeEnum.CheckBalanceScene)
        console.log(
          `‚úÖ [handleMenu] –ó–∞–≤–µ—Ä—à–µ–Ω –≤—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.CheckBalanceScene}`
        )
      },
      [isRu ? 'ü§ñ –¶–∏—Ñ—Ä–æ–≤–æ–µ —Ç–µ–ª–æ 2' : 'ü§ñ Digital Body 2']: async () => {
        logger.info({
          message: 'ü§ñ [handleMenu] –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Ü–∏—Ñ—Ä–æ–≤–æ–º—É —Ç–µ–ª—É 2',
          telegramId,
          function: 'handleMenu',
          action: 'digital_avatar_body_v2',
          nextScene: ModeEnum.CheckBalanceScene,
        })
        console.log('CASE: ü§ñ –¶–∏—Ñ—Ä–æ–≤–æ–µ —Ç–µ–ª–æ 2')
        ctx.session.mode = ModeEnum.DigitalAvatarBodyV2
        console.log(
          `üîÑ [handleMenu] –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.CheckBalanceScene}`
        )
        await ctx.scene.enter(ModeEnum.CheckBalanceScene)
        console.log(
          `‚úÖ [handleMenu] –ó–∞–≤–µ—Ä—à–µ–Ω –≤—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.CheckBalanceScene}`
        )
      },
      [isRu ? levels[2].title_ru : levels[2].title_en]: async () => {
        logger.info({
          message: 'üì∏ [handleMenu] –ü–µ—Ä–µ—Ö–æ–¥ –∫ –Ω–µ–π—Ä–æ—Ñ–æ—Ç–æ',
          telegramId,
          function: 'handleMenu',
          action: 'neurophoto',
          nextScene: ModeEnum.CheckBalanceScene,
        })
        console.log('CASE handleMenu: üì∏ –ù–µ–π—Ä–æ—Ñ–æ—Ç–æ')
        ctx.session.mode = ModeEnum.NeuroPhoto
        console.log(
          `üîÑ [handleMenu] –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.CheckBalanceScene}`
        )
        await ctx.scene.enter(ModeEnum.CheckBalanceScene)
        console.log(
          `‚úÖ [handleMenu] –ó–∞–≤–µ—Ä—à–µ–Ω –≤—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.CheckBalanceScene}`
        )
      },
      [isRu ? 'üì∏ –ù–µ–π—Ä–æ—Ñ–æ—Ç–æ 2' : 'üì∏ NeuroPhoto 2']: async () => {
        logger.info({
          message: 'üì∏ [handleMenu] –ü–µ—Ä–µ—Ö–æ–¥ –∫ –Ω–µ–π—Ä–æ—Ñ–æ—Ç–æ 2',
          telegramId,
          function: 'handleMenu',
          action: 'neurophoto_v2',
          nextScene: ModeEnum.CheckBalanceScene,
        })
        console.log('CASE: üì∏ –ù–µ–π—Ä–æ—Ñ–æ—Ç–æ 2')
        ctx.session.mode = ModeEnum.NeuroPhotoV2
        console.log(
          `üîÑ [handleMenu] –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.CheckBalanceScene}`
        )
        await ctx.scene.enter(ModeEnum.CheckBalanceScene)
        console.log(
          `‚úÖ [handleMenu] –ó–∞–≤–µ—Ä—à–µ–Ω –≤—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.CheckBalanceScene}`
        )
      },
      [isRu ? levels[3].title_ru : levels[3].title_en]: async () => {
        logger.info({
          message: 'üîç [handleMenu] –ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø—Ä–æ–º–ø—Ç—É –∏–∑ —Ñ–æ—Ç–æ',
          telegramId,
          function: 'handleMenu',
          action: 'image_to_prompt',
          nextScene: ModeEnum.CheckBalanceScene,
        })
        console.log('CASE: üîç –ü—Ä–æ–º–ø—Ç –∏–∑ —Ñ–æ—Ç–æ')
        ctx.session.mode = ModeEnum.ImageToPrompt
        console.log(
          `üîÑ [handleMenu] –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.CheckBalanceScene}`
        )
        await ctx.scene.enter(ModeEnum.CheckBalanceScene)
        console.log(
          `‚úÖ [handleMenu] –ó–∞–≤–µ—Ä—à–µ–Ω –≤—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.CheckBalanceScene}`
        )
      },
      [isRu ? levels[4].title_ru : levels[4].title_en]: async () => {
        logger.info({
          message: 'üß† [handleMenu] –ü–µ—Ä–µ—Ö–æ–¥ –∫ –º–æ–∑–≥—É –∞–≤–∞—Ç–∞—Ä–∞',
          telegramId,
          function: 'handleMenu',
          action: 'avatar_brain',
          nextScene: ModeEnum.CheckBalanceScene,
        })
        console.log('CASE: üß† –ú–æ–∑–≥ –∞–≤–∞—Ç–∞—Ä–∞')
        ctx.session.mode = ModeEnum.Avatar
        console.log(
          `üîÑ [handleMenu] –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.CheckBalanceScene}`
        )
        await ctx.scene.enter(ModeEnum.CheckBalanceScene)
        console.log(
          `‚úÖ [handleMenu] –ó–∞–≤–µ—Ä—à–µ–Ω –≤—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.CheckBalanceScene}`
        )
      },
      [isRu ? levels[5].title_ru : levels[5].title_en]: async () => {
        logger.info({
          message: 'üí≠ [handleMenu] –ü–µ—Ä–µ—Ö–æ–¥ –∫ —á–∞—Ç—É —Å –∞–≤–∞—Ç–∞—Ä–æ–º',
          telegramId,
          function: 'handleMenu',
          action: 'chat_with_avatar',
          nextScene: ModeEnum.CheckBalanceScene,
        })
        console.log('CASE: üí≠ –ß–∞—Ç —Å –∞–≤–∞—Ç–∞—Ä–æ–º')
        ctx.session.mode = ModeEnum.ChatWithAvatar
        console.log(
          `üîÑ [handleMenu] –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.CheckBalanceScene}`
        )
        await ctx.scene.enter(ModeEnum.CheckBalanceScene)
        console.log(
          `‚úÖ [handleMenu] –ó–∞–≤–µ—Ä—à–µ–Ω –≤—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.CheckBalanceScene}`
        )
      },
      [isRu ? levels[6].title_ru : levels[6].title_en]: async () => {
        logger.info({
          message: 'ü§ñ [handleMenu] –ü–µ—Ä–µ—Ö–æ–¥ –∫ –≤—ã–±–æ—Ä—É –º–æ–¥–µ–ª–∏ –ò–ò',
          telegramId,
          function: 'handleMenu',
          action: 'select_model',
          nextScene: ModeEnum.CheckBalanceScene,
        })
        console.log('CASE: ü§ñ –í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏ –ò–ò')
        ctx.session.mode = ModeEnum.SelectModel
        console.log(
          `üîÑ [handleMenu] –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.CheckBalanceScene}`
        )
        await ctx.scene.enter(ModeEnum.CheckBalanceScene)
        console.log(
          `‚úÖ [handleMenu] –ó–∞–≤–µ—Ä—à–µ–Ω –≤—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.CheckBalanceScene}`
        )
      },
      [isRu ? levels[7].title_ru : levels[7].title_en]: async () => {
        logger.info({
          message: 'üé§ [handleMenu] –ü–µ—Ä–µ—Ö–æ–¥ –∫ –≥–æ–ª–æ—Å—É –∞–≤–∞—Ç–∞—Ä–∞',
          telegramId,
          function: 'handleMenu',
          action: 'voice_avatar',
          nextScene: ModeEnum.CheckBalanceScene,
        })
        console.log('CASE: üé§ –ì–æ–ª–æ—Å –∞–≤–∞—Ç–∞—Ä–∞')
        ctx.session.mode = ModeEnum.Voice
        console.log(
          `üîÑ [handleMenu] –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.CheckBalanceScene}`
        )
        await ctx.scene.enter(ModeEnum.CheckBalanceScene)
        console.log(
          `‚úÖ [handleMenu] –ó–∞–≤–µ—Ä—à–µ–Ω –≤—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.CheckBalanceScene}`
        )
      },
      [isRu ? levels[8].title_ru : levels[8].title_en]: async () => {
        logger.info({
          message: 'üéôÔ∏è [handleMenu] –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Ç–µ–∫—Å—Ç—É –≤ –≥–æ–ª–æ—Å',
          telegramId,
          function: 'handleMenu',
          action: 'text_to_speech',
          nextScene: ModeEnum.CheckBalanceScene,
        })
        console.log('CASE: üéôÔ∏è –¢–µ–∫—Å—Ç –≤ –≥–æ–ª–æ—Å')
        ctx.session.mode = ModeEnum.TextToSpeech
        console.log(
          `üîÑ [handleMenu] –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.CheckBalanceScene}`
        )
        await ctx.scene.enter(ModeEnum.CheckBalanceScene)
        console.log(
          `‚úÖ [handleMenu] –ó–∞–≤–µ—Ä—à–µ–Ω –≤—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.CheckBalanceScene}`
        )
      },
      [isRu ? levels[9].title_ru : levels[9].title_en]: async () => {
        logger.info({
          message: 'üé• [handleMenu] –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Ñ–æ—Ç–æ –≤ –≤–∏–¥–µ–æ',
          telegramId,
          function: 'handleMenu',
          action: 'image_to_video',
          nextScene: ModeEnum.CheckBalanceScene,
        })
        console.log('CASE: üé• –§–æ—Ç–æ –≤ –≤–∏–¥–µ–æ')
        ctx.session.mode = ModeEnum.ImageToVideo
        console.log(
          `üîÑ [handleMenu] –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.CheckBalanceScene}`
        )
        await ctx.scene.enter(ModeEnum.CheckBalanceScene)
        console.log(
          `‚úÖ [handleMenu] –ó–∞–≤–µ—Ä—à–µ–Ω –≤—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.CheckBalanceScene}`
        )
      },
      [isRu ? levels[10].title_ru : levels[10].title_en]: async () => {
        logger.info({
          message: 'üé¨ [handleMenu] –ü–µ—Ä–µ—Ö–æ–¥ –∫ –≤–∏–¥–µ–æ –∏–∑ —Ç–µ–∫—Å—Ç–∞',
          telegramId,
          function: 'handleMenu',
          action: 'text_to_video',
          nextScene: ModeEnum.CheckBalanceScene,
        })
        console.log('CASE:  –í–∏–¥–µ–æ –∏–∑ —Ç–µ–∫—Å—Ç–∞')
        ctx.session.mode = ModeEnum.TextToVideo
        console.log(
          `üîÑ [handleMenu] –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.CheckBalanceScene}`
        )
        await ctx.scene.enter(ModeEnum.CheckBalanceScene)
        console.log(
          `‚úÖ [handleMenu] –ó–∞–≤–µ—Ä—à–µ–Ω –≤—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.CheckBalanceScene}`
        )
      },
      [isRu ? levels[11].title_ru : levels[11].title_en]: async () => {
        logger.info({
          message: 'üñºÔ∏è [handleMenu] –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Ç–µ–∫—Å—Ç—É –≤ —Ñ–æ—Ç–æ',
          telegramId,
          function: 'handleMenu',
          action: 'text_to_image',
          nextScene: ModeEnum.CheckBalanceScene,
        })
        console.log('CASE: üñºÔ∏è –¢–µ–∫—Å—Ç –≤ —Ñ–æ—Ç–æ')
        ctx.session.mode = ModeEnum.TextToImage
        console.log(
          `üîÑ [handleMenu] –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.CheckBalanceScene}`
        )
        await ctx.scene.enter(ModeEnum.CheckBalanceScene)
        console.log(
          `‚úÖ [handleMenu] –ó–∞–≤–µ—Ä—à–µ–Ω –≤—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.CheckBalanceScene}`
        )
      },
      // [isRu ? levels[12].title_ru : levels[12].title_en]: async () => {
      //   console.log('CASE: üé§ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≥—É–±')
      //   ctx.session.mode = 'lip_sync'
      //   await ctx.scene.enter('checkBalanceScene')
      // },
      // [isRu ? levels[13].title_ru : levels[13].title_en]: async () => {
      //   console.log('CASE: üé• –í–∏–¥–µ–æ –≤ URL')
      //   ctx.session.mode = 'video_in_url'
      //   await ctx.scene.enter('checkBalanceScene')
      // },
      [isRu ? levels[100].title_ru : levels[100].title_en]: async () => {
        logger.info({
          message: 'üíé [handleMenu] –ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—é –±–∞–ª–∞–Ω—Å–∞',
          telegramId,
          function: 'handleMenu',
          action: 'topup_balance',
          nextScene: ModeEnum.PaymentScene,
        })
        console.log('CASE: üíé –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å')
        ctx.session.mode = ModeEnum.TopUpBalance
        console.log(`üîÑ [handleMenu] –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.PaymentScene}`)
        await ctx.scene.enter(ModeEnum.PaymentScene)
        console.log(
          `‚úÖ [handleMenu] –ó–∞–≤–µ—Ä—à–µ–Ω –≤—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.PaymentScene}`
        )
      },
      [isRu ? levels[101].title_ru : levels[101].title_en]: async () => {
        logger.info({
          message: 'ü§ë [handleMenu] –ü–µ—Ä–µ—Ö–æ–¥ –∫ –±–∞–ª–∞–Ω—Å—É',
          telegramId,
          function: 'handleMenu',
          action: 'balance',
          nextScene: 'balanceScene',
        })
        console.log('CASE: ü§ë –ë–∞–ª–∞–Ω—Å')
        ctx.session.mode = ModeEnum.Balance
        console.log(`üîÑ [handleMenu] –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${'balanceScene'}`)
        await ctx.scene.enter('balanceScene')
        console.log(`‚úÖ [handleMenu] –ó–∞–≤–µ—Ä—à–µ–Ω –≤—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${'balanceScene'}`)
      },
      [isRu ? levels[102].title_ru : levels[102].title_en]: async () => {
        logger.info({
          message: 'üë• [handleMenu] –ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—é –¥—Ä—É–≥–∞',
          telegramId,
          function: 'handleMenu',
          action: 'invite',
          nextScene: 'inviteScene',
        })
        console.log('CASE: üë• –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞')
        ctx.session.mode = ModeEnum.Invite
        console.log(`üîÑ [handleMenu] –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${'inviteScene'}`)
        await ctx.scene.enter('inviteScene')
        console.log(`‚úÖ [handleMenu] –ó–∞–≤–µ—Ä—à–µ–Ω –≤—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${'inviteScene'}`)
      },
      [isRu ? levels[103].title_ru : levels[103].title_en]: async () => {
        logger.info({
          message: '‚ùì [handleMenu] –ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø–æ–º–æ—â–∏',
          telegramId,
          function: 'handleMenu',
          action: 'help',
          nextScene: ModeEnum.HelpScene,
        })
        console.log('CASE: ‚ùì –ü–æ–º–æ—â—å')
        ctx.session.mode = ModeEnum.Help
        console.log(`üîÑ [handleMenu] –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.HelpScene}`)
        await handleTechSupport(ctx)
        console.log(`‚úÖ [handleMenu] –ó–∞–≤–µ—Ä—à–µ–Ω –≤—ã–∑–æ–≤ handleTechSupport`)
      },
      [isRu ? levels[104].title_ru : levels[104].title_en]: async () => {
        logger.info({
          message: 'üè† [handleMenu] –ü–µ—Ä–µ—Ö–æ–¥ –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é',
          telegramId,
          function: 'handleMenu',
          action: 'main_menu',
          nextScene: ModeEnum.MainMenu,
        })
        console.log('CASE: üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        // Re-enter the menu scene
        ctx.session.mode = ModeEnum.MainMenu
        console.log(`üîÑ [handleMenu] –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.MainMenu}`)
        await ctx.scene.enter(ModeEnum.MainMenu)
        console.log(
          `‚úÖ [handleMenu] –ó–∞–≤–µ—Ä—à–µ–Ω –≤—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.MainMenu}`
        )
      },
      '/invite': async () => {
        logger.info({
          message:
            'üë• [handleMenu] –ö–æ–º–∞–Ω–¥–∞ /invite - –ø–µ—Ä–µ—Ö–æ–¥ –∫ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—é –¥—Ä—É–≥–∞',
          telegramId,
          function: 'handleMenu',
          action: 'invite_command',
          nextScene: 'inviteScene',
        })
        console.log('CASE: üë• –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞')
        ctx.session.mode = ModeEnum.Invite
        console.log(`üîÑ [handleMenu] –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${'inviteScene'}`)
        await ctx.scene.enter('inviteScene')
        console.log(`‚úÖ [handleMenu] –ó–∞–≤–µ—Ä—à–µ–Ω –≤—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${'inviteScene'}`)
      },
      '/price': async () => {
        logger.info({
          message: 'üí∞ [handleMenu] –ö–æ–º–∞–Ω–¥–∞ /price - –ø–æ–∫–∞–∑ —Ü–µ–Ω—ã',
          telegramId,
          function: 'handleMenu',
          action: 'price_command',
        })
        console.log('CASE: üí∞ –¶–µ–Ω–∞')
        ctx.session.mode = ModeEnum.Price
        console.log(`üîÑ [handleMenu] –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.Price}`)
        await priceCommand(ctx)
        console.log(`‚úÖ [handleMenu] –ó–∞–≤–µ—Ä—à–µ–Ω –≤—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.Price}`)
      },
      '/buy': async () => {
        logger.info({
          message:
            'üí∞ [handleMenu] –ö–æ–º–∞–Ω–¥–∞ /buy - –ø–µ—Ä–µ—Ö–æ–¥ –∫ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—é –±–∞–ª–∞–Ω—Å–∞',
          telegramId,
          function: 'handleMenu',
          action: 'buy_command',
          nextScene: ModeEnum.PaymentScene,
        })
        console.log('CASE: üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å')
        ctx.session.mode = ModeEnum.TopUpBalance
        console.log(`üîÑ [handleMenu] –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.PaymentScene}`)
        await ctx.scene.enter(ModeEnum.PaymentScene)
        console.log(
          `‚úÖ [handleMenu] –ó–∞–≤–µ—Ä—à–µ–Ω –≤—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.PaymentScene}`
        )
      },
      '/balance': async () => {
        logger.info({
          message: 'üí∞ [handleMenu] –ö–æ–º–∞–Ω–¥–∞ /balance - –ø–µ—Ä–µ—Ö–æ–¥ –∫ –±–∞–ª–∞–Ω—Å—É',
          telegramId,
          function: 'handleMenu',
          action: 'balance_command',
          nextScene: 'balanceScene',
        })
        console.log('CASE: üí∞ –ë–∞–ª–∞–Ω—Å')
        ctx.session.mode = ModeEnum.Balance
        console.log(`üîÑ [handleMenu] –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${'balanceScene'}`)
        await ctx.scene.enter('balanceScene')
        console.log(`‚úÖ [handleMenu] –ó–∞–≤–µ—Ä—à–µ–Ω –≤—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${'balanceScene'}`)
      },
      '/help': async () => {
        logger.info({
          message: '‚ùì [handleMenu] –ö–æ–º–∞–Ω–¥–∞ /help - –ø–µ—Ä–µ—Ö–æ–¥ –∫ –ø–æ–º–æ—â–∏',
          telegramId,
          function: 'handleMenu',
          action: 'help_command',
          nextScene: 'helpScene',
        })
        console.log('CASE: ‚ùì –ü–æ–º–æ—â—å')
        ctx.session.mode = ModeEnum.Help
        console.log(`üîÑ [handleMenu] –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.HelpScene}`)
        await ctx.scene.enter('helpScene')
        console.log(
          `‚úÖ [handleMenu] –ó–∞–≤–µ—Ä—à–µ–Ω –≤—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.HelpScene}`
        )
      },
      '/menu': async () => {
        logger.info({
          message: 'üè† [handleMenu] –ö–æ–º–∞–Ω–¥–∞ /menu - –ø–µ—Ä–µ—Ö–æ–¥ –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é',
          telegramId,
          function: 'handleMenu',
          action: 'menu_command',
          nextScene: ModeEnum.MainMenu,
        })
        console.log('CASE: üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        // Re-enter the menu scene
        ctx.session.mode = ModeEnum.MainMenu
        console.log(`üîÑ [handleMenu] –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.MainMenu}`)
        await ctx.scene.enter(ModeEnum.MainMenu)
        console.log(
          `‚úÖ [handleMenu] –ó–∞–≤–µ—Ä—à–µ–Ω –≤—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.MainMenu}`
        )
      },
      '/start': async () => {
        logger.info({
          message: 'üöÄ [handleMenu] –ö–æ–º–∞–Ω–¥–∞ /start - –Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º',
          telegramId,
          function: 'handleMenu',
          action: 'start_command',
          nextScene: ModeEnum.StartScene,
        })
        console.log('CASE: üöÄ –ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ')
        ctx.session.mode = ModeEnum.StartScene
        console.log(`üîÑ [handleMenu] –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.StartScene}`)
        await ctx.scene.enter(ModeEnum.StartScene)
        console.log(
          `‚úÖ [handleMenu] –ó–∞–≤–µ—Ä—à–µ–Ω –≤—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.StartScene}`
        )
      },
      –û—Ç–º–µ–Ω–∞: async () => {
        // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è '–û—Ç–º–µ–Ω–∞'
        logger.info('[handleMenu] –û–±—Ä–∞–±–æ—Ç–∫–∞ –û—Ç–º–µ–Ω—ã')
        await ctx.reply(
          isRu ? '‚ùå –ü—Ä–æ—Ü–µ—Å—Å –æ—Ç–º–µ–Ω—ë–Ω.' : '‚ùå Process cancelled.',
          Markup.removeKeyboard()
        )
        await ctx.scene.leave() // –ü–æ–∫–∏–¥–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ü–µ–Ω—É (–≤–µ—Ä–æ—è—Ç–Ω–æ, menuScene)
        await ctx.scene.enter(ModeEnum.MainMenu) // –í—Ö–æ–¥–∏–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
      },
      Cancel: async () => {
        // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è 'Cancel'
        logger.info('[handleMenu] Handling Cancel')
        await ctx.reply('‚ùå Process cancelled.', Markup.removeKeyboard())
        await ctx.scene.leave()
        await ctx.scene.enter(ModeEnum.MainMenu)
      },
    }

    // –í—ã–ø–æ–ª–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if (actions[text]) {
      logger.info({
        message: `‚úÖ [handleMenu] –ù–∞–π–¥–µ–Ω–æ –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è —Ç–µ–∫—Å—Ç–∞: "${text}"`,
        telegramId,
        function: 'handleMenu',
        text,
        result: 'action_found',
      })
      console.log('CASE: handleMenuCommand.if', text)
      await actions[text]()
    } else {
      // –õ–æ–≥–∏–∫–∞ –¥–ª—è –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ (–µ—Å–ª–∏ –Ω—É–∂–Ω–∞)
      logger.warn({
        message: `‚ö†Ô∏è [handleMenu] –ù–µ –Ω–∞–π–¥–µ–Ω–æ –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è —Ç–µ–∫—Å—Ç–∞: "${text}"`,
        telegramId,
        function: 'handleMenu',
        text,
        result: 'action_not_found',
      })
      console.log('CASE: handleMenuCommand.else', text)
      // –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å –Ω–µ –Ω—É–∂–Ω–æ –Ω–∏—á–µ–≥–æ –¥–µ–ª–∞—Ç—å –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–∏–ø–∞ "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞"
    }
  } else {
    // –õ–æ–≥–∏–∫–∞ –¥–ª—è –Ω–µ—Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    logger.warn({
      message: '‚ö†Ô∏è [handleMenu] –ü–æ–ª—É—á–µ–Ω–æ –Ω–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ',
      telegramId,
      function: 'handleMenu',
      messageType: ctx.message ? typeof ctx.message : 'undefined',
      result: 'non_text_message',
    })
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤ –¥—Ä—É–≥–æ–º –º–µ—Å—Ç–µ
export default handleMenu
