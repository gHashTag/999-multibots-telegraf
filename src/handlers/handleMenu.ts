import { MyContext } from '@/interfaces'
import { ModeEnum, PlatformEnum } from '@/enums'
import { logger } from '@/logger'
import { levels } from '@/menu/mainMenu'
import { priceCommand } from '@/handlers/handlePriceCommand'

// eslint-disable-next-line @typescript-eslint/no-explicit-any
export const handleMenu = async (ctx: MyContext) => {
  try {
    logger.info({
      message: 'üîÑ [handleMenu] –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–µ–Ω—é',
      function: 'handleMenu',
    })

    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    const telegramId = ctx.from?.id ?? 'unknown'
    const username = ctx.from?.username ?? 'unknown'

    // –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    const message = ctx.message as { text?: string }
    const text = message?.text || ''

    logger.info({
      message: `üìù [handleMenu] –ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞: "${text}"`,
      telegramId,
      username,
      function: 'handleMenu',
      command: text,
    })

    const isRu = ctx.session?.isRu ?? true
    console.log(`üîç [handleMenu] –Ø–∑—ã–∫: ${isRu ? 'ru' : 'en'}`)

    // –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç—É –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –∫–∞–∂–¥–æ–π –∫–æ–º–∞–Ω–¥—ã
    const actions: Record<string, () => Promise<void>> = {
      [isRu ? levels[11].ru : levels[11].en]: async () => {
        logger.info({
          message: '‚ú® [handleMenu] –ü–µ—Ä–µ—Ö–æ–¥ –∫ –Ω–µ–π—Ä–æ—Ñ–æ—Ç–æ',
          telegramId,
          function: 'handleMenu',
          action: 'neurophoto',
          nextScene: 'neurophotoWizard',
        })
        console.log('CASE: ‚ú® –ù–µ–π—Ä–æ—Ñ–æ—Ç–æ')
        ctx.session.mode = ModeEnum.Neurophoto
        console.log(`üîÑ [handleMenu] –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${'neurophotoWizard'}`)
        await ctx.scene.enter('neurophotoWizard')
        console.log(`‚úÖ [handleMenu] –ó–∞–≤–µ—Ä—à–µ–Ω –≤—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${'neurophotoWizard'}`)
      },
      [isRu ? levels[16].ru : levels[16].en]: async () => {
        logger.info({
          message: 'üß© [handleMenu] –ü–µ—Ä–µ—Ö–æ–¥ –∫ –Ω–µ–π—Ä–æ–ø–∞–∑–ª–∞–º',
          telegramId,
          function: 'handleMenu',
          action: 'neuropuzzle',
          nextScene: 'neuropuzzleWizard',
        })
        console.log('CASE: üß© –ù–µ–π—Ä–æ–ø–∞–∑–ª—ã')
        ctx.session.mode = ModeEnum.NeuroPuzzle
        console.log(`üîÑ [handleMenu] –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${'neuropuzzleWizard'}`)
        await ctx.scene.enter('neuropuzzleWizard')
        console.log(`‚úÖ [handleMenu] –ó–∞–≤–µ—Ä—à–µ–Ω –≤—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${'neuropuzzleWizard'}`)
      },
      [isRu ? levels[17].ru : levels[17].en]: async () => {
        logger.info({
          message: 'üñºÔ∏è [handleMenu] –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π',
          telegramId,
          function: 'handleMenu',
          action: 'image_to_prompt',
          nextScene: 'imageToPromptWizard',
        })
        console.log('CASE: üñºÔ∏è –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π')
        ctx.session.mode = ModeEnum.ImageToPrompt
        console.log(`üîÑ [handleMenu] –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${'imageToPromptWizard'}`)
        await ctx.scene.enter('imageToPromptWizard')
        console.log(`‚úÖ [handleMenu] –ó–∞–≤–µ—Ä—à–µ–Ω –≤—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${'imageToPromptWizard'}`)
      },
      [isRu ? levels[27].ru : levels[27].en]: async () => {
        logger.info({
          message: 'üé≠ [handleMenu] –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–º–µ–Ω–µ —Å—Ç–∏–ª—è',
          telegramId,
          function: 'handleMenu',
          action: 'style_transfer',
          nextScene: 'styleTransferWizard',
        })
        console.log('CASE: üé≠ –°–º–µ–Ω–∞ —Å—Ç–∏–ª—è')
        ctx.session.mode = ModeEnum.StyleTransfer
        console.log(`üîÑ [handleMenu] –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${'styleTransferWizard'}`)
        await ctx.scene.enter('styleTransferWizard')
        console.log(`‚úÖ [handleMenu] –ó–∞–≤–µ—Ä—à–µ–Ω –≤—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${'styleTransferWizard'}`)
      },
      [isRu ? levels[25].ru : levels[25].en]: async () => {
        logger.info({
          message: 'üé¨ [handleMenu] –ü–µ—Ä–µ—Ö–æ–¥ –∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ',
          telegramId,
          function: 'handleMenu',
          action: 'video_generation',
          nextScene: 'videoGenerationWizard',
        })
        console.log('CASE: üé¨ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–¥–µ–æ')
        ctx.session.mode = ModeEnum.VideoGeneration
        console.log(`üîÑ [handleMenu] –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${'videoGenerationWizard'}`)
        await ctx.scene.enter('videoGenerationWizard')
        console.log(`‚úÖ [handleMenu] –ó–∞–≤–µ—Ä—à–µ–Ω –≤—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${'videoGenerationWizard'}`)
      },
      [isRu ? levels[24].ru : levels[24].en]: async () => {
        logger.info({
          message: 'üéûÔ∏è [handleMenu] –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–∞–π–¥-—à–æ—É',
          telegramId,
          function: 'handleMenu',
          action: 'slideshow',
          nextScene: 'slideshowWizard',
        })
        console.log('CASE: üéûÔ∏è –°–ª–∞–π–¥-—à–æ—É')
        ctx.session.mode = ModeEnum.SlideShow
        console.log(`üîÑ [handleMenu] –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${'slideshowWizard'}`)
        await ctx.scene.enter('slideshowWizard')
        console.log(`‚úÖ [handleMenu] –ó–∞–≤–µ—Ä—à–µ–Ω –≤—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${'slideshowWizard'}`)
      },
      [isRu ? levels[22].ru : levels[22].en]: async () => {
        logger.info({
          message: 'ü§ñ [handleMenu] –ü–µ—Ä–µ—Ö–æ–¥ –∫ —á–∞—Ç—É —Å –∞–≤–∞—Ç–∞—Ä–æ–º',
          telegramId,
          function: 'handleMenu',
          action: 'chat_with_avatar',
          nextScene: 'chatWithAvatarWizard',
        })
        console.log('CASE: ü§ñ –ß–∞—Ç —Å –∞–≤–∞—Ç–∞—Ä–æ–º')
        ctx.session.mode = ModeEnum.ChatWithAvatar
        console.log(`üîÑ [handleMenu] –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${'chatWithAvatarWizard'}`)
        await ctx.scene.enter('chatWithAvatarWizard')
        console.log(`‚úÖ [handleMenu] –ó–∞–≤–µ—Ä—à–µ–Ω –≤—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${'chatWithAvatarWizard'}`)
      },
      [isRu ? levels[26].ru : levels[26].en]: async () => {
        logger.info({
          message: 'üìä [handleMenu] –ü–µ—Ä–µ—Ö–æ–¥ –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é –∑–∞–¥–∞–Ω–∏–π',
          telegramId,
          function: 'handleMenu',
          action: 'level_quest',
          nextScene: 'levelQuestWizard',
        })
        console.log('CASE: üìä –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞–Ω–∏–π')
        ctx.session.mode = ModeEnum.LevelQuest
        console.log(`üîÑ [handleMenu] –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${'levelQuestWizard'}`)
        await ctx.scene.enter('levelQuestWizard')
        console.log(`‚úÖ [handleMenu] –ó–∞–≤–µ—Ä—à–µ–Ω –≤—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${'levelQuestWizard'}`)
      },
      [isRu ? levels[101].ru : levels[101].en]: async () => {
        logger.info({
          message: 'üí∞ [handleMenu] –ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—é –±–∞–ª–∞–Ω—Å–∞',
          telegramId,
          function: 'handleMenu',
          action: 'top_up_balance',
          nextScene: ModeEnum.PaymentScene,
        })
        console.log('CASE: üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å')
        ctx.session.mode = ModeEnum.TopUpBalance
        console.log(`üîÑ [handleMenu] –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.PaymentScene}`)
        await ctx.scene.enter(ModeEnum.PaymentScene)
        console.log(
          `‚úÖ [handleMenu] –ó–∞–≤–µ—Ä—à–µ–Ω –≤—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.PaymentScene}`
        )
      },
      [isRu ? levels[102].ru : levels[102].en]: async () => {
        logger.info({
          message: 'üë• [handleMenu] –ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—é –¥—Ä—É–≥–∞',
          telegramId,
          function: 'handleMenu',
          action: 'invite',
          nextScene: 'inviteScene',
        })
        console.log('CASE: üë• –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞')
        ctx.session.mode = ModeEnum.Invite
        console.log(`üîÑ [handleMenu] –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${'inviteScene'}`)
        await ctx.scene.enter('inviteScene')
        console.log(`‚úÖ [handleMenu] –ó–∞–≤–µ—Ä—à–µ–Ω –≤—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${'inviteScene'}`)
      },
      [isRu ? levels[103].ru : levels[103].en]: async () => {
        logger.info({
          message: '‚ùì [handleMenu] –ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø–æ–º–æ—â–∏',
          telegramId,
          function: 'handleMenu',
          action: 'help',
          nextScene: ModeEnum.HelpScene,
        })
        console.log('CASE: ‚ùì –ü–æ–º–æ—â—å')
        ctx.session.mode = ModeEnum.Help
        console.log(`üîÑ [handleMenu] –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.HelpScene}`)
        await ctx.scene.enter(ModeEnum.HelpScene)
        console.log(
          `‚úÖ [handleMenu] –ó–∞–≤–µ—Ä—à–µ–Ω –≤—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.HelpScene}`
        )
      },
      [isRu ? levels[104].ru : levels[104].en]: async () => {
        logger.info({
          message: 'üè† [handleMenu] –ü–µ—Ä–µ—Ö–æ–¥ –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é',
          telegramId,
          function: 'handleMenu',
          action: 'main_menu',
          nextScene: ModeEnum.MainMenu,
        })
        console.log('CASE: üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        ctx.session.mode = ModeEnum.MainMenu
        console.log(`üîÑ [handleMenu] –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.MainMenu}`)
        await ctx.scene.enter(ModeEnum.MainMenu)
        console.log(`‚úÖ [handleMenu] –ó–∞–≤–µ—Ä—à–µ–Ω –≤—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.MainMenu}`)
      },
      '/invite': async () => {
        logger.info({
          message: 'üë• [handleMenu] –ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—é –¥—Ä—É–≥–∞',
          telegramId,
          function: 'handleMenu',
          action: 'invite',
          nextScene: 'inviteScene',
        })
        console.log('CASE: üë• –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞')
        ctx.session.mode = ModeEnum.Invite
        console.log(`üîÑ [handleMenu] –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${'inviteScene'}`)
        await ctx.scene.enter('inviteScene')
        console.log(`‚úÖ [handleMenu] –ó–∞–≤–µ—Ä—à–µ–Ω –≤—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${'inviteScene'}`)
      },
      '/price': async () => {
        await priceCommand(ctx as MyContext)
      },
      '/start': async () => {
        logger.info({
          message: 'üè† [handleMenu] –ü–µ—Ä–µ—Ö–æ–¥ –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é —á–µ—Ä–µ–∑ /start',
          telegramId,
          function: 'handleMenu',
          action: 'main_menu',
          nextScene: ModeEnum.MainMenu,
        })
        console.log('CASE: üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (/start)')
        ctx.session.mode = ModeEnum.MainMenu
        console.log(`üîÑ [handleMenu] –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.MainMenu}`)
        await ctx.scene.enter(ModeEnum.MainMenu)
        console.log(`‚úÖ [handleMenu] –ó–∞–≤–µ—Ä—à–µ–Ω –≤—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.MainMenu}`)
      },
      '/menu': async () => {
        logger.info({
          message: 'üè† [handleMenu] –ü–µ—Ä–µ—Ö–æ–¥ –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é —á–µ—Ä–µ–∑ /menu',
          telegramId,
          function: 'handleMenu',
          action: 'main_menu',
          nextScene: ModeEnum.MainMenu,
        })
        console.log('CASE: üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (/menu)')
        ctx.session.mode = ModeEnum.MainMenu
        console.log(`üîÑ [handleMenu] –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.MainMenu}`)
        await ctx.scene.enter(ModeEnum.MainMenu)
        console.log(`‚úÖ [handleMenu] –ó–∞–≤–µ—Ä—à–µ–Ω –≤—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É ${ModeEnum.MainMenu}`)
      },
      [isRu ? levels[106].title_ru : levels[106].title_en]: async () => {
        logger.info({
          message: 'üí∞ [handleMenu] –ü—Ä–æ—Å–º–æ—Ç—Ä —Ü–µ–Ω',
          telegramId,
          function: 'handleMenu',
          action: 'view_prices',
        })
        console.log('CASE: üí∞ –ü—Ä–æ—Å–º–æ—Ç—Ä —Ü–µ–Ω')
        await priceCommand(ctx)
      },
    }

    const platform =
      ctx.session?.platform ??
      (ctx.from?.username?.toLowerCase().includes('telegram')
        ? PlatformEnum.Telegram
        : PlatformEnum.Telegram)

    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –≤ —Å–µ—Å—Å–∏—é
    ctx.session.platform = platform

    logger.info({
      message: `üì± [handleMenu] –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞: ${platform}`,
      telegramId,
      function: 'handleMenu',
      platform,
    })

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –Ω–∞—à–µ–π –∫–∞—Ä—Ç–µ –¥–µ–π—Å—Ç–≤–∏–π
    if (text && actions[text]) {
      await actions[text]()
      return
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–∞–Ω–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å "/"
    if (text.startsWith('/')) {
      const command = text.toLowerCase()
      if (actions[command]) {
        await actions[command]()
        return
      }
    }

    // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    logger.info({
      message: 'üè† [handleMenu] –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é',
      telegramId,
      function: 'handleMenu',
      action: 'main_menu',
      nextScene: ModeEnum.MainMenu,
    })
    console.log('DEFAULT CASE: üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
    ctx.session.mode = ModeEnum.MainMenu
    await ctx.scene.enter(ModeEnum.MainMenu)
  } catch (error) {
    logger.error({
      message: `‚ùå [handleMenu] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –º–µ–Ω—é: ${error.message}`,
      function: 'handleMenu',
      error,
    })
    console.error('‚ùå [handleMenu] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –º–µ–Ω—é:', error)
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –º–µ–Ω—é
export default handleMenu
