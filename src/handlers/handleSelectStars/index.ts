import { Markup } from 'telegraf'
import { type MyContext } from '@/interfaces'
import { starAmounts } from '@/price/helpers/starAmounts'
// import { BuyParams } from '../handleBuy/index' // –£–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ä—ã–π –∏–º–ø–æ—Ä—Ç
import { logger } from '@/utils/logger'

// –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
interface SelectStarsParams {
  ctx: MyContext
  starAmounts: number[]
  isRu: boolean
}

export async function handleSelectStars({
  ctx,
  starAmounts,
  isRu,
}: SelectStarsParams) {
  console.log(
    `[handleSelectStars LOG] === ENTER Function === (User: ${ctx.from?.id})`
  )
  logger.info('üåü [handleSelectStars] –ù–∞—á–∞–ª–æ –≤—ã–±–æ—Ä–∞ –∑–≤–µ–∑–¥', {
    telegram_id: ctx.from?.id,
    language: isRu ? 'ru' : 'en',
  })
  try {
    const buttons = starAmounts.map(amount => [
      Markup.button.callback(`‚≠êÔ∏è ${amount}`, `top_up_${amount}`),
    ])

    const keyboard = Markup.inlineKeyboard(buttons)

    console.log(
      `[handleSelectStars LOG] Sending message with star amount buttons (User: ${ctx.from?.id})`
    )

    await ctx.reply(
      isRu
        ? '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤–µ–∑–¥ –¥–ª—è –ø–æ–∫—É–ø–∫–∏:'
        : 'Choose the number of stars to buy:',
      keyboard
    )
    console.log(
      `[handleSelectStars LOG] Message with buttons sent (User: ${ctx.from?.id})`
    )
  } catch (error) {
    console.error('Error in handleSelectStars:', error)
    logger.error('‚ùå [handleSelectStars] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –≤—ã–±–æ—Ä–∞ –∑–≤–µ–∑–¥', {
      telegram_id: ctx.from?.id,
      error: error instanceof Error ? error.message : String(error),
    })
    await ctx.reply(
      isRu ? '–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –∑–≤–µ–∑–¥.' : 'Error selecting stars.'
    )
  }
}
