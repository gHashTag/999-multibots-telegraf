/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–Ω–æ–º–Ω—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤:
 * 1. –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
 * 2. –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–¥–∞—á–∏ –∞–≥–µ–Ω—Ç–æ–º
 */

import { execSync } from 'child_process'
import { logger } from '@/utils/logger'
import 'dotenv/config'

/**
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª —Ä–∞–±–æ—Ç—ã –∞–≤—Ç–æ–Ω–æ–º–Ω—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤
 */
async function runAgentSystem() {
  try {
    logger.info('üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ —Ä–∞–±–æ—Ç—ã –∞–≤—Ç–æ–Ω–æ–º–Ω—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤')

    // –®–∞–≥ 1: –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
    logger.info('1Ô∏è‚É£ –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏')
    execSync(
      'npx ts-node -r tsconfig-paths/register src/scripts/create-test-task.ts',
      {
        stdio: 'inherit',
      }
    )

    // –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É —à–∞–≥–∞–º–∏
    await new Promise(resolve => setTimeout(resolve, 3000))

    // –®–∞–≥ 2: –ó–∞–ø—É—Å–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–¥–∞—á–∏
    logger.info('2Ô∏è‚É£ –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–¥–∞—á–∏')
    execSync(
      'npx ts-node -r tsconfig-paths/register src/scripts/process-agent-tasks.ts',
      {
        stdio: 'inherit',
      }
    )

    logger.info('‚úÖ –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª —Ä–∞–±–æ—Ç—ã –∞–≤—Ç–æ–Ω–æ–º–Ω—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω')
    return true
  } catch (error) {
    logger.error(
      '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ —Ä–∞–±–æ—Ç—ã –∞–≤—Ç–æ–Ω–æ–º–Ω—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤',
      {
        error: error instanceof Error ? error.message : String(error),
        stack: error instanceof Error ? error.stack : undefined,
      }
    )
    return false
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª
runAgentSystem()
  .then(success => {
    if (success) {
      logger.info('üéâ –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–Ω–æ–º–Ω—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∞')
    } else {
      logger.error('üíî –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–Ω–æ–º–Ω—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤')
    }
    process.exit(success ? 0 : 1)
  })
  .catch(error => {
    logger.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–∏—Å—Ç–µ–º—ã', {
      error: error instanceof Error ? error.message : String(error),
    })
    process.exit(1)
  })
