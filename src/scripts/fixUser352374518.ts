/**
 * ะกะบัะธะฟั ะดะปั ะธัะฟัะฐะฒะปะตะฝะธั ัะธะฟะฐ ะฟะพะดะฟะธัะบะธ ะฟะพะปัะทะพะฒะฐัะตะปั 352374518
 * ะะตะฝัะตะผ subscription_type ั 'stars' ะฝะฐ 'NEUROTESTER'
 */

import { updateUserSubscriptionType } from '../core/supabase'
import { SubscriptionType } from '../interfaces/subscription.interface'
import { logger } from '../utils/logger'

async function fixUser352374518() {
  const userId = '352374518'

  logger.info('๐ง ะะฐะฟััะบ ะธัะฟัะฐะฒะปะตะฝะธั ะดะปั ะฟะพะปัะทะพะฒะฐัะตะปั:', { userId })

  try {
    const result = await updateUserSubscriptionType(
      userId,
      SubscriptionType.NEUROTESTER
    )

    if (result) {
      logger.info('โ ะะพะปัะทะพะฒะฐัะตะปั ััะฟะตัะฝะพ ะธัะฟัะฐะฒะปะตะฝ:', {
        userId,
        newSubscriptionType: SubscriptionType.NEUROTESTER,
      })
      console.log(
        `โ ะฃัะฟะตัะฝะพ! ะะพะปัะทะพะฒะฐัะตะปั ${userId} ัะตะฟะตัั ะธะผะตะตั ะฟะพะดะฟะธัะบั NEUROTESTER`
      )
    } else {
      logger.error('โ ะัะธะฑะบะฐ ะฟัะธ ะธัะฟัะฐะฒะปะตะฝะธะธ ะฟะพะปัะทะพะฒะฐัะตะปั:', { userId })
      console.log(`โ ะัะธะฑะบะฐ ะฟัะธ ะธัะฟัะฐะฒะปะตะฝะธะธ ะฟะพะปัะทะพะฒะฐัะตะปั ${userId}`)
    }
  } catch (error) {
    logger.error('โ ะัะธัะธัะตัะบะฐั ะพัะธะฑะบะฐ:', {
      userId,
      error: error instanceof Error ? error.message : String(error),
    })
    console.log(`โ ะัะธัะธัะตัะบะฐั ะพัะธะฑะบะฐ: ${error}`)
  }
}

// ะะฐะฟััะบะฐะตะผ ะธัะฟัะฐะฒะปะตะฝะธะต
fixUser352374518()
  .then(() => {
    console.log('๐ ะกะบัะธะฟั ะทะฐะฒะตััะตะฝ')
    process.exit(0)
  })
  .catch(error => {
    console.error('๐ฅ ะคะฐัะฐะปัะฝะฐั ะพัะธะฑะบะฐ:', error)
    process.exit(1)
  })
