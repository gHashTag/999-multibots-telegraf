/**
 * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–∏–ø–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: npx tsx src/scripts/fixSpecificUser.ts <telegram_id> <new_subscription_type>
 * –ü—Ä–∏–º–µ—Ä: npx tsx src/scripts/fixSpecificUser.ts 352374518 NEUROTESTER
 */

import { updateUserSubscriptionType } from '../core/supabase'
import { SubscriptionType } from '../interfaces/subscription.interface'
import { logger } from '../utils/logger'

async function fixSpecificUser() {
  const args = process.argv.slice(2)

  if (args.length < 2) {
    console.error('‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤!')
    console.log(
      '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: npx tsx src/scripts/fixSpecificUser.ts <telegram_id> <subscription_type>'
    )
    console.log('–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∏–ø—ã: NEUROPHOTO, NEUROVIDEO, NEUROTESTER')
    console.log(
      '–ü—Ä–∏–º–µ—Ä: npx tsx src/scripts/fixSpecificUser.ts 352374518 NEUROTESTER'
    )
    process.exit(1)
  }

  const userId = args[0]
  const subscriptionTypeStr = args[1].toUpperCase()

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Ç–∏–ø–∞ –ø–æ–¥–ø–∏—Å–∫–∏
  if (
    !Object.values(SubscriptionType).includes(
      subscriptionTypeStr as SubscriptionType
    )
  ) {
    console.error(`‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø –ø–æ–¥–ø–∏—Å–∫–∏: ${subscriptionTypeStr}`)
    console.log('–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∏–ø—ã:', Object.values(SubscriptionType).join(', '))
    process.exit(1)
  }

  const newSubscriptionType = subscriptionTypeStr as SubscriptionType

  console.log(`üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} -> ${newSubscriptionType}`)
  logger.info('üîß –ó–∞–ø—É—Å–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', {
    userId,
    newSubscriptionType,
  })

  try {
    const result = await updateUserSubscriptionType(userId, newSubscriptionType)

    if (result) {
      logger.info('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω:', {
        userId,
        newSubscriptionType,
      })
      console.log(
        `‚úÖ –£—Å–ø–µ—à–Ω–æ! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} —Ç–µ–ø–µ—Ä—å –∏–º–µ–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É ${newSubscriptionType}`
      )
    } else {
      logger.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', { userId })
      console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`)
      process.exit(1)
    }
  } catch (error) {
    logger.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', {
      userId,
      newSubscriptionType,
      error: error instanceof Error ? error.message : String(error),
    })
    console.log(`‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${error}`)
    process.exit(1)
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
fixSpecificUser()
  .then(() => {
    console.log('üèÅ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω')
    process.exit(0)
  })
  .catch(error => {
    console.error('üí• –§–∞—Ç–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞:', error)
    process.exit(1)
  })
