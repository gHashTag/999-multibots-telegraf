import { Telegraf } from 'telegraf'
import { MyContext } from './interfaces'
import { botLogger } from './utils/logger'

export async function setBotCommands(bot: Telegraf<MyContext>) {
  try {
    const botName = bot.botInfo?.username || 'unknown'
    botLogger.info(botName, `–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥ –¥–ª—è –±–æ—Ç–∞ ${botName}`)

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º await –≤–º–µ—Å—Ç–æ eslint-disable-next-line @typescript-eslint/no-floating-promises
    await bot.telegram.setMyCommands([
      {
        command: 'start',
        description: 'üë§ Start / –ù–∞—á–∞—Ç—å',
      },
      {
        command: 'menu',
        description: 'üë§ Menu / –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
      },
      {
        command: 'support',
        description: 'üë§ Support / –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞',
      },
      // {
      //   command: 'invite',
      //   description: 'üë• Invite a friend / –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞',
      // },
      // {
      //   command: 'price',
      //   description: '‚≠êÔ∏è Price / –¶–µ–Ω–∞',
      // },
      // {
      //   command: 'buy',
      //   description: 'üíµ Top up balance / –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å',
      // },
      // {
      //   command: 'balance',
      //   description: 'üí∞ Balance / –ë–∞–ª–∞–Ω—Å',
      // },
      // {
      //   command: 'help',
      //   description: 'ü§ñ Help / –ü–æ–º–æ—â—å',
      // },
    ])

    botLogger.info(botName, `–ö–æ–º–∞–Ω–¥—ã —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –¥–ª—è –±–æ—Ç–∞ ${botName}`)
    return true
  } catch (error) {
    const botName = bot.botInfo?.username || 'unknown'
    const errorMessage = error instanceof Error ? error.message : String(error)
    botLogger.error(
      botName,
      `–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞: ${errorMessage}`
    )
    // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞ –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–º–∞–Ω–¥
    return false
  }
}
