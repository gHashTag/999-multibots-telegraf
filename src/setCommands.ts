import { Telegraf } from 'telegraf'
import { MyContext } from './interfaces'
import { supabase } from './core/supabase'

// –†–µ–∑–µ—Ä–≤–Ω—ã–π ID –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, –µ—Å–ª–∏ –≤–ª–∞–¥–µ–ª–µ—Ü –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ
const FALLBACK_OWNER_ID = '144022504'

export async function setBotCommands(bot: Telegraf<MyContext>) {
  // –û–±—â–∏–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  await bot.telegram.setMyCommands(
    [
      {
        command: 'start',
        description: 'üë§ Start / –ù–∞—á–∞—Ç—å',
      },
      {
        command: 'menu',
        description: 'üìü Menu / –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
      },
      {
        command: 'tech',
        description: 'üõ† Tech Support / –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞',
      },
      // {
      //   command: 'invite',
      //   description: 'üë• Invite a friend / –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞',
      // },
      // {
      //   command: 'price',
      //   description: '‚≠êÔ∏è Price / –¶–µ–Ω–∞',
      // },
      // {
      //   command: 'buy',
      //   description: 'üíµ Top up balance / –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å',
      // },
      // {
      //   command: 'balance',
      //   description: 'üí∞ Balance / –ë–∞–ª–∞–Ω—Å',
      // },
      // {
      //   command: 'help',
      //   description: 'ü§ñ Help / –ü–æ–º–æ—â—å',
      // },
    ],
    { scope: { type: 'all_private_chats' } }
  )

  try {
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
    const botInfo = await bot.telegram.getMe()
    const botName = botInfo.username

    let ownerTelegramId = FALLBACK_OWNER_ID // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—ã–π ID

    try {
      // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ –±–æ—Ç–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
      const { data, error } = await supabase
        .from('avatars')
        .select('telegram_id')
        .eq('bot_name', botName)
        .single()

      if (error) {
        console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –±–æ—Ç–∞ –≤ –ë–î:', {
          description: 'Could not find bot owner in database',
          error: error?.message || 'Unknown error',
          botName,
          fallbackAction: 'Using fallback owner ID for testing',
        })
      } else if (data) {
        // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã, –æ–±–Ω–æ–≤–ª—è–µ–º ID –≤–ª–∞–¥–µ–ª—å—Ü–∞
        ownerTelegramId = data.telegram_id.toString()
        console.log('‚úÖ –ù–∞–π–¥–µ–Ω –≤–ª–∞–¥–µ–ª–µ—Ü –±–æ—Ç–∞:', {
          description: 'Found bot owner',
          botName,
          ownerTelegramId,
        })
      }
    } catch (dbError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', {
        description: 'Database query error',
        error: dbError?.message || 'Unknown error',
        botName,
        fallbackAction: 'Using fallback owner ID for testing',
      })
    }

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ –±–æ—Ç–∞ (–Ω–∞—Å—Ç–æ—è—â–µ–≥–æ –∏–ª–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ)
    await bot.telegram.setMyCommands(
      [
        {
          command: 'start',
          description: 'üë§ Start / –ù–∞—á–∞—Ç—å',
        },
        {
          command: 'menu',
          description: 'üìü Menu / –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
        },
        {
          command: 'tech',
          description: 'üõ† Tech Support / –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞',
        },
        // {
        //   command: 'broadcast',
        //   description: 'üì¢ Broadcast / –†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π',
        // },
        // {
        //   command: 'stats',
        //   description: 'üìä Statistics / –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
        // },
      ],
      {
        scope: {
          type: 'chat',
          chat_id: parseInt(ownerTelegramId),
        },
      }
    )

    console.log('‚úÖ –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ –±–æ—Ç–∞ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã:', {
      description: 'Owner commands set successfully',
      ownerTelegramId,
      botName,
    })
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∫–æ–º–∞–Ω–¥ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ –±–æ—Ç–∞:', {
      description: 'Error setting owner commands',
      error: error?.message || 'Unknown error',
    })
  }
}
