import { logger } from '@/utils/logger'
import { runTests } from '../runTests'
import { testSimpleReceiptGeneration } from '../tests/payment/simpleReceiptTest'

/**
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Ç–µ—Å—Ç –ø—Ä–æ—Å—Ç–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–ª–∞—Ç–µ–∂–Ω–æ–≥–æ —á–µ–∫–∞
 */
export async function runSimpleReceiptTest() {
  logger.info('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –ø—Ä–æ—Å—Ç–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–ª–∞—Ç–µ–∂–Ω–æ–≥–æ —á–µ–∫–∞', {
    description: 'Running simple payment receipt test',
  })

  try {
    const results = await runTests([testSimpleReceiptGeneration])

    if (results[0].success) {
      logger.info('‚úÖ –¢–µ—Å—Ç –ø—Ä–æ—Å—Ç–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–ª–∞—Ç–µ–∂–Ω–æ–≥–æ —á–µ–∫–∞ –ø—Ä–æ–π–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ', {
        description: 'Simple payment receipt test passed successfully',
      })
    } else {
      logger.error('‚ùå –¢–µ—Å—Ç –ø—Ä–æ—Å—Ç–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–ª–∞—Ç–µ–∂–Ω–æ–≥–æ —á–µ–∫–∞ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω', {
        description: 'Simple payment receipt test failed',
        error: results[0].message,
      })
      process.exit(1)
    }

    return results
  } catch (error: any) {
    logger.error(
      '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ç–µ—Å—Ç–∞ –ø—Ä–æ—Å—Ç–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–ª–∞—Ç–µ–∂–Ω–æ–≥–æ —á–µ–∫–∞',
      {
        description: 'Error running simple payment receipt test',
        error: error.message,
        stack: error.stack,
      }
    )
    throw error
  }
}

// –ï—Å–ª–∏ —Ñ–∞–π–ª –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é, –≤—ã–ø–æ–ª–Ω—è–µ–º —Ç–µ—Å—Ç
if (require.main === module) {
  runSimpleReceiptTest()
    .then(() => {
      logger.info(
        'üèÅ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞ –ø—Ä–æ—Å—Ç–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–ª–∞—Ç–µ–∂–Ω–æ–≥–æ —á–µ–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ',
        {
          description: 'Simple payment receipt test execution completed',
        }
      )
      process.exit(0)
    })
    .catch(error => {
      logger.error(
        '‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–∞ –ø—Ä–æ—Å—Ç–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–ª–∞—Ç–µ–∂–Ω–æ–≥–æ —á–µ–∫–∞',
        {
          description:
            'Critical error during simple payment receipt test execution',
          error: error.message,
          stack: error.stack,
        }
      )
      process.exit(1)
    })
}
