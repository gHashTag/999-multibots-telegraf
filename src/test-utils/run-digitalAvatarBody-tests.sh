#!/bin/bash
# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å—Ü–µ–Ω —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ —Ç–µ–ª–∞ (DigitalAvatarBody v1 –∏ v2)

echo "üß™ –ó–∞–ø—É—Å–∫ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ü–µ–Ω —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ —Ç–µ–ª–∞"
echo "======================================================"

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
export TEST=true
export NODE_ENV=test

# –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤
cat > /Users/playom/999-multibots-telegraf/src/test-utils/digitalBodyTests.js << 'EOF'
/**
 * –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å—Ü–µ–Ω —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ —Ç–µ–ª–∞ (DigitalAvatarBody)
 */

const digitalAvatarBodyTests = require('./tests/scenes/digitalAvatarBodyWizard.test');
const digitalAvatarBodyV2Tests = require('./tests/scenes/digitalAvatarBodyWizardV2.test');
const trainFluxModelTests = require('./tests/scenes/trainFluxModelWizard.test');

async function runAllTests() {
  console.log('ü§ñ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –¥–ª—è —Å—Ü–µ–Ω —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ —Ç–µ–ª–∞ (DigitalAvatarBody)');
  
  // –°—á–µ—Ç—á–∏–∫–∏ –¥–ª—è –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
  let totalTestSuites = 0;
  let passedTestSuites = 0;
  let totalTests = 0;
  let passedTests = 0;

  try {
    // 1. –¢–µ—Å—Ç—ã –¥–ª—è DigitalAvatarBody (v1)
    console.log('\nüß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –¥–ª—è —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ —Ç–µ–ª–∞ –≤–µ—Ä—Å–∏—è 1 (DigitalAvatarBody)...');
    const digitalAvatarBodyResults = await digitalAvatarBodyTests.runDigitalAvatarBodyWizardTests();
    
    totalTestSuites++;
    totalTests += digitalAvatarBodyResults.length;
    passedTests += digitalAvatarBodyResults.filter(r => r.success).length;
    
    if (digitalAvatarBodyResults.every(r => r.success)) {
      passedTestSuites++;
      console.log('‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ —Ç–µ–ª–∞ v1 —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω—ã!');
    } else {
      console.log('‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ —Ç–µ–ª–∞ v1 –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã!');
    }
    
    // 2. –¢–µ—Å—Ç—ã –¥–ª—è DigitalAvatarBody V2
    console.log('\nüß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –¥–ª—è —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ —Ç–µ–ª–∞ –≤–µ—Ä—Å–∏—è 2 (DigitalAvatarBodyV2)...');
    const digitalAvatarBodyV2Results = await digitalAvatarBodyV2Tests.runDigitalAvatarBodyWizardV2Tests();
    
    totalTestSuites++;
    totalTests += digitalAvatarBodyV2Results.length;
    passedTests += digitalAvatarBodyV2Results.filter(r => r.success).length;
    
    if (digitalAvatarBodyV2Results.every(r => r.success)) {
      passedTestSuites++;
      console.log('‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ —Ç–µ–ª–∞ v2 —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω—ã!');
    } else {
      console.log('‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ —Ç–µ–ª–∞ v2 –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã!');
    }
    
    // 3. –¢–µ—Å—Ç—ã –¥–ª—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
    console.log('\nüß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π (trainFluxModelWizard)...');
    const trainFluxModelResults = await trainFluxModelTests.runTrainFluxModelWizardTests();
    
    totalTestSuites++;
    totalTests += trainFluxModelResults.length;
    passedTests += trainFluxModelResults.filter(r => r.success).length;
    
    if (trainFluxModelResults.every(r => r.success)) {
      passedTestSuites++;
      console.log('‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω—ã!');
    } else {
      console.log('‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã!');
    }
    
    // –í—ã–≤–æ–¥–∏–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    console.log('\nüìä –û–±—â–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:');
    console.log(`–ù–∞–±–æ—Ä–æ–≤ —Ç–µ—Å—Ç–æ–≤: ${passedTestSuites}/${totalTestSuites} —É—Å–ø–µ—à–Ω–æ`);
    console.log(`–¢–µ—Å—Ç–æ–≤: ${passedTests}/${totalTests} —É—Å–ø–µ—à–Ω–æ`);
    
    // –í—ã–≤–æ–¥–∏–º —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–π
    console.log('\nüîç –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–π —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ —Ç–µ–ª–∞:');
    console.log('1Ô∏è‚É£ DigitalAvatarBody (v1):');
    console.log('   - –ë–∞–∑–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ —Ç–µ–ª–∞');
    console.log('   - –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –æ—Ç 1000 –¥–æ 6000 —à–∞–≥–æ–≤ –æ–±—É—á–µ–Ω–∏—è');
    console.log('   - –°—Ç–æ–∏–º–æ—Å—Ç—å: 0.1$ –∑–∞ —à–∞–≥ –æ–±—É—á–µ–Ω–∏—è');
    
    console.log('2Ô∏è‚É£ DigitalAvatarBodyV2 (v2 - Flux Pro):');
    console.log('   - –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ —Ç–µ–ª–∞');
    console.log('   - –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –æ—Ç 1000 –¥–æ 6000 —à–∞–≥–æ–≤ –æ–±—É—á–µ–Ω–∏—è');
    console.log('   - –°—Ç–æ–∏–º–æ—Å—Ç—å: 0.2$ –∑–∞ —à–∞–≥ –æ–±—É—á–µ–Ω–∏—è (–≤–¥–≤–æ–µ –¥–æ—Ä–æ–∂–µ)');
    console.log('   - –ë–æ–ª–µ–µ –≤—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏');
    console.log('   - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏');
    
    // –í—ã—Ö–æ–¥ —Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º —Å—Ç–∞—Ç—É—Å–æ–º
    if (passedTestSuites === totalTestSuites) {
      console.log('\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω—ã!');
      process.exit(0);
    } else {
      console.log('\n‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã!');
      process.exit(1);
    }
  } catch (error) {
    console.error('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤:', error);
    process.exit(1);
  }
}

runAllTests().catch(error => {
  console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  process.exit(1);
});
EOF

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
cd /Users/playom/999-multibots-telegraf/src/test-utils
node digitalBodyTests.js

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–¥ –≤—ã—Ö–æ–¥–∞
if [ $? -eq 0 ]; then
  echo "‚úÖ –¢–µ—Å—Ç—ã —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ —Ç–µ–ª–∞ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã"
  exit 0
else
  echo "‚ùå –¢–µ—Å—Ç—ã —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ —Ç–µ–ª–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å —Å –æ—à–∏–±–∫–∞–º–∏"
  exit 1
fi 