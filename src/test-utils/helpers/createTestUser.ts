import { supabase } from '@/core/supabase'
import { logger } from '@/utils/logger'
import { TEST_CONFIG } from '../test-config'

/**
 * –°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
 */
export async function createTestUser(telegram_id: string): Promise<void> {
  try {
    logger.info({
      message: 'üë§ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
      description: 'Creating test user',
      telegram_id,
    })

    const { error } = await supabase.from('users').insert({
      telegram_id,
      balance: 1000,
      subscription: 'free',
      level: 1,
      bot_name: TEST_CONFIG.bots.default,
    })

    if (error) {
      logger.error({
        message: '‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
        description: 'Error creating test user',
        error: error.message,
        telegram_id,
      })
      throw error
    }

    logger.info({
      message: '‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω',
      description: 'Test user created successfully',
      telegram_id,
    })
  } catch (error) {
    logger.error({
      message: '‚ùå –û—à–∏–±–∫–∞ –≤ createTestUser',
      description: 'Error in createTestUser function',
      error: error instanceof Error ? error.message : 'Unknown error',
      telegram_id,
    })
    throw error
  }
}
