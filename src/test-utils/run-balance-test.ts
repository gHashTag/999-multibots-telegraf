import { logger } from '@/utils/logger'
import { TestResult } from './interfaces'
import { testBalance } from './tests/balance.test'

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
process.env.NODE_ENV = 'test'

export async function runBalanceTests(): Promise<TestResult[]> {
  try {
    logger.info('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –±–∞–ª–∞–Ω—Å–∞', {
      description: 'Starting balance tests',
    })

    const results = await testBalance()
    return Array.isArray(results) ? results : [results]
  } catch (error) {
    logger.error({
      message: '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ç–µ—Å—Ç–æ–≤ –±–∞–ª–∞–Ω—Å–∞',
      description: 'Error running balance tests',
      error: error instanceof Error ? error.message : String(error),
    })

    return [
      {
        name: 'Balance Tests',
        success: false,
        message: `–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ç–µ—Å—Ç–æ–≤: ${
          error instanceof Error ? error.message : String(error)
        }`,
      },
    ]
  }
}

async function runTests() {
  logger.info({
    message: 'üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –±–∞–ª–∞–Ω—Å–∞',
    description: 'Starting balance tests',
  })

  try {
    const results = await runBalanceTests()

    for (const result of results) {
      logger.info({
        message: result.success
          ? '‚úÖ –¢–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω'
          : '‚ùå –¢–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–µ–Ω',
        description: 'Test completed',
        name: result.name,
        success: result.success,
        details: result.message,
        error: result.error,
      })
    }
  } catch (error) {
    logger.error({
      message: '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–∞',
      description: 'Error running test',
      error: error instanceof Error ? error.message : String(error),
    })
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
runTests()
