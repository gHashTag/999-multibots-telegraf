import { logger } from '@/utils/logger'
import { runTests } from './runTests'
import { testRuBillWizardSceneSimple } from './tests/rubill/ruBillWizardTest2'

/**
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å–µ —Ç–µ—Å—Ç—ã –¥–ª—è RuBillWizard
 */
export async function runRuBillTests() {
  logger.info('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ RuBillWizard', {
    description: 'Running RuBillWizard tests',
  })

  try {
    const results = await runTests([
      testRuBillWizardSceneSimple,
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã –¥–ª—è RuBillWizard
    ])

    const passedTests = results.filter(r => r.success).length
    const failedTests = results.filter(r => !r.success).length
    const totalTests = results.length

    if (failedTests === 0) {
      logger.info('‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã RuBillWizard –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ', {
        description: 'All RuBillWizard tests passed successfully',
        passedTests,
        totalTests,
      })
    } else {
      logger.error('‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã RuBillWizard –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã', {
        description: 'Some RuBillWizard tests failed',
        passedTests,
        failedTests,
        totalTests,
      })
    }

    return results
  } catch (error) {
    logger.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ç–µ—Å—Ç–æ–≤ RuBillWizard', {
      description: 'Error running RuBillWizard tests',
      error: error instanceof Error ? error.message : String(error),
    })
    throw error
  }
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å–∫–∞—Ç—å —Ç–µ—Å—Ç—ã –ø—Ä–∏ –≤—ã–∑–æ–≤–µ —Å–∫—Ä–∏–ø—Ç–∞ –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  runRuBillTests()
    .then(() => {
      logger.info('üèÅ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤ RuBillWizard', {
        description: 'Finished running RuBillWizard tests',
      })
    })
    .catch(error => {
      logger.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ç–µ—Å—Ç–æ–≤ RuBillWizard', {
        description: 'Critical error running RuBillWizard tests',
        error: error instanceof Error ? error.message : String(error),
      })
      process.exit(1)
    })
}
