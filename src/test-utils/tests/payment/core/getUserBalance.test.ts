import { logger } from '@/utils/logger'
import { TestResult } from '../../../types'
import { TEST_CONFIG } from '../../../test-config'
import { inngestTestEngine } from '../../../inngest-test-engine'

export async function runGetUserBalanceTest(): Promise<TestResult> {
  try {
    logger.info('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–ª–∞–Ω—Å–∞...')

    // –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    const testData = {
      telegram_id: TEST_CONFIG.TEST_USER_ID,
      amount: 100,
      type: 'money_income',
      description: 'Test balance check',
      bot_name: 'test_bot',
      service_type: 'TopUpBalance',
    }

    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
    await inngestTestEngine.sendEvent({
      name: 'payment/process',
      data: testData,
      timestamp: Date.now(),
    })

    // –û–∂–∏–¥–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Ç–µ–∂–∞
    const paymentResult =
      await inngestTestEngine.waitForEvent('payment/completed')

    if (!paymentResult) {
      throw new Error('–ü–ª–∞—Ç–µ–∂ –Ω–µ –±—ã–ª –æ–±—Ä–∞–±–æ—Ç–∞–Ω')
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏—é getUserBalance
    const balance = await inngestTestEngine.executeQuery(
      'SELECT get_user_balance($1)'
    )

    if (balance !== testData.amount) {
      throw new Error(
        `–ù–µ–≤–µ—Ä–Ω—ã–π –±–∞–ª–∞–Ω—Å: ${balance}, –æ–∂–∏–¥–∞–ª–æ—Å—å: ${testData.amount}`
      )
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è
    const invalidBalance = await inngestTestEngine.executeQuery(
      'SELECT get_user_balance($1)'
    )

    if (invalidBalance !== 0) {
      throw new Error(
        `–ù–µ–≤–µ—Ä–Ω—ã–π –±–∞–ª–∞–Ω—Å –¥–ª—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${invalidBalance}, –æ–∂–∏–¥–∞–ª–æ—Å—å: 0`
      )
    }

    return {
      success: true,
      message: '–¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–ª–∞–Ω—Å–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω',
      name: 'GetUserBalance',
    }
  } catch (error) {
    return {
      success: false,
      message: error instanceof Error ? error.message : String(error),
      name: 'GetUserBalance',
    }
  }
}
