/**
 * –ò–Ω–¥–µ–∫—Å —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
 */
import { logger } from '@/utils/logger'
import { TestResult } from '../../types'
import { runAgentRouterTests } from './agentRouterTest'

/**
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Ç–µ—Å—Ç—ã
 */
export async function runSystemTests(): Promise<TestResult[]> {
  logger.info('üöÄ [TEST_RUNNER]: –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤')

  // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã –∞–≥–µ–Ω—Ç—Å–∫–æ–≥–æ —Ä–æ—É—Ç–µ—Ä–∞
  const agentRouterResults = await runAgentRouterTests()

  // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∏–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Ç–µ—Å—Ç—ã
  // const otherSystemResults = await runOtherSystemTests()

  // –û–±—ä–µ–¥–∏–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
  const results = [
    ...agentRouterResults,
    // ...otherSystemResults,
  ]

  // –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
  const totalTests = results.length
  const passedTests = results.filter(r => r.success).length
  const failedTests = totalTests - passedTests

  logger.info(
    `üìä [TEST_RUNNER]: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤: –≤—Å–µ–≥–æ=${totalTests}, —É—Å–ø–µ—à–Ω–æ=${passedTests}, –Ω–µ—É–¥–∞—á–Ω–æ=${failedTests}`
  )

  return results
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ —Ç–µ—Å—Ç–æ–≤
export { runAgentRouterTests }
