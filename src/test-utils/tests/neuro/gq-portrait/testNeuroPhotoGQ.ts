import { testDirectGenerationAndReport } from '../utils/neuroPhotoDirectUtils'
import { ModeEnum } from '@/interfaces/modes'
import dotenv from 'dotenv'
import path from 'path'
import fs from 'fs'

dotenv.config()

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
const args = process.argv.slice(2)
const testModeArg = args.find(arg => arg.startsWith('--test-mode='))

// –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ test-mode –∏–∑ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
let TEST_MODE = false // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤–∫–ª—é—á–µ–Ω —Ä–µ–∂–∏–º —Ä–µ–∞–ª—å–Ω–æ–≥–æ API

if (testModeArg) {
  const testModeValue = testModeArg.split('=')[1].toLowerCase()
  TEST_MODE = testModeValue === 'true'
} else if (process.env.TEST_MODE !== undefined) {
  TEST_MODE = process.env.TEST_MODE === 'true'
}

console.log(
  `üîç –†–µ–∂–∏–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ${TEST_MODE ? '–¢–µ—Å—Ç–æ–≤—ã–π (–±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ API)' : '–†–µ–∞–ª—å–Ω—ã–π (—Å –≤—ã–∑–æ–≤–æ–º API)'}`
)

export async function testGQPortrait() {
  const TEST_TELEGRAM_ID = process.env.TEST_TELEGRAM_ID || '144022504'
  const TEST_USERNAME = process.env.TEST_USERNAME || 'test_user'
  const TELEGRAM_GROUP_ID = process.env.TELEGRAM_GROUP_ID || '-1001234567890'

  console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ—Ä—Ç—Ä–µ—Ç–∞ –≤ —Å—Ç–∏–ª–µ GQ...')

  // URL –º–æ–¥–µ–ª–∏ –Ω–∞ Replicate
  const MODEL_URL =
    'ghashtag/neuro_coder_flux-dev-lora:5ff9ea5918427540563f09940bf95d6efc16b8ce9600e82bb17c2b188384e355'

  // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è GQ –ø–æ—Ä—Ç—Ä–µ—Ç–∞
  const gqPrompt =
    'NEUROCODER professional portrait photograph of a bald man with masculine features, no hair, clean shaven head, strong jawline, in GQ magazine style, high fashion editorial, perfect studio lighting, sharp facial features, strong masculine look, portrait orientation, 8k, high resolution, perfect details, elegant fashion photography, professional retouching, cinematic lighting, detailed skin texture, professional DSLR quality'

  // –í —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ –Ω–µ –¥–µ–ª–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–π –≤—ã–∑–æ–≤ API
  if (TEST_MODE) {
    console.log('‚ö†Ô∏è –ó–∞–ø—É—Å–∫ –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ (–±–µ–∑ –≤—ã–∑–æ–≤–∞ —Ä–µ–∞–ª—å–Ω–æ–≥–æ API)')

    // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    const uploadsDir = path.join(
      process.cwd(),
      'src',
      'uploads',
      TEST_TELEGRAM_ID,
      'neuro-photo'
    )
    try {
      if (!fs.existsSync(uploadsDir)) {
        fs.mkdirSync(uploadsDir, { recursive: true })
      }

      console.log(
        `‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å–æ–∑–¥–∞–Ω–∞: ${uploadsDir}`
      )
      console.log('‚úÖ –¢–µ—Å—Ç –≤ —Ä–µ–∂–∏–º–µ —ç–º—É–ª—è—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ')
      return
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:', error)
      throw new Error(
        `–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: ${error instanceof Error ? error.message : String(error)}`
      )
    }
  }

  console.log('üîÑ –ó–∞–ø—É—Å–∫ –≤ –†–ï–ê–õ–¨–ù–û–ú —Ä–µ–∂–∏–º–µ —Å –≤—ã–∑–æ–≤–æ–º API')
  console.log(`üì° –ú–æ–¥–µ–ª—å: ${MODEL_URL}`)
  console.log(`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${TEST_USERNAME} (${TEST_TELEGRAM_ID})`)
  console.log(`üîä –ì—Ä—É–ø–ø–∞: @neuro_blogger_pulse (${TELEGRAM_GROUP_ID})`)

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Telegram-–±–æ—Ç–∞
    if (!process.env.TELEGRAM_BOT_TOKEN) {
      throw new Error(
        '–ù–µ –∑–∞–¥–∞–Ω —Ç–æ–∫–µ–Ω Telegram-–±–æ—Ç–∞ (TELEGRAM_BOT_TOKEN). –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –≥—Ä—É–ø–ø—É.'
      )
    }

    // –í—ã–≤–æ–¥–∏–º –≤—Å–µ –≤—Ö–æ–¥–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    console.log('üìã –í—Ö–æ–¥–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è testDirectGenerationAndReport:')
    const inputParams = {
      mode: ModeEnum.NeuroPhoto,
      prompt: gqPrompt,
      model_url: MODEL_URL,
      numImages: 1,
      telegram_id: TEST_TELEGRAM_ID,
      username: TEST_USERNAME,
      amount: 0, // –î–æ–±–∞–≤–ª—è–µ–º amount
      bot_name: 'ai_koshey_bot',
      selectedModel: 'neurocoder',
      selectedSize: '9:16',
      telegram_group_id: TELEGRAM_GROUP_ID,
      is_ru: 'true',
      // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ URL –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –≥—Ä—É–ø–ø—É
      fakeUrls: [
        'https://replicate.delivery/pbxt/a6TPH3gYlQTOuZ9QaRTpZD8QFhLJPg6bODnz7WLmOMwLcB4IA/out-0.png',
        'https://replicate.delivery/pbxt/BoZjcXl3UtU9Bm2Mq9wPB1tYz3rOzQKH8STSo3ykOLCe4BHA/out-0.png',
      ],
    }

    console.log(JSON.stringify(inputParams, null, 2))

    console.log('üîÑ –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ testDirectGenerationAndReport...')
    const result = await testDirectGenerationAndReport(inputParams)

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    console.log('üìã –†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–∑–æ–≤–∞:')
    console.log(JSON.stringify(result, null, 2))

    if (!result) {
      throw new Error('testDirectGenerationAndReport –≤–µ—Ä–Ω—É–ª null –∏–ª–∏ undefined')
    }

    if (!result.success) {
      throw new Error(`–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π: ${result.message}`)
    }

    console.log('‚úÖ –¢–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!')
    console.log(
      'üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≥—Ä—É–ø–ø—É @neuro_blogger_pulse –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.'
    )

    // –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö URL
    if (result.details?.urls && result.details.urls.length > 0) {
      console.log(`üì∏ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: ${result.details.urls.length}`)
      result.details.urls.forEach((url, index) => {
        console.log(`üì∑ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ${index + 1}: ${url.substring(0, 60)}...`)
      })
    }

    return result
  } catch (error) {
    console.error(
      '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ:',
      error instanceof Error ? error.message : String(error)
    )
    if (error instanceof Error && error.stack) {
      console.error('üìö –°—Ç–µ–∫ –æ—à–∏–±–∫–∏:', error.stack)
    }
    throw error // –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–∞–ª—å—à–µ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
if (require.main === module) {
  testGQPortrait().catch(error => {
    console.error(
      '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–∞ GQ –ø–æ—Ä—Ç—Ä–µ—Ç–∞:',
      error instanceof Error ? error.message : String(error)
    )
    process.exit(1)
  })
}
