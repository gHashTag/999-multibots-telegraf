import { testGQPortrait } from './testNeuroPhotoGQ'
import { testGQPortraitBatch } from './testNeuroPhotoGQBatch'
import { testGQBusinessPortrait } from './testNeuroPhotoGQBusiness'
import { testGQFashionPortrait } from './testNeuroPhotoGQFashion'
import dotenv from 'dotenv'
import path from 'path'
import fs from 'fs'

dotenv.config()

// –†–µ–∂–∏–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (true - –∏–º–∏—Ç–∞—Ü–∏—è API, false - —Ä–µ–∞–ª—å–Ω—ã–π –≤—ã–∑–æ–≤ API)
const TEST_MODE = process.env.TEST_MODE === 'true' || true

// –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
const DELAY_BETWEEN_TESTS = 2000

/**
 * –ü–∞—É–∑–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
 * @param ms –í—Ä–µ–º—è –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
 */
const sleep = (ms: number) => new Promise(resolve => setTimeout(resolve, ms))

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤ NeuroPhoto GQ Portrait
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç —Ç–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ—Ä—Ç—Ä–µ—Ç–æ–≤ –≤ —Å—Ç–∏–ª–µ GQ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤
 */
async function runAllGQTests() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ –∫–æ–º–ø–ª–µ–∫—Ç–∞ —Ç–µ—Å—Ç–æ–≤ –¥–ª—è GQ Portrait...')

  try {
    // –í —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ —Å–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    const TEST_TELEGRAM_ID = process.env.TEST_TELEGRAM_ID || '144022504'
    if (TEST_MODE) {
      console.log(
        '‚ö†Ô∏è –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤ –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ (–±–µ–∑ –≤—ã–∑–æ–≤–∞ —Ä–µ–∞–ª—å–Ω–æ–≥–æ API)'
      )

      // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
      const uploadsDir = path.join(
        process.cwd(),
        'src',
        'uploads',
        TEST_TELEGRAM_ID,
        'neuro-photo'
      )
      try {
        if (!fs.existsSync(uploadsDir)) {
          fs.mkdirSync(uploadsDir, { recursive: true })
        }
        console.log(
          `‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å–æ–∑–¥–∞–Ω–∞: ${uploadsDir}`
        )
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:', error)
      }
    }

    // –ë–∞–∑–æ–≤—ã–π GQ –ø–æ—Ä—Ç—Ä–µ—Ç
    console.log('\nüìå [1/4] –ó–∞–ø—É—Å–∫ –±–∞–∑–æ–≤–æ–≥–æ —Ç–µ—Å—Ç–∞ GQ Portrait')
    await testGQPortrait()

    // –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏
    console.log(`‚è±Ô∏è –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏ (${DELAY_BETWEEN_TESTS}ms)`)
    await sleep(DELAY_BETWEEN_TESTS)

    // –ë–∏–∑–Ω–µ—Å GQ –ø–æ—Ä—Ç—Ä–µ—Ç
    console.log('\nüìå [2/4] –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ Business GQ Portrait')
    await testGQBusinessPortrait()

    // –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏
    console.log(`‚è±Ô∏è –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏ (${DELAY_BETWEEN_TESTS}ms)`)
    await sleep(DELAY_BETWEEN_TESTS)

    // –ú–æ–¥–Ω—ã–π GQ –ø–æ—Ä—Ç—Ä–µ—Ç
    console.log('\nüìå [3/4] –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ Fashion GQ Portrait')
    await testGQFashionPortrait()

    // –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏
    console.log(`‚è±Ô∏è –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏ (${DELAY_BETWEEN_TESTS}ms)`)
    await sleep(DELAY_BETWEEN_TESTS)

    // –ü–∞–∫–µ—Ç–Ω—ã–π —Ç–µ—Å—Ç GQ –ø–æ—Ä—Ç—Ä–µ—Ç–æ–≤ (—Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞—Ü–∏–∏)
    console.log('\nüìå [4/4] –ó–∞–ø—É—Å–∫ –ø–∞–∫–µ—Ç–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ GQ Portrait Batch')
    await testGQPortraitBatch()

    console.log('\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã GQ Portrait —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω—ã!')
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤ –¥–ª—è GQ Portrait:', error)
    process.exit(1)
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç–µ—Ä, –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  runAllGQTests().catch(error => {
    console.error('‚ùå –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –≤ GQAllTester:', error)
    process.exit(1)
  })
}

export { runAllGQTests }
