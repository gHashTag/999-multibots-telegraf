import { testDirectGenerationAndReport } from '../utils/neuroPhotoDirectUtils'
import { ModeEnum } from '@/interfaces/modes'
import dotenv from 'dotenv'
import path from 'path'
import fs from 'fs'

dotenv.config()

// –†–µ–∂–∏–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (true - –∏–º–∏—Ç–∞—Ü–∏—è API, false - —Ä–µ–∞–ª—å–Ω—ã–π –≤—ã–∑–æ–≤ API)
const TEST_MODE = process.env.TEST_MODE === 'true' || true

/**
 * –§—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –º–æ–¥–Ω—ã—Ö –∂–µ–Ω—Å–∫–∏—Ö –ø–æ—Ä—Ç—Ä–µ—Ç–æ–≤ –≤ —Å—Ç–∏–ª–µ GQ/Vogue
 * –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ —Ñ—ç—à–Ω-–ø—Ä–æ–µ–∫—Ç–∞—Ö
 */
export async function testGQFashionPortrait() {
  const TEST_TELEGRAM_ID = process.env.TEST_TELEGRAM_ID || '144022504'
  const TEST_USERNAME = process.env.TEST_USERNAME || 'test_user'
  const TELEGRAM_GROUP_ID = process.env.TELEGRAM_GROUP_ID || '-1001234567890'

  console.log(
    'üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–æ–¥–Ω–æ–≥–æ –∂–µ–Ω—Å–∫–æ–≥–æ –ø–æ—Ä—Ç—Ä–µ—Ç–∞ –≤ —Å—Ç–∏–ª–µ GQ/Vogue...'
  )

  // URL –º–æ–¥–µ–ª–∏ –Ω–∞ Replicate
  const MODEL_URL =
    'ghashtag/neuro_coder_flux-dev-lora:5ff9ea5918427540563f09940bf95d6efc16b8ce9600e82bb17c2b188384e355'

  // –ú–æ–¥–Ω—ã–π –∂–µ–Ω—Å–∫–∏–π –ø–æ—Ä—Ç—Ä–µ—Ç –≤ —Å—Ç–∏–ª–µ GQ/Vogue
  const fashionPrompt =
    'NEUROCODER professional portrait photograph of an elegant fashion model woman, high fashion Vogue/GQ magazine editorial style, perfect professional studio lighting, sharp features, flawless skin, fashion week aesthetic, portrait orientation with dramatic composition, 8k, high resolution, perfect details, haute couture, professional retouching, cinematic lighting with artistic shadows, luxury fashion photography, professional styling, designer clothing, minimalist background'

  // –í —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ –Ω–µ –¥–µ–ª–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–π –≤—ã–∑–æ–≤ API
  if (TEST_MODE) {
    console.log('‚ö†Ô∏è –ó–∞–ø—É—Å–∫ –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ (–±–µ–∑ –≤—ã–∑–æ–≤–∞ —Ä–µ–∞–ª—å–Ω–æ–≥–æ API)')

    // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    const uploadsDir = path.join(
      process.cwd(),
      'src',
      'uploads',
      TEST_TELEGRAM_ID,
      'neuro-photo'
    )
    try {
      if (!fs.existsSync(uploadsDir)) {
        fs.mkdirSync(uploadsDir, { recursive: true })
      }

      console.log(
        `‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å–æ–∑–¥–∞–Ω–∞: ${uploadsDir}`
      )
      console.log('‚úÖ –¢–µ—Å—Ç –≤ —Ä–µ–∂–∏–º–µ —ç–º—É–ª—è—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ')
      return
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:', error)
      return
    }
  }

  await testDirectGenerationAndReport({
    mode: ModeEnum.NeuroPhoto,
    prompt: fashionPrompt,
    model_url: MODEL_URL,
    numImages: 1,
    telegram_id: TEST_TELEGRAM_ID,
    username: TEST_USERNAME,
    amount: 0,
    bot_name: 'neuro-photo-test',
    selectedModel: 'neurocoder',
    selectedSize: '9:16',
    telegram_group_id: TELEGRAM_GROUP_ID,
    is_ru: 'true',
  })

  console.log(
    '‚úÖ –¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–æ–¥–Ω–æ–≥–æ –ø–æ—Ä—Ç—Ä–µ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞–ø–∫—É uploads –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.'
  )
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
if (require.main === module) {
  testGQFashionPortrait().catch(error => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–∞ –º–æ–¥–Ω–æ–≥–æ GQ –ø–æ—Ä—Ç—Ä–µ—Ç–∞:', error)
    process.exit(1)
  })
}
