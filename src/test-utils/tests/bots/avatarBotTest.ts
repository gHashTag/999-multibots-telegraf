import { logger } from '@/utils/logger'
import { TelegrafBotTester } from '../../testers/TelegrafBotTester'
import { TestResult } from '../../types'
import { createMockAvatarBot } from '../../helpers/createMockAvatarBot'
import { AVATAR_BOT_DEFAULTS } from '../../test-config'

/**
 * –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –∞–≤–∞—Ç–∞—Ä-–±–æ—Ç–æ–º
 */
export async function testAvatarBotBasicInteraction(): Promise<TestResult> {
  try {
    logger.info('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –±–∞–∑–æ–≤–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –∞–≤–∞—Ç–∞—Ä-–±–æ—Ç–æ–º', {
      description: 'Testing basic avatar bot interaction',
    })

    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞–≤–∞—Ç–∞—Ä-–±–æ—Ç–∞
    const mockAvatarBot = await createMockAvatarBot({
      botName: AVATAR_BOT_DEFAULTS.botName,
      ambassadorId: AVATAR_BOT_DEFAULTS.ambassadorId.toString(),
      avatarUrl: AVATAR_BOT_DEFAULTS.avatarUrl,
      isActive: true,
    })

    logger.info('‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –∞–≤–∞—Ç–∞—Ä-–±–æ—Ç', {
      description: 'Created test avatar bot',
      botId: mockAvatarBot.id,
      botName: mockAvatarBot.bot_name,
      avatarUrl: mockAvatarBot.avatar_url,
    })

    // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–µ—Ä–∞ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º
    const botTester = new TelegrafBotTester(AVATAR_BOT_DEFAULTS.botName)
    const userId = AVATAR_BOT_DEFAULTS.userId

    // –°–∏–º—É–ª—è—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–º–∞–Ω–¥—ã /start
    await botTester.simulateMessage(userId, '/start')

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏–ª –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    const hasGreeting = botTester.hasMessageWithText(userId, '–ü—Ä–∏–≤–µ—Ç')
    if (!hasGreeting) {
      throw new Error('–ë–æ—Ç –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ')
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏—è
    const hasActionButton = botTester.hasInlineButton(userId, '–ù–∞—á–∞—Ç—å —Ä–∞–∑–≥–æ–≤–æ—Ä')
    if (!hasActionButton) {
      throw new Error('–ë–æ—Ç –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª –∫–Ω–æ–ø–∫—É "–ù–∞—á–∞—Ç—å —Ä–∞–∑–≥–æ–≤–æ—Ä"')
    }

    // –°–∏–º—É–ª—è—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –±–æ—Ç—É
    await botTester.simulateMessage(userId, '–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ')

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
    const hasInformation = botTester.hasMessageWithText(userId, '–Ø –∞–≤–∞—Ç–∞—Ä-–±–æ—Ç')

    if (!hasInformation) {
      throw new Error('–ë–æ—Ç –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–±–µ')
    }

    logger.info(
      '‚úÖ –¢–µ—Å—Ç –±–∞–∑–æ–≤–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –∞–≤–∞—Ç–∞—Ä-–±–æ—Ç–æ–º —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω',
      {
        description: 'Avatar bot basic interaction test passed',
      }
    )

    return {
      success: true,
      name: 'Avatar Bot Basic Interaction Test',
      message: '–¢–µ—Å—Ç –±–∞–∑–æ–≤–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –∞–≤–∞—Ç–∞—Ä-–±–æ—Ç–æ–º —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω',
    }
  } catch (error) {
    logger.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –∞–≤–∞—Ç–∞—Ä-–±–æ—Ç–æ–º', {
      description: 'Error in avatar bot interaction test',
      error: error instanceof Error ? error.message : String(error),
    })

    return {
      success: false,
      name: 'Avatar Bot Basic Interaction Test',
      message: `–û—à–∏–±–∫–∞: ${error instanceof Error ? error.message : String(error)}`,
    }
  }
}

/**
 * –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∞–≤–∞—Ç–∞—Ä-–±–æ—Ç–æ–º
 */
export async function testAvatarBotImageSending(): Promise<TestResult> {
  try {
    logger.info('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∞–≤–∞—Ç–∞—Ä-–±–æ—Ç–æ–º', {
      description: 'Testing avatar bot image sending',
    })

    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞–≤–∞—Ç–∞—Ä-–±–æ—Ç–∞
    const mockAvatarBot = await createMockAvatarBot({
      botName: AVATAR_BOT_DEFAULTS.botName,
      ambassadorId: AVATAR_BOT_DEFAULTS.ambassadorId.toString(),
      avatarUrl: AVATAR_BOT_DEFAULTS.avatarUrl,
      isActive: true,
    })

    logger.info('‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –∞–≤–∞—Ç–∞—Ä-–±–æ—Ç —Å –∞–≤–∞—Ç–∞—Ä–∫–æ–π', {
      description: 'Created test avatar bot with avatar',
      botId: mockAvatarBot.id,
      botName: mockAvatarBot.bot_name,
      avatarUrl: mockAvatarBot.avatar_url,
    })

    // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–µ—Ä–∞ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º
    const botTester = new TelegrafBotTester(AVATAR_BOT_DEFAULTS.botName)
    const userId = AVATAR_BOT_DEFAULTS.userId

    // –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    await botTester.simulateMessage(userId, '–ü–æ–∫–∞–∂–∏ –º–Ω–µ —Å–≤–æ—é –∞–≤–∞—Ç–∞—Ä–∫—É')

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–≤–µ—Ç—ã (–≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ —ç—Ç–æ —É—Å–ª–æ–≤–Ω–æ, —Ç–∞–∫ –∫–∞–∫ –º—ã –Ω–µ –º–æ–∂–µ–º –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–∞–ª—å–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ç–æ –≤ –º–æ–∫–µ)
    const messages = botTester.getSentMessages(userId)
    const hasResponse = messages.length > 0

    if (!hasResponse) {
      throw new Error('–ë–æ—Ç –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª –æ—Ç–≤–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å –∞–≤–∞—Ç–∞—Ä–∫–∏')
    }

    logger.info('‚úÖ –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∞–≤–∞—Ç–∞—Ä-–±–æ—Ç–æ–º —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω', {
      description: 'Avatar bot image sending test passed',
    })

    return {
      success: true,
      name: 'Avatar Bot Image Sending Test',
      message: '–¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∞–≤–∞—Ç–∞—Ä-–±–æ—Ç–æ–º —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω',
    }
  } catch (error) {
    logger.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∞–≤–∞—Ç–∞—Ä-–±–æ—Ç–æ–º', {
      description: 'Error in avatar bot image sending test',
      error: error instanceof Error ? error.message : String(error),
    })

    return {
      success: false,
      name: 'Avatar Bot Image Sending Test',
      message: `–û—à–∏–±–∫–∞: ${error instanceof Error ? error.message : String(error)}`,
    }
  }
}
