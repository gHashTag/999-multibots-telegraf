import { imageModelMenu } from './menu/imageModelMenu'
import { logger } from './utils/logger'
import { generateTextToImage } from './services/generateTextToImage'
import { isRussian } from './helpers/language'
import { MyContext } from './interfaces/'
import { Telegraf } from 'telegraf'

import { generateNeuroImage } from './services/generateNeuroImage'
import { handleSizeSelection } from './handlers'
import { levels, mainMenu } from './menu'
import { getReferalsCountAndUserData } from './core/supabase'
import { composer } from './bot'
import { ModeEnum } from './interfaces/modes'
import { SubscriptionType } from './interfaces/subscription.interface'

composer.hears([levels[1].title_ru, levels[1].title_en], async ctx => {
  console.log('CASE: ü§ñ –¶–∏—Ñ—Ä–æ–≤–æ–µ —Ç–µ–ª–æ')
  ctx.session.mode = ModeEnum.DigitalAvatarBody
  await ctx.scene.enter('digitalAvatarBodyWizard')
})

composer.hears([levels[2].title_ru, levels[2].title_en], async ctx => {
  console.log('CASE hearsHandler: üì∏ –ù–µ–π—Ä–æ—Ñ–æ—Ç–æ')
  ctx.session.mode = ModeEnum.NeuroPhotoV2
  await ctx.scene.enter('neuroPhotoWizardV2')
})

composer.hears(['üì∏ –ù–µ–π—Ä–æ—Ñ–æ—Ç–æ 2', 'üì∏ NeuroPhoto 2'], async ctx => {
  console.log('CASE hearsHandler: üì∏ –ù–µ–π—Ä–æ—Ñ–æ—Ç–æ 2')
  ctx.session.mode = ModeEnum.NeuroPhoto
  await ctx.scene.enter('neuroPhotoWizard')
})

composer.hears([levels[3].title_ru, levels[3].title_en], async ctx => {
  console.log('CASE: üîç –ü—Ä–æ–º–ø—Ç –∏–∑ —Ñ–æ—Ç–æ')
  ctx.session.mode = ModeEnum.ImageToPrompt
  await ctx.scene.enter('imageToPromptWizard')
})

composer.hears([levels[4].title_ru, levels[4].title_en], async ctx => {
  console.log('CASE: üß† –ú–æ–∑–≥ –∞–≤–∞—Ç–∞—Ä–∞')
  ctx.session.mode = ModeEnum.Avatar
  await ctx.scene.enter('avatarWizard')
})

composer.hears([levels[5].title_ru, levels[5].title_en], async ctx => {
  console.log('CASE: üí≠ –ß–∞—Ç —Å –∞–≤–∞—Ç–∞—Ä–æ–º')
  ctx.session.mode = ModeEnum.ChatWithAvatar
  await ctx.scene.enter('chatWithAvatarWizard')
})

composer.hears([levels[6].title_ru, levels[6].title_en], async ctx => {
  console.log('CASE: ü§ñ –í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏ –ò–ò')
  ctx.session.mode = ModeEnum.SelectModel
  await ctx.scene.enter('selectModelWizard')
})

composer.hears([levels[7].title_ru, levels[7].title_en], async ctx => {
  console.log('CASE: üé§ –ì–æ–ª–æ—Å –∞–≤–∞—Ç–∞—Ä–∞')
  ctx.session.mode = ModeEnum.Voice
  await ctx.scene.enter('voiceAvatarWizard')
})

composer.hears([levels[8].title_ru, levels[8].title_en], async ctx => {
  console.log('CASE: üéôÔ∏è –¢–µ–∫—Å—Ç –≤ –≥–æ–ª–æ—Å')
  ctx.session.mode = ModeEnum.TextToSpeech
  await ctx.scene.enter('textToSpeechWizard')
})

composer.hears([levels[9].title_ru, levels[9].title_en], async ctx => {
  console.log('CASE: üé• –§–æ—Ç–æ –≤ –≤–∏–¥–µ–æ')
  ctx.session.mode = ModeEnum.ImageToVideo
  await ctx.scene.enter('imageToVideoWizard')
})

composer.hears([levels[10].title_ru, levels[10].title_en], async ctx => {
  console.log('CASE: üé• –í–∏–¥–µ–æ –∏–∑ —Ç–µ–∫—Å—Ç–∞')
  ctx.session.mode = ModeEnum.TextToVideo
  await ctx.scene.enter('textToVideoWizard')
})

composer.hears([levels[11].title_ru, levels[11].title_en], async ctx => {
  console.log('CASE: üñºÔ∏è –¢–µ–∫—Å—Ç –≤ —Ñ–æ—Ç–æ')
  ctx.session.mode = ModeEnum.TextToImage
  await imageModelMenu(ctx)
})

// composer.hears([levels[12].title_ru, levels[12].title_en], async ctx => {
//   console.log('CASE: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≥—É–±')
//   ctx.session.mode = 'lip_sync'
//   await ctx.scene.enter('checkBalanceScene')
// })

// composer.hears([levels[13].title_ru, levels[13].title_en], async ctx => {
//   console.log('CASE: –í–∏–¥–µ–æ –≤ URL')
//   ctx.session.mode = 'video_in_url'
//   await ctx.scene.enter('uploadVideoScene')
// })

composer.hears(['‚ùì –ü–æ–º–æ—â—å', '‚ùì Help'], async ctx => {
  console.log('CASE: –ü–æ–º–æ—â—å')
  ctx.session.mode = ModeEnum.Help
  await ctx.scene.enter('helpScene')
})

composer.hears([levels[100].title_ru, levels[100].title_en], async ctx => {
  console.log('CASE: –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å')
  ctx.session.mode = ModeEnum.TopUpBalance
  ctx.session.subscription = SubscriptionType.STARS
  await ctx.scene.enter('paymentScene')
})

composer.hears([levels[101].title_ru, levels[101].title_en], async ctx => {
  console.log('CASE: –ë–∞–ª–∞–Ω—Å')
  ctx.session.mode = ModeEnum.Balance
  await ctx.scene.enter('balanceScene')
})

composer.hears([levels[102].title_ru, levels[102].title_en], async ctx => {
  console.log('CASE: –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞')
  ctx.session.mode = ModeEnum.Invite
  await ctx.scene.enter('inviteScene')
})

composer.hears(['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'üè† Main menu'], async ctx => {
  console.log('CASE: –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
  ctx.session.mode = ModeEnum.MainMenu
  await ctx.scene.enter('ModeEnum.SubscriptionScene')
})

composer.hears(
  ['üé• –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤–æ–µ –≤–∏–¥–µ–æ?', 'üé• Generate new video?'],
  async ctx => {
    console.log('CASE: –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤–æ–µ –≤–∏–¥–µ–æ')
    const mode = ctx.session.mode
    console.log('mode', mode)
    if (mode === ModeEnum.TextToVideo) {
      await ctx.scene.enter('textToVideoWizard')
    } else if (mode === ModeEnum.ImageToVideo) {
      await ctx.scene.enter('imageToVideoWizard')
    } else {
      await ctx.reply(
        isRussian(ctx)
          ? '–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤–æ–µ –≤–∏–¥–µ–æ –≤ —ç—Ç–æ–º —Ä–µ–∂–∏–º–µ'
          : 'You cannot generate a new video in this mode'
      )
    }
  }
)

composer.hears(['1Ô∏è‚É£', '2Ô∏è‚É£', '3Ô∏è‚É£', '4Ô∏è‚É£'], async ctx => {
  const text = ctx.message.text
  console.log(`CASE: –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ ${text}`)
  const isRu = isRussian(ctx)
  const prompt = ctx.session.prompt
  const userId = ctx.from.id
  const numImages = parseInt(text[0])
  console.log('ctx.session.mode', ctx.session.mode)
  const generate = async (num: number) => {
    if (ctx.session.mode === ModeEnum.NeuroPhoto) {
      await generateNeuroImage(
        prompt,
        ctx.session.userModel.model_url,
        num,
        userId.toString(),
        ctx,
        ctx.botInfo?.username
      )
    } else {
      await generateTextToImage(
        prompt,
        ctx.session.selectedModel || '',
        num,
        userId.toString(),
        isRu,
        ctx,
        ctx.botInfo?.username
      )
    }
  }

  if (numImages >= 1 && numImages <= 4) {
    await generate(numImages)
  } else {
    await ctx.reply('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–Ω–æ–ø–∫–∞')
  }
})

composer.hears(['‚¨ÜÔ∏è –£–ª—É—á—à–∏—Ç—å –ø—Ä–æ–º–ø—Ç', '‚¨ÜÔ∏è Improve prompt'], async ctx => {
  console.log('CASE: –£–ª—É—á—à–∏—Ç—å –ø—Ä–æ–º–ø—Ç')

  await ctx.scene.enter('improvePromptWizard')
})

composer.hears(['üìê –ò–∑–º–µ–Ω–∏—Ç—å —Ä–∞–∑–º–µ—Ä', 'üìê Change size'], async ctx => {
  console.log('CASE: –ò–∑–º–µ–Ω–∏—Ç—å —Ä–∞–∑–º–µ—Ä')

  await ctx.scene.enter('sizeWizard')
})

composer.hears(
  [
    '21:9',
    '16:9',
    '3:2',
    '4:3',
    '5:4',
    '1:1',
    '4:5',
    '3:4',
    '2:3',
    '9:16',
    '9:21',
  ],
  async ctx => {
    console.log('CASE: –ò–∑–º–µ–Ω–∏—Ç—å —Ä–∞–∑–º–µ—Ä')
    const size = ctx.message.text
    await handleSizeSelection(ctx, size)
  }
)

composer.hears(/^(–û—Ç–º–µ–Ω–∞|–æ—Ç–º–µ–Ω–∞|Cancel|cancel)$/i, async ctx => {
  console.log('CASE: –û—Ç–º–µ–Ω–∞')
  const isRu = isRussian(ctx)
  const telegram_id = ctx.from?.id?.toString() || ''
  const { count, level, subscriptionType } = await getReferalsCountAndUserData(
    telegram_id
  )

  await mainMenu({
    isRu,
    inviteCount: count,
    subscription: subscriptionType,
    ctx,
    level,
  })
  return ctx.scene.leave()
})

composer.hears(['–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–µ', 'Help for the command'], async ctx => {
  console.log('CASE: –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–µ')
  await ctx.scene.enter('helpScene')
})

export const setupHearsHandlers = (bot: Telegraf<MyContext>) => {
  logger.info('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ hears...')

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
  bot.hears(
    [levels[104].title_ru, levels[104].title_en],
    async (ctx: MyContext) => {
      logger.debug(`–ü–æ–ª—É—á–µ–Ω hears –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –æ—Ç ${ctx.from?.id}`)
      ctx.session.mode = ModeEnum.MainMenu
      await ctx.scene.enter(ModeEnum.SubscriptionScene)
    }
  )

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è "ü§ñ –¶–∏—Ñ—Ä–æ–≤–æ–µ —Ç–µ–ª–æ"
  bot.hears(
    [levels[1].title_ru, levels[1].title_en],
    async (ctx: MyContext) => {
      logger.debug(`–ü–æ–ª—É—á–µ–Ω hears –¥–ª—è –¶–∏—Ñ—Ä–æ–≤–æ–µ —Ç–µ–ª–æ –æ—Ç ${ctx.from?.id}`)
      ctx.session.mode = ModeEnum.DigitalAvatarBody
      await ctx.scene.enter('digitalAvatarBodyWizard')
    }
  )

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è "üì∏ –ù–µ–π—Ä–æ—Ñ–æ—Ç–æ"
  bot.hears(
    [levels[2].title_ru, levels[2].title_en],
    async (ctx: MyContext) => {
      logger.debug(`–ü–æ–ª—É—á–µ–Ω hears –¥–ª—è –ù–µ–π—Ä–æ—Ñ–æ—Ç–æ –æ—Ç ${ctx.from?.id}`)
      ctx.session.mode = ModeEnum.NeuroPhotoV2
      await ctx.scene.enter('neuroPhotoWizardV2')
    }
  )

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è "ü§ñ –¶–∏—Ñ—Ä–æ–≤–æ–µ —Ç–µ–ª–æ 2" (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)
  bot.hears(['ü§ñ –¶–∏—Ñ—Ä–æ–≤–æ–µ —Ç–µ–ª–æ 2'], async (ctx: MyContext) => {
    logger.debug(`–ü–æ–ª—É—á–µ–Ω hears –¥–ª—è –¶–∏—Ñ—Ä–æ–≤–æ–µ —Ç–µ–ª–æ 2 –æ—Ç ${ctx.from?.id}`)
    ctx.session.mode = ModeEnum.DigitalAvatarBody
    await ctx.scene.enter('digitalAvatarBodyWizard')
  })

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è "üì∏ –ù–µ–π—Ä–æ—Ñ–æ—Ç–æ 2" (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)
  bot.hears(['üì∏ –ù–µ–π—Ä–æ—Ñ–æ—Ç–æ 2'], async (ctx: MyContext) => {
    logger.debug(`–ü–æ–ª—É—á–µ–Ω hears –¥–ª—è –ù–µ–π—Ä–æ—Ñ–æ—Ç–æ 2 –æ—Ç ${ctx.from?.id}`)
    ctx.session.mode = ModeEnum.NeuroPhoto
    await ctx.scene.enter('neuroPhotoWizard')
  })

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è "üîç –ü—Ä–æ–º–ø—Ç –∏–∑ —Ñ–æ—Ç–æ"
  bot.hears(
    [levels[3].title_ru, levels[3].title_en],
    async (ctx: MyContext) => {
      logger.debug(`–ü–æ–ª—É—á–µ–Ω hears –¥–ª—è –ü—Ä–æ–º–ø—Ç –∏–∑ —Ñ–æ—Ç–æ –æ—Ç ${ctx.from?.id}`)
      ctx.session.mode = ModeEnum.ImageToPrompt
      await ctx.scene.enter('imageToPromptWizard')
    }
  )

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è "üß† –ú–æ–∑–≥ –∞–≤–∞—Ç–∞—Ä–∞"
  bot.hears(
    [levels[4].title_ru, levels[4].title_en],
    async (ctx: MyContext) => {
      logger.debug(`–ü–æ–ª—É—á–µ–Ω hears –¥–ª—è –ú–æ–∑–≥ –∞–≤–∞—Ç–∞—Ä–∞ –æ—Ç ${ctx.from?.id}`)
      ctx.session.mode = ModeEnum.Avatar
      await ctx.scene.enter('avatarWizard')
    }
  )

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è "üí≠ –ß–∞—Ç —Å –∞–≤–∞—Ç–∞—Ä–æ–º"
  bot.hears(
    [levels[5].title_ru, levels[5].title_en],
    async (ctx: MyContext) => {
      logger.debug(`–ü–æ–ª—É—á–µ–Ω hears –¥–ª—è –ß–∞—Ç —Å –∞–≤–∞—Ç–∞—Ä–æ–º –æ—Ç ${ctx.from?.id}`)
      ctx.session.mode = ModeEnum.ChatWithAvatar
      await ctx.scene.enter('chatWithAvatarWizard')
    }
  )

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è "ü§ñ –í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏ –ò–ò"
  bot.hears(
    [levels[6].title_ru, levels[6].title_en],
    async (ctx: MyContext) => {
      logger.debug(`–ü–æ–ª—É—á–µ–Ω hears –¥–ª—è –í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏ –ò–ò –æ—Ç ${ctx.from?.id}`)
      ctx.session.mode = ModeEnum.SelectModel
      await ctx.scene.enter('selectModelWizard')
    }
  )

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è "üé§ –ì–æ–ª–æ—Å –∞–≤–∞—Ç–∞—Ä–∞"
  bot.hears(
    [levels[7].title_ru, levels[7].title_en],
    async (ctx: MyContext) => {
      logger.debug(`–ü–æ–ª—É—á–µ–Ω hears –¥–ª—è –ì–æ–ª–æ—Å –∞–≤–∞—Ç–∞—Ä–∞ –æ—Ç ${ctx.from?.id}`)
      ctx.session.mode = ModeEnum.Voice
      await ctx.scene.enter('voiceAvatarWizard')
    }
  )

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è "üéôÔ∏è –¢–µ–∫—Å—Ç –≤ –≥–æ–ª–æ—Å"
  bot.hears(
    [levels[8].title_ru, levels[8].title_en],
    async (ctx: MyContext) => {
      logger.debug(`–ü–æ–ª—É—á–µ–Ω hears –¥–ª—è –¢–µ–∫—Å—Ç –≤ –≥–æ–ª–æ—Å –æ—Ç ${ctx.from?.id}`)
      ctx.session.mode = ModeEnum.TextToSpeech
      await ctx.scene.enter('textToSpeechWizard')
    }
  )

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è "üé• –§–æ—Ç–æ –≤ –≤–∏–¥–µ–æ"
  bot.hears(
    [levels[9].title_ru, levels[9].title_en],
    async (ctx: MyContext) => {
      logger.debug(`–ü–æ–ª—É—á–µ–Ω hears –¥–ª—è –§–æ—Ç–æ –≤ –≤–∏–¥–µ–æ –æ—Ç ${ctx.from?.id}`)
      ctx.session.mode = ModeEnum.ImageToVideo
      await ctx.scene.enter('imageToVideoWizard')
    }
  )

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è "üé• –í–∏–¥–µ–æ –∏–∑ —Ç–µ–∫—Å—Ç–∞"
  bot.hears(
    [levels[10].title_ru, levels[10].title_en],
    async (ctx: MyContext) => {
      logger.debug(`–ü–æ–ª—É—á–µ–Ω hears –¥–ª—è –í–∏–¥–µ–æ –∏–∑ —Ç–µ–∫—Å—Ç–∞ –æ—Ç ${ctx.from?.id}`)
      ctx.session.mode = ModeEnum.TextToVideo
      await ctx.scene.enter('textToVideoWizard')
    }
  )

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è "üñºÔ∏è –¢–µ–∫—Å—Ç –≤ —Ñ–æ—Ç–æ"
  bot.hears(
    [levels[11].title_ru, levels[11].title_en],
    async (ctx: MyContext) => {
      logger.debug(`–ü–æ–ª—É—á–µ–Ω hears –¥–ª—è –¢–µ–∫—Å—Ç –≤ —Ñ–æ—Ç–æ –æ—Ç ${ctx.from?.id}`)
      ctx.session.mode = ModeEnum.TextToImage
      await ctx.scene.enter('textToImageWizard')
    }
  )

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è "üí´ –û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É"
  bot.hears(
    [levels[0].title_ru, levels[0].title_en],
    async (ctx: MyContext) => {
      logger.debug(`–ü–æ–ª—É—á–µ–Ω hears –¥–ª—è –û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –æ—Ç ${ctx.from?.id}`)
      await ctx.scene.enter('subscriptionScene')
    }
  )

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è "‚ùì –ü–æ–º–æ—â—å"
  bot.hears(
    [levels[103].title_ru, levels[103].title_en],
    async (ctx: MyContext) => {
      logger.debug(`–ü–æ–ª—É—á–µ–Ω hears –¥–ª—è –ü–æ–º–æ—â—å –æ—Ç ${ctx.from?.id}`)
      ctx.session.mode = ModeEnum.Help
      await ctx.scene.enter('helpScene')
    }
  )

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è "üíé –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å"
  bot.hears(
    [levels[100].title_ru, levels[100].title_en],
    async (ctx: MyContext) => {
      logger.debug(`–ü–æ–ª—É—á–µ–Ω hears –¥–ª—è –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –æ—Ç ${ctx.from?.id}`)
      ctx.session.mode = ModeEnum.TopUpBalance
      ctx.session.subscription = SubscriptionType.STARS
      await ctx.scene.enter('paymentScene')
    }
  )

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è "ü§ë –ë–∞–ª–∞–Ω—Å"
  bot.hears(
    [levels[101].title_ru, levels[101].title_en],
    async (ctx: MyContext) => {
      logger.debug(`–ü–æ–ª—É—á–µ–Ω hears –¥–ª—è –ë–∞–ª–∞–Ω—Å –æ—Ç ${ctx.from?.id}`)
      ctx.session.mode = ModeEnum.Balance
      await ctx.scene.enter('balanceScene')
    }
  )

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è "üë• –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞"
  bot.hears(
    [levels[102].title_ru, levels[102].title_en],
    async (ctx: MyContext) => {
      logger.debug(`–ü–æ–ª—É—á–µ–Ω hears –¥–ª—è –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞ –æ—Ç ${ctx.from?.id}`)
      ctx.session.mode = ModeEnum.Invite
      await ctx.scene.enter('inviteScene')
    }
  )

  logger.info('–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ hears –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã.')
}
