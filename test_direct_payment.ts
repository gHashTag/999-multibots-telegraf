import { directPaymentProcessor } from './src/core/supabase/directPayment'
import { PaymentType } from './src/interfaces/payments.interface'
import { ModeEnum } from './src/interfaces/modes'
import { supabase } from './src/core/supabase/client'

async function testDirectPayment() {
  console.log('üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï directPaymentProcessor –° 7.5‚≠ê')

  const testParams = {
    telegram_id: '144022504',
    amount: 7.5,
    type: PaymentType.MONEY_OUTCOME,
    description: 'Test payment for 7.5 stars',
    bot_name: 'test_bot',
    service_type: ModeEnum.NeuroPhoto,
    inv_id: 'test-direct-payment-' + Date.now(),
    bypass_payment_check: true,
    metadata: {
      prompt: 'test prompt',
      num_images: 1,
      model_url: 'test_model',
    },
  }

  console.log('üìù –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–ª–∞—Ç–µ–∂–∞:', testParams)

  try {
    const result = await directPaymentProcessor(testParams)
    console.log('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç directPaymentProcessor:', result)

    if (result.success && result.payment_id) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∑–∞–ø–∏—Å–∞–ª–æ—Å—å –≤ –ë–î
      const { data: paymentData } = await supabase
        .from('payments_v2')
        .select('id, stars, amount')
        .eq('id', result.payment_id)
        .single()

      console.log('üîç –î–∞–Ω–Ω—ã–µ –≤ –ë–î:', paymentData)

      // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å
      await supabase.from('payments_v2').delete().eq('id', result.payment_id)
      console.log('üóëÔ∏è –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞')
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error)
  }
}

testDirectPayment().catch(console.error)
