const { Inngest } = require('inngest')
require('dotenv').config()

// –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –∫–ª—é—á –¥–ª—è dev-—Å–µ—Ä–≤–µ—Ä–∞
const INNGEST_DEV_KEY = 'dev'
const INNGEST_URL = 'https://api.inngest.com'

console.log('üåê INNGEST_URL:', INNGEST_URL)

// –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç —Å dev –∫–ª—é—á–æ–º
const inngest = new Inngest({
  id: 'test-client-dev',
  eventKey: INNGEST_DEV_KEY,
})

async function testInngest() {
  try {
    console.log('üöÄ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è...')

    const result = await inngest.send({
      name: 'test/hello.world',
      data: {
        message: '–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ!',
        timestamp: new Date().toISOString(),
      },
    })

    console.log(
      '‚úÖ –°–æ–±—ã—Ç–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:',
      JSON.stringify(result, null, 2)
    )
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–±—ã—Ç–∏—è:', error.message)

    if (error.stack) {
      console.error('–°—Ç–µ–∫ –æ—à–∏–±–∫–∏:', error.stack)
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testInngest()
