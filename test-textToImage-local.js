const { Inngest } = require('inngest')
require('dotenv').config()

// –ü–æ–ª—É—á–∞–µ–º –∫–ª—é—á–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const INNGEST_EVENT_KEY = process.env.INNGEST_EVENT_KEY
const INNGEST_URL = process.env.INNGEST_URL || 'https://api.inngest.com'
const INNGEST_BASE_URL =
  process.env.INNGEST_BASE_URL || 'http://localhost:2999/api/inngest'

console.log('üîë INNGEST_EVENT_KEY –¥–æ—Å—Ç—É–ø–µ–Ω:', !!INNGEST_EVENT_KEY)
console.log('üåê INNGEST_URL:', INNGEST_URL)
console.log('üåê INNGEST_BASE_URL:', INNGEST_BASE_URL)
console.log('üîê INNGEST_DEV —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:', process.env.INNGEST_DEV === '1')

// –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç —Å URL –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –≤ —Ä–µ–∂–∏–º–µ DEV
const inngestConfig = {
  id: 'test-text-to-image',
  eventKey: INNGEST_EVENT_KEY || 'development-key',
}

// –ï—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω —Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
if (process.env.INNGEST_DEV === '1') {
  console.log('‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏')

  // –î–æ–±–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤—ã–π URL –¥–ª—è —Ä–µ–∂–∏–º–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
  inngestConfig.baseUrl = INNGEST_BASE_URL

  // –ö–∞—Å—Ç–æ–º–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è fetch –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
  inngestConfig.fetch = async (url, init) => {
    console.log('üîÑ –ó–∞–ø—Ä–æ—Å –∫ URL:', url)

    try {
      // –î–ª—è —Å–æ–±—ã—Ç–∏–π Inngest
      if (url.includes('/e/')) {
        // –§–æ—Ä–º–∏—Ä—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π URL –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–±—ã—Ç–∏–π
        const localUrl = `${INNGEST_BASE_URL}/e`
        console.log(`üîÄ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞: ${localUrl}`)

        // –¢—Ä–µ–±—É–µ—Ç—Å—è node-fetch
        const fetch = require('node-fetch')

        // –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
        const response = await fetch(localUrl, init)
        console.log(`üîÑ –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: ${response.status}`)

        return response
      }

      // –î–ª—è –¥—Ä—É–≥–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
      const fetch = require('node-fetch')
      return await fetch(url, init)
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ fetch:', error.message)
      throw error
    }
  }
}

// –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
const inngest = new Inngest(inngestConfig)

async function sendTextToImageEvent() {
  try {
    console.log('üöÄ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–±—ã—Ç–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...')

    const result = await inngest.send({
      name: 'text-to-image.requested',
      data: {
        prompt: '–ö—Ä–∞—Å–∏–≤—ã–π –∑–∞–∫–∞—Ç –Ω–∞–¥ –≥–æ—Ä–∞–º–∏ –≤ —Å—Ç–∏–ª–µ –∞–∫–≤–∞—Ä–µ–ª–∏',
        model: 'recraft v3',
        num_images: 1,
        telegram_id: '123456789',
        is_ru: true,
        bot_name: 'test_bot',
      },
    })

    console.log(
      '‚úÖ –°–æ–±—ã—Ç–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:',
      JSON.stringify(result, null, 2)
    )
    console.log('‚úÖ –û–∂–∏–¥–∞–π—Ç–µ –æ–±—Ä–∞–±–æ—Ç–∫—É –∑–∞–ø—Ä–æ—Å–∞ Inngest')

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å API —Å–µ—Ä–≤–µ—Ä–∞
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ API —Å–µ—Ä–≤–µ—Ä–∞')
    const fetch = require('node-fetch')
    try {
      const response = await fetch('http://localhost:2999/api/status')
      const data = await response.json()
      console.log('‚ÑπÔ∏è –°—Ç–∞—Ç—É—Å API —Å–µ—Ä–≤–µ—Ä–∞:', data)
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ API:', error.message)
    }

    // –û–∂–∏–¥–∞–Ω–∏–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏—è
    console.log('‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ 5 —Å–µ–∫—É–Ω–¥...')
    await new Promise(resolve => setTimeout(resolve, 5000))
    console.log('‚úÖ –ì–æ—Ç–æ–≤–æ!')
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–±—ã—Ç–∏—è:', error.message)

    if (error.stack) {
      console.error('–°—Ç–µ–∫ –æ—à–∏–±–∫–∏:', error.stack)
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
sendTextToImageEvent()
