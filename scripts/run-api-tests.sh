#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤ API

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–æ–≤
export NODE_ENV=test
echo "üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ API"

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤, –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç
mkdir -p logs

# –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –¥–ª—è –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ –ª–æ–≥–æ–≤
TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
LOG_FILE="logs/api-tests-${TIMESTAMP}.log"

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ–ª–∞–≥–∏ –¥–ª—è –∑–∞–ø—É—Å–∫–∞
DETAILED_FLAG=""
REPORT_FLAG=""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
for arg in "$@"
do
  case $arg in
    --detailed)
      DETAILED_FLAG="--detailed"
      ;;
    --report)
      REPORT_FLAG="--report"
      ;;
    *)
      # –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç
      ;;
  esac
done

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã –∏ –ª–æ–≥–∏—Ä—É–µ–º –≤—ã–≤–æ–¥
npx tsx src/test-utils/scripts/test-api.ts $DETAILED_FLAG $REPORT_FLAG | tee "$LOG_FILE"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤
TEST_RESULT=${PIPESTATUS[0]}

if [ $TEST_RESULT -eq 0 ]; then
  echo "‚úÖ –¢–µ—Å—Ç—ã API —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã"
  exit 0
else
  echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤ API (–∫–æ–¥: $TEST_RESULT)"
  echo "üìù –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –ª–æ–≥–∏ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π: $LOG_FILE"
  exit $TEST_RESULT
fi 