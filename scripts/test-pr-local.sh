#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è PR
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/test-pr-local.sh [PR_NUMBER]

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m'

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞
log() {
  local type=$1
  local message=$2
  
  case $type in
    "info")
      echo -e "${BLUE}[INFO]${NC} $message"
      ;;
    "success")
      echo -e "${GREEN}[SUCCESS]${NC} $message"
      ;;
    "error")
      echo -e "${RED}[ERROR]${NC} $message"
      ;;
    "warning")
      echo -e "${YELLOW}[WARNING]${NC} $message"
      ;;
  esac
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
if [ $# -eq 0 ]; then
    log "error" "–£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä PR"
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [PR_NUMBER]"
    exit 1
fi

PR_NUMBER=$1
PR_PORT_BASE="4${PR_NUMBER}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ PR_NUMBER - —ç—Ç–æ —á–∏—Å–ª–æ
if ! [[ "$PR_NUMBER" =~ ^[0-9]+$ ]]; then
    log "error" "PR_NUMBER –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º"
    exit 1
fi

log "info" "–ó–∞–ø—É—Å–∫ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è PR #${PR_NUMBER}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è .env —Ñ–∞–π–ª–∞
if [ ! -f ".env" ]; then
    log "error" "–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ –∏–∑ example.env –∏–ª–∏ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å —Å–µ—Ä–≤–µ—Ä–∞"
    exit 1
fi

# –°–æ–∑–¥–∞–µ–º .env.pr –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if [ ! -f ".env.pr" ]; then
    log "info" "–°–æ–∑–¥–∞—é .env.pr –∏–∑ .env"
    cp .env .env.pr
    
    # –î–æ–±–∞–≤–ª—è–µ–º PR-—Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    echo "" >> .env.pr
    echo "# PR Test Environment" >> .env.pr
    echo "PR_NUMBER=${PR_NUMBER}" >> .env.pr
    echo "PR_PORT_BASE=${PR_PORT_BASE}" >> .env.pr
    echo "DOMAIN=localhost" >> .env.pr
    echo "WEBHOOK_BASE_URL=http://localhost:${PR_PORT_BASE}00" >> .env.pr
    echo "" >> .env.pr
    echo "# –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è" >> .env.pr
    echo "PR_BOT_TOKEN_1=\${BOT_TOKEN_1}" >> .env.pr
    echo "PR_BOT_TOKEN_2=\${BOT_TOKEN_2}" >> .env.pr
    echo "PR_BOT_TOKEN_3=\${BOT_TOKEN_3}" >> .env.pr
    echo "PR_BOT_TOKEN_4=\${BOT_TOKEN_4}" >> .env.pr
    echo "PR_BOT_TOKEN_5=\${BOT_TOKEN_5}" >> .env.pr
    echo "PR_BOT_TOKEN_6=\${BOT_TOKEN_6}" >> .env.pr
    echo "PR_BOT_TOKEN_7=\${BOT_TOKEN_7}" >> .env.pr
    echo "PR_BOT_TOKEN_8=\${BOT_TOKEN_8}" >> .env.pr
    
    log "warning" "–î–ª—è production –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ —Ç–æ–∫–µ–Ω—ã!"
fi

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
log "info" "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã PR #${PR_NUMBER}..."
docker-compose -f docker-compose.pr.yml -p pr-${PR_NUMBER} down

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Docker
if ! command -v docker &> /dev/null; then
    log "error" "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ docker-compose
if ! command -v docker-compose &> /dev/null && ! docker compose version &> /dev/null; then
    log "error" "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi

# –°–æ–±–∏—Ä–∞–µ–º –ø—Ä–æ–µ–∫—Ç
log "info" "–°–æ–±–∏—Ä–∞—é –ø—Ä–æ–µ–∫—Ç..."
if command -v npm &> /dev/null; then
    npm run build || {
        log "error" "–û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ —á–µ—Ä–µ–∑ npm"
        exit 1
    }
elif command -v pnpm &> /dev/null; then
    pnpm build || {
        log "error" "–û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ —á–µ—Ä–µ–∑ pnpm"
        exit 1
    }
else
    log "warning" "npm/pnpm –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –ø—Ä–æ–ø—É—Å–∫–∞—é —Å–±–æ—Ä–∫—É"
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
log "info" "–ó–∞–ø—É—Å–∫–∞—é –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –¥–ª—è PR #${PR_NUMBER}..."
export PR_NUMBER=${PR_NUMBER}
export PR_PORT_BASE=${PR_PORT_BASE}

if command -v docker-compose &> /dev/null; then
    docker-compose -f docker-compose.pr.yml -p pr-${PR_NUMBER} up -d --build
else
    docker compose -f docker-compose.pr.yml -p pr-${PR_NUMBER} up -d --build
fi

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
log "info" "–ñ–¥—É –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 10

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
log "info" "–ü—Ä–æ–≤–µ—Ä—è—é —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
if command -v docker-compose &> /dev/null; then
    docker-compose -f docker-compose.pr.yml -p pr-${PR_NUMBER} ps
else
    docker compose -f docker-compose.pr.yml -p pr-${PR_NUMBER} ps
fi

# –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—Å—Ç—É–ø–µ
log "success" "PR #${PR_NUMBER} –∑–∞–ø—É—â–µ–Ω –ª–æ–∫–∞–ª—å–Ω–æ!"
echo ""
echo "üöÄ –î–æ—Å—Ç—É–ø –∫ —Å–µ—Ä–≤–∏—Å–∞–º:"
echo "   - API: http://localhost:${PR_PORT_BASE}99"
echo "   - Bot 1 webhook: http://localhost:${PR_PORT_BASE}00"
echo "   - Bot 2 webhook: http://localhost:${PR_PORT_BASE}01"
echo "   - –ò —Ç–∞–∫ –¥–∞–ª–µ–µ..."
echo ""
echo "üìù –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "   - –õ–æ–≥–∏: docker-compose -f docker-compose.pr.yml -p pr-${PR_NUMBER} logs -f"
echo "   - –°—Ç–æ–ø: docker-compose -f docker-compose.pr.yml -p pr-${PR_NUMBER} down"
echo "   - –†–µ—Å—Ç–∞—Ä—Ç: docker-compose -f docker-compose.pr.yml -p pr-${PR_NUMBER} restart"
echo ""
echo "üîó –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤–µ–±—Ö—É–∫–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ ngrok:"
echo "   ngrok http ${PR_PORT_BASE}00"
echo "   –ó–∞—Ç–µ–º —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ webhook URL –≤ Telegram –¥–ª—è –≤–∞—à–∏—Ö –±–æ—Ç–æ–≤"
echo ""