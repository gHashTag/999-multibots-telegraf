#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m'

# –§—É–Ω–∫—Ü–∏—è —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
emotional_echo() {
    local emotion=$1
    local message=$2
    local color

    case $emotion in
        "happy") color=$GREEN; message="üòä $message";;
        "sad") color=$RED; message="üò¢ $message";;
        "excited") color=$YELLOW; message="üéâ $message";;
        "calm") color=$BLUE; message="üòå $message";;
        "love") color=$PURPLE; message="üíú $message";;
        "tech") color=$CYAN; message="ü§ñ $message";;
        *) color=$NC;;
    esac

    echo -e "${color}${message}${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
check_system_resources() {
    emotional_echo "tech" "–ü—Ä–æ–≤–µ—Ä—è—é —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ CPU
    local cpu_usage=$(top -l 1 | grep "CPU usage" | awk '{print $3}' | cut -d'%' -f1)
    if (( $(echo "$cpu_usage < 80" | bc -l) )); then
        emotional_echo "happy" "CPU –≤ –Ω–æ—Ä–º–µ (${cpu_usage}%)"
    else
        emotional_echo "sad" "–í—ã—Å–æ–∫–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ CPU (${cpu_usage}%)"
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–º—è—Ç–∏
    local memory_free=$(vm_stat | grep "Pages free" | awk '{print $3}' | tr -d '.')
    local memory_total=$(sysctl hw.memsize | awk '{print $2}')
    local memory_free_gb=$(echo "scale=2; $memory_free * 4096 / 1024 / 1024 / 1024" | bc)
    
    if (( $(echo "$memory_free_gb > 2" | bc -l) )); then
        emotional_echo "happy" "–î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–≤–æ–±–æ–¥–Ω–æ–π –ø–∞–º—è—Ç–∏ (${memory_free_gb}GB)"
    else
        emotional_echo "sad" "–ú–∞–ª–æ —Å–≤–æ–±–æ–¥–Ω–æ–π –ø–∞–º—è—Ç–∏ (${memory_free_gb}GB)"
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Å–∫–∞
    local disk_usage=$(df -h / | tail -1 | awk '{print $5}' | tr -d '%')
    if (( disk_usage < 80 )); then
        emotional_echo "happy" "–î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ (${disk_usage}%)"
    else
        emotional_echo "sad" "–ú–∞–ª–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ (${disk_usage}%)"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–µ–≤–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
check_network() {
    emotional_echo "tech" "–ü—Ä–æ–≤–µ—Ä—è—é —Å–µ—Ç–µ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ..."
    
    if ping -c 1 google.com &> /dev/null; then
        emotional_echo "happy" "–°–µ—Ç–µ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        emotional_echo "sad" "–ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç–µ–≤—ã–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
check_services() {
    emotional_echo "tech" "–ü—Ä–æ–≤–µ—Ä—è—é —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
    if command -v docker &> /dev/null; then
        if docker info &> /dev/null; then
            emotional_echo "happy" "Docker —Ä–∞–±–æ—Ç–∞–µ—Ç"
        else
            emotional_echo "sad" "Docker –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        fi
    else
        emotional_echo "sad" "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js
    if command -v node &> /dev/null; then
        local node_version=$(node --version)
        emotional_echo "happy" "Node.js —Ä–∞–±–æ—Ç–∞–µ—Ç (–≤–µ—Ä—Å–∏—è: ${node_version})"
    else
        emotional_echo "sad" "Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    emotional_echo "excited" "üöÄ –ù–∞—á–∏–Ω–∞—é –ø—Ä–æ–≤–µ—Ä–∫—É —Å–∏—Å—Ç–µ–º—ã..."
    
    check_system_resources
    check_network
    check_services
    
    emotional_echo "love" "üíú –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
}

# –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
main 