#!/usr/bin/env node

const { execSync } = require('child_process');

const ports = process.argv.slice(2); // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Ä—Ç—ã –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏

if (ports.length === 0) {
  console.log('Usage: node scripts/kill-port.cjs <port1> [port2] ...');
  process.exit(1);
}

ports.forEach(port => {
  const portNumber = parseInt(port, 10);
  if (isNaN(portNumber)) {
    console.warn(`‚ö†Ô∏è Invalid port specified: ${port}. Skipping.`);
    return;
  }

  console.log(`üîç Checking port ${portNumber}...`);
  try {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º lsof –¥–ª—è –ø–æ–∏—Å–∫–∞ PID –ø—Ä–æ—Ü–µ—Å—Å–∞, —Å–ª—É—à–∞—é—â–µ–≥–æ –ø–æ—Ä—Ç
    // -i tcp:${portNumber} : –ò—Å–∫–∞—Ç—å TCP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –Ω–∞ —ç—Ç–æ–º –ø–æ—Ä—Ç—É
    // -t                 : –í—ã–≤–µ—Å—Ç–∏ —Ç–æ–ª—å–∫–æ PID
    // || true            : –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—à–∏–±–∫—É, –µ—Å–ª–∏ lsof –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–µ–ª (–∫–æ–¥ –≤—ã—Ö–æ–¥–∞ 1)
    const pid = execSync(`lsof -ti tcp:${portNumber} || true`, { encoding: 'utf8' }).trim();

    if (pid) {
      console.log(`‚õî Port ${portNumber} is in use by PID ${pid}. Attempting to kill...`);
      try {
        // –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å
        execSync(`kill -9 ${pid}`);
        console.log(`‚úÖ Successfully killed process ${pid} on port ${portNumber}.`);
      } catch (killError) {
        console.error(`‚ùå Failed to kill process ${pid} on port ${portNumber}:`, killError.message);
      }
    } else {
      console.log(`üü¢ Port ${portNumber} is free.`);
    }
  } catch (lsofError) {
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥—Ä—É–≥–∏–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –æ—à–∏–±–∫–∏ lsof, —Ö–æ—Ç—è `|| true` –¥–æ–ª–∂–µ–Ω –±—ã–ª –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ
     if (!lsofError.message.includes('exit code 1')) { // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ–∂–∏–¥–∞–µ–º—ã–π –∫–æ–¥ –≤—ã—Ö–æ–¥–∞ 1, –µ—Å–ª–∏ –ø–æ—Ä—Ç —Å–≤–æ–±–æ–¥–µ–Ω
       console.error(`‚ùå Error checking port ${portNumber}:`, lsofError.message);
    } else {
         console.log(`üü¢ Port ${portNumber} is free (lsof check confirms).`);
     }
  }
});

console.log('üèÅ Port check finished.');
