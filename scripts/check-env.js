#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
 */

const fs = require('fs')
const path = require('path')
const dotenv = require('dotenv')

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if (fs.existsSync(path.resolve(process.cwd(), '.env'))) {
  console.log('üîç –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞...')
  dotenv.config()
}

// –°–ø–∏—Å–æ–∫ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const requiredVars = [
  'BOT_TOKEN_1',
  'BOT_TOKEN_2',
  'BOT_TOKEN_3',
  'BOT_TOKEN_4',
  'BOT_TOKEN_5',
  'BOT_TOKEN_6',
  'BOT_TOKEN_7',
  'SUPABASE_URL',
  'SUPABASE_SERVICE_KEY',
  'SUPABASE_SERVICE_ROLE_KEY',
  'SUPABASE_SERVICE_KEY',
  'INNGEST_EVENT_KEY',
  'INNGEST_SIGNING_KEY',
]

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—Å–µ –ª–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã
const missingVars = requiredVars.filter(varName => !process.env[varName])

if (missingVars.length > 0) {
  console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Å–ª–µ–¥—É—é—â–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:')
  missingVars.forEach(varName => {
    console.error(`  - ${varName}`)
  })
  console.error(
    '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —ç—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª–µ .env –∏–ª–∏ —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è.'
  )
  process.exit(1)
} else {
  console.log('‚úÖ –í—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.')
  console.log(
    'üîë BOT_TOKEN_1:',
    `${process.env.BOT_TOKEN_1.substring(0, 10)}...`
  )
  console.log(
    'üîå SUPABASE_URL:',
    `${process.env.SUPABASE_URL.substring(0, 10)}...`
  )
  console.log(
    'üéØ INNGEST_EVENT_KEY:',
    `${process.env.INNGEST_EVENT_KEY.substring(0, 10)}...`
  )
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É —Ç–æ–∫–µ–Ω–æ–≤ –±–æ—Ç–æ–≤
for (let i = 1; i <= 7; i++) {
  const tokenVar = `BOT_TOKEN_${i}`
  const token = process.env[tokenVar]

  if (token && token.length < 30) {
    console.warn(
      `‚ö†Ô∏è ${tokenVar} –∏–º–µ–µ—Ç –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ –∫–æ—Ä–æ—Ç–∫—É—é –¥–ª–∏–Ω—É: ${token.length} —Å–∏–º–≤–æ–ª–æ–≤.`
    )
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ä–µ–¥—ã
if (process.env.NODE_ENV === 'test') {
  const testRequiredVars = ['BOT_TOKEN_TEST_1', 'BOT_TOKEN_TEST_2']

  const missingTestVars = testRequiredVars.filter(
    varName => !process.env[varName]
  )

  if (missingTestVars.length > 0) {
    console.warn('‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ä–µ–¥—ã:')
    missingTestVars.forEach(varName => {
      console.warn(`  - ${varName}`)
    })
  } else {
    console.log('‚úÖ –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ä–µ–¥—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.')
  }
}

// –£—Å–ø–µ—à–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
console.log('üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ.')
process.exit(0)
