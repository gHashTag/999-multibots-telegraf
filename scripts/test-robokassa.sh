#!/bin/bash

# –≠–º–æ–¥–∑–∏ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
INFO="‚ÑπÔ∏è"
SUCCESS="‚úÖ"
ERROR="‚ùå"
START="üöÄ"
END="üèÅ"
CLEAN="üßπ"
BUILD="üî®"
TEST="üß™"
LOG="üìã"
PAYMENT="üí∞"

echo "${START} –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –†–æ–±–æ–∫–∞—Å—Å–∞..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
./scripts/check-docker.sh
if [ $? -ne 0 ]; then
    echo "${ERROR} –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞"
    exit 1
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ª–æ–≥–æ–≤ –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
LOGS_DIR="./logs/robokassa"
mkdir -p "$LOGS_DIR"
echo "${INFO} –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è –ª–æ–≥–æ–≤ —Å–æ–∑–¥–∞–Ω–∞: $LOGS_DIR"

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "${CLEAN} –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –∏ —É–¥–∞–ª—è—é —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker-compose -f docker-compose.test.yml down -v

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –†–æ–±–æ–∫–∞—Å—Å—ã
export TEST_PAYMENT_PROCESSOR=robokassa
export TEST_CATEGORY=ru-payment

# –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
echo "${BUILD} –°–æ–±–∏—Ä–∞—é –∏ –∑–∞–ø—É—Å–∫–∞—é —Ç–µ—Å—Ç–æ–≤–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –¥–ª—è –†–æ–±–æ–∫–∞—Å—Å—ã..."
docker-compose -f docker-compose.test.yml up --build -d

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—Å—Ç–∏–ª–∏—Å—å
if [ $? -ne 0 ]; then
    echo "${ERROR} –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ"
    exit 1
fi

# –ñ–¥–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "${INFO} –û–∂–∏–¥–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ (10 —Å–µ–∫—É–Ω–¥)..."
sleep 10

# –ò–º—è —Ñ–∞–π–ª–∞ –ª–æ–≥–∞
TIMESTAMP=$(date +%Y%m%d-%H%M%S)
LOG_FILE="$LOGS_DIR/robokassa-tests-$TIMESTAMP.log"

# –í—ã–≤–æ–¥ –ª–æ–≥–æ–≤ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
echo "${LOG} ${PAYMENT} –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –†–æ–±–æ–∫–∞—Å—Å–∞ (–ª–æ–≥–∏: $LOG_FILE):"
docker logs -f neuro-blogger-telegram-bot-test | tee "$LOG_FILE"

# –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
TEST_EXIT_CODE=$(docker inspect --format='{{.State.ExitCode}}' neuro-blogger-telegram-bot-test)

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
echo "${CLEAN} –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é —Ç–µ—Å—Ç–æ–≤–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ..."
docker-compose -f docker-compose.test.yml down

# –û—á–∏—Å—Ç–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
unset TEST_PAYMENT_PROCESSOR
unset TEST_CATEGORY

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–æ–≤
if [ "$TEST_EXIT_CODE" = "0" ]; then
    echo "${SUCCESS} ${END} –í—Å–µ —Ç–µ—Å—Ç—ã –†–æ–±–æ–∫–∞—Å—Å—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã! –ö–æ–¥ –≤—ã—Ö–æ–¥–∞: ${TEST_EXIT_CODE}"
    echo "${INFO} –ü–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç—á–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –≤: $LOG_FILE"
    exit 0
else
    echo "${ERROR} ${END} –¢–µ—Å—Ç—ã –†–æ–±–æ–∫–∞—Å—Å—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å —Å –æ—à–∏–±–∫–æ–π. –ö–æ–¥ –≤—ã—Ö–æ–¥–∞: ${TEST_EXIT_CODE}"
    echo "${INFO} –ü–æ–¥—Ä–æ–±–Ω—ã–µ –ª–æ–≥–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –≤: $LOG_FILE"
    exit 1
fi 