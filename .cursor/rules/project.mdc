---
description: 
globs: 
alwaysApply: false
---
# Project Structure Rules üèóÔ∏è

## Root Directory Organization üìÅ

### Core Directories
1. `src/` - –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–¥ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
2. `dist/` - –°–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
3. `uploads/` - –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
4. `supabase/` - –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏ –º–∏–≥—Ä–∞—Ü–∏–∏
5. `sql/` - SQL —Å–∫—Ä–∏–ø—Ç—ã –∏ —Å—Ö–µ–º—ã
6. `tmp/` - –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
7. `roles/` - Ansible —Ä–æ–ª–∏
8. `etc/` - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã

### Configuration Files
1. Docker üê≥
   - `docker-compose.dev.yml` - –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
   - `Dockerfile.dev` - –°–±–æ—Ä–∫–∞ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
   - `nginx.conf` - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∫—Å–∏

2. TypeScript/Node.js üì¶
   - `package.json` - –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏ —Å–∫—Ä–∏–ø—Ç—ã
   - `tsconfig.json` - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è TypeScript
   - `.env` - –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è

3. CI/CD üîÑ
   - `ansible.cfg` - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Ansible
   - `playbook.yml` - –ü–ª–µ–π–±—É–∫–∏
   - `inventory` - –°–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤
   - `vault.yml` - –ó–∞—â–∏—â–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ

## Source Code Structure üóÇÔ∏è

### Core Modules
1. `core/` - –ë–∞–∑–æ–≤—ã–µ –º–æ–¥—É–ª–∏
   - –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
   - –õ–æ–≥–≥–µ—Ä
   - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
   - –û–±—â–∏–µ —É—Ç–∏–ª–∏—Ç—ã

2. `config/` - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
   - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–æ–≤
   - –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
   - –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã

3. `interfaces/` - TypeScript –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã
   - –û–±—â–∏–µ —Ç–∏–ø—ã
   - –ú–æ–¥–µ–ª–∏ –¥–∞–Ω–Ω—ã—Ö
   - DTO –æ–±—ä–µ–∫—Ç—ã

### Bot Components
1. `commands/` - –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–æ–≤
   - –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
   - –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
   - –í–∞–ª–∏–¥–∞—Ü–∏—è

2. `scenes/` - –°—Ü–µ–Ω—ã –¥–∏–∞–ª–æ–≥–æ–≤
   - –ü–æ—à–∞–≥–æ–≤—ã–µ –¥–∏–∞–ª–æ–≥–∏
   - –§–æ—Ä–º—ã
   - –û–ø—Ä–æ—Å—ã

3. `menu/` - –ú–µ–Ω—é –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
   - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
   - –ü–æ–¥–º–µ–Ω—é
   - –ò–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã

### Business Logic
1. `services/` - –ë–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞
   - –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π
   - –†–∞–±–æ—Ç–∞ —Å API
   - –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö

2. `handlers/` - –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
   - –í—Ö–æ–¥—è—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
   - –ö–æ–ª–±—ç–∫–∏
   - –í–µ–±-—Ö—É–∫–∏

3. `inngest-functions/` - –§–æ–Ω–æ–≤—ã–µ –∑–∞–¥–∞—á–∏
   - –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π
   - –û—Ç–ª–æ–∂–µ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
   - –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏

### Support Modules
1. `utils/` - –£—Ç–∏–ª–∏—Ç—ã
   - –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
   - –í–∞–ª–∏–¥–∞—Ü–∏—è
   - –•–µ–ª–ø–µ—Ä—ã

2. `middlewares/` - –ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
   - –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
   - –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
   - –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫

3. `test-utils/` - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
   - –ú–æ–∫–∏
   - –§–∏–∫—Å—Ç—É—Ä—ã
   - –•–µ–ª–ø–µ—Ä—ã –¥–ª—è —Ç–µ—Å—Ç–æ–≤

## Port Management üîå

### Development Ports
- 3000: –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
- 8288: Inngest Dev Server
- 80: Nginx –ø—Ä–æ–∫—Å–∏
- 54322: Supabase Studio
- 54321: Supabase API

### Production Ports
- 443: HTTPS
- 80: HTTP (—Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ HTTPS)
- 5432: PostgreSQL
- 6379: Redis

## Naming Conventions üìù

1. –§–∞–π–ª—ã –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
   - kebab-case –¥–ª—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
   - camelCase –¥–ª—è TypeScript —Ñ–∞–π–ª–æ–≤
   - SCREAMING_SNAKE_CASE –¥–ª—è –∫–æ–Ω—Å—Ç–∞–Ω—Ç
   - PascalCase –¥–ª—è –∫–ª–∞—Å—Å–æ–≤ –∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤

2. –§—É–Ω–∫—Ü–∏–∏ –∏ –º–µ—Ç–æ–¥—ã
   - camelCase
   - –ì–ª–∞–≥–æ–ª + –°—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–µ
   - –ü—Ä–∏–º–µ—Ä: `processPayment`, `validateUser`

3. –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
   - camelCase
   - –°—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–µ + –û–ø–∏—Å–∞–Ω–∏–µ
   - –ü—Ä–∏–º–µ—Ä: `userBalance`, `paymentStatus`

## Testing Structure üß™

1. `test-utils/`
   - `fixtures/` - –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
   - `mocks/` - –ú–æ–∫–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
   - `helpers/` - –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
   - `inngest-tests.ts` - –¢–µ—Å—Ç—ã Inngest —Ñ—É–Ω–∫—Ü–∏–π

2. –ü—Ä–∞–≤–∏–ª–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
   - –¢–µ—Å—Ç—ã —Ä—è–¥–æ–º —Å —Ç–µ—Å—Ç–∏—Ä—É–µ–º—ã–º –∫–æ–¥–æ–º
   - –û–ø–∏—Å–∞—Ç–µ–ª—å–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤
   - –ò–∑–æ–ª—è—Ü–∏—è —Ç–µ—Å—Ç–æ–≤
   - –ú–æ–∫–∏ –≤–Ω–µ—à–Ω–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π

## Documentation üìö

1. README.md
   - –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
   - –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ
   - –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
   - API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è

2. –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –≤ –∫–æ–¥–µ
   - JSDoc –¥–ª—è –ø—É–±–ª–∏—á–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤
   - Inline –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –¥–ª—è —Å–ª–æ–∂–Ω–æ–π –ª–æ–≥–∏–∫–∏
   - TODO –¥–ª—è –ø–ª–∞–Ω–∏—Ä—É–µ–º—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π

## Git Workflow üîÑ

1. –í–µ—Ç–∫–∏
   - `main` - –æ—Å–Ω–æ–≤–Ω–∞—è –≤–µ—Ç–∫–∞
   - `feature/*` - –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
   - `fix/*` - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
   - `release/*` - —Ä–µ–ª–∏–∑—ã

2. –ö–æ–º–º–∏—Ç—ã
   - Conventional Commits
   - Emoji –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
   - –°—Å—ã–ª–∫–∏ –Ω–∞ –∑–∞–¥–∞—á–∏

## Logging Standards üìä

–í—Å–µ –ª–æ–≥–∏ –¥–æ–ª–∂–Ω—ã —Å–æ–¥–µ—Ä–∂–∞—Ç—å —ç–º–æ–¥–∑–∏:
- ‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
- ‚úÖ –£—Å–ø–µ—Ö
- ‚ùå –û—à–∏–±–∫–∞
- üöÄ –°—Ç–∞—Ä—Ç –æ–ø–µ—Ä–∞—Ü–∏–∏
- üèÅ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ
- üîç –í–∞–ª–∏–¥–∞—Ü–∏—è
- ‚ö° –°–æ–±—ã—Ç–∏—è
- üéØ –¢–µ—Å—Ç—ã
- üîÑ –ü–æ–≤—Ç–æ—Ä—ã
- üíæ –û–ø–µ—Ä–∞—Ü–∏–∏ —Å –¥–∞–Ω–Ω—ã–º–∏

# Project Structure Rules üìÅ

## Core Directories

### 1. Commands Directory üéÆ
- `src/commands/`
  - `stats/` - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
  - `httpRequest/` - HTTP –∑–∞–ø—Ä–æ—Å—ã
  - `glamaMcp/` - –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Glama MCP
  - `inngest/` - –ö–æ–º–∞–Ω–¥—ã –¥–ª—è Inngest
  - `handleTechSupport/` - –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞
  - `get100Command/` - –ö–æ–º–∞–Ω–¥–∞ –ø–æ–ª—É—á–µ–Ω–∏—è 100
  - `priceCommand/` - –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ü–µ–Ω
  - `selectModelCommand/` - –í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏

### 2. Core Systems üîß
- `src/core/`
  - `supabase/` - –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
  - `bot/` - –ë–∞–∑–æ–≤–∞—è –ª–æ–≥–∏–∫–∞ –±–æ—Ç–∞
  - `elevenlabs/` - –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å ElevenLabs
  - `inngest/` - Inngest –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
  - `bfl/` - BFL –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
  - `pinata/` - Pinata –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
  - `axios/` - HTTP –∫–ª–∏–µ–Ω—Ç
  - `synclabs/` - SyncLabs –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
  - `replicate/` - Replicate AI
  - `openai/` - OpenAI –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è

### 3. Inngest Functions üîÑ
- `src/inngest-functions/`
  - `textToImage.inngest.ts` - –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ –≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
  - `textToSpeech.inngest.ts` - –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ –≤ —Ä–µ—á—å
  - `ruPayment.service.ts` - –°–µ—Ä–≤–∏—Å –æ–ø–ª–∞—Ç—ã
  - `paymentProcessor.ts` - –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–ª–∞—Ç–µ–∂–µ–π
  - `neuroImageGeneration.ts` - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
  - `neuroPhotoV2Generation.ts` - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–æ—Ç–æ V2
  - `generateModelTraining.ts` - –û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–µ–π
  - `modelTrainingV2.ts` - –û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–µ–π V2
  - `broadcastMessage.ts` - –†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
  - `createVoiceAvatar.inngest.ts` - –°–æ–∑–¥–∞–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∞–≤–∞—Ç–∞—Ä–∞

### 4. Interfaces üìã
- `src/interfaces/`
  - –¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö
  - DTO –æ–±—ä–µ–∫—Ç—ã
  - –û–±—â–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã

### 5. Services üõ†
- `src/services/`
  - –ë–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞
  - –í–Ω–µ—à–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
  - –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö

### 6. Handlers üéØ
- `src/handlers/`
  - –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
  - Middleware
  - –†–æ—É—Ç–∏–Ω–≥

### 7. Test Utils üß™
- `src/test-utils/`
  - –¢–µ—Å—Ç–æ–≤—ã–µ —É—Ç–∏–ª–∏—Ç—ã
  - –ú–æ–∫–∏
  - –§–∏–∫—Å—Ç—É—Ä—ã

### 8. Config üîß
- `src/config/`
  - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  - –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
  - –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è

## File Organization Rules üìë

1. –ú–æ–¥—É–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞
   - –ö–∞–∂–¥—ã–π –º–æ–¥—É–ª—å –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
   - –ò–Ω–¥–µ–∫—Å–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞
   - –¢–µ—Å—Ç—ã —Ä—è–¥–æ–º —Å –∫–æ–¥–æ–º

2. –ò–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
   - `.ts` –¥–ª—è TypeScript
   - `.inngest.ts` –¥–ª—è Inngest —Ñ—É–Ω–∫—Ü–∏–π
   - `.service.ts` –¥–ª—è —Å–µ—Ä–≤–∏—Å–æ–≤
   - `.test.ts` –¥–ª—è —Ç–µ—Å—Ç–æ–≤

3. –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ —Ñ–∞–π–ª–æ–≤
   - –ü–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
   - –ü–æ —Ç–∏–ø—É (handlers, services, etc)
   - –ü–æ –º–æ–¥—É–ª—é (bot, payment, etc)

## Port Management üîå

1. Development Ports
   - 3000: Main App
   - 8288: Inngest Dev
   - 80: Nginx
   - 54322: Supabase Studio
   - 54321: Supabase API

2. Bot Ports
   - 2999-2990: Telegram Bots
   - 3001-3010: Webhook Endpoints

3. Service Ports
   - 5432: PostgreSQL
   - 6379: Redis
   - 8000: API Gateway

## Dependency Management üì¶

1. Core Dependencies
   - Node.js
   - TypeScript
   - Telegraf
   - Inngest
   - Supabase

2. Development Tools
   - ESLint
   - Prettier
   - Husky
   - Nodemon

## Testing Strategy üß™

1. Test Location
   - Unit tests —Ä—è–¥–æ–º —Å –∫–æ–¥–æ–º
   - Integration tests –≤ test-utils
   - E2E tests –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏

2. Test Naming
   - `*.test.ts` –¥–ª—è unit tests
   - `*.spec.ts` –¥–ª—è integration tests
   - `*.e2e.ts` –¥–ª—è E2E tests

## Documentation üìö

1. Code Documentation
   - JSDoc –¥–ª—è –ø—É–±–ª–∏—á–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤
   - README.md –≤ –∫–∞–∂–¥–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
   - Swagger –¥–ª—è API

2. Project Documentation
   - Architecture diagrams
   - Setup instructions
   - Deployment guides

## Logging Standards üìä

1. Log Levels
   - ERROR: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏
   - WARN: –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
   - INFO: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
   - DEBUG: –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è

2. Log Format
   ```typescript
   {
     level: 'INFO',
     timestamp: '2024-03-31T18:00:00Z',
     service: 'payment-processor',
     event: 'payment.processed',
     data: {
       userId: '123',
       amount: 100
     }
   }
   ```

## Security Rules üîí

1. Sensitive Data
   - –í—Å–µ —Ç–æ–∫–µ–Ω—ã –≤ .env
   - –®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
   - –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–ª—é—á–µ–π

2. Access Control
   - –†–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
   - Permissions
   - Rate limiting

## Deployment Rules üöÄ

1. Environment Setup
   - Development
   - Staging
   - Production

2. Container Organization
   - –û—Ç–¥–µ–ª—å–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –¥–ª—è —Å–µ—Ä–≤–∏—Å–æ–≤
   - –û–±—â–∞—è —Å–µ—Ç—å
   - Persistent volumes

## Monitoring üìà

1. Metrics
   - CPU/Memory usage
   - Response times
   - Error rates
   - User activity

2. Alerts
   - Critical errors
   - High load
   - Low balance
   - API failures