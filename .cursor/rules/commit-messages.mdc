# Git Commit Message Rules

## Structure
1. Title (First Line):
   - Must be in English
   - Max 50 characters
   - Format: `type: short description`
   - Types:
     * fix: bug fixes
     * feat: new features
     * refactor: code changes
     * docs: documentation
     * style: formatting
     * perf: performance
     * test: testing
     * chore: maintenance

2. Description (Body):
   - Must be in English
   - Separate from title with blank line
   - Use bullet points for multiple changes
   - Explain WHAT and WHY (not HOW)
   - Max 72 characters per line

## Examples
```
feat: add payment gateway integration

- Implement Stripe payment processing
- Add webhook handlers for payment events
- Update user balance after successful payment
- Add payment status tracking
```

```
fix: resolve balance calculation issue

- Fix incorrect balance updates in payment processor
- Add validation for negative amounts
- Improve error handling and logging
```

## Rules
- ‚ùå NO Russian language
- ‚ùå NO implementation details
- ‚ùå NO line breaks in title
- ‚úÖ Use present tense ("add" not "added")
- ‚úÖ Use imperative mood ("change" not "changes")
- ‚úÖ Reference issues when relevant (#123)

## Special Notes
- `BREAKING CHANGE:` in footer for critical changes
- `Closes #123` for closing issues
- `See: #123` for linking to issues

## For MCP Services
Add MCP prefix when working with MCP services:

```
üîß [MCP] fix: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ stdio –≤ sequential-thinking

‚ú® [MCP] feat: –î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤ docker-tools
``` 