#!/bin/bash

# –≠–º–æ–¥–∑–∏ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
INFO="‚ÑπÔ∏è "
SUCCESS="‚úÖ "
ERROR="‚ùå "
START="üöÄ "
END="üèÅ "
DEBUG="üîç "

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
if [ $# -eq 0 ]; then
    TEST_CATEGORY="payment-processor"
    echo "${INFO} –ö–∞—Ç–µ–≥–æ—Ä–∏—è —Ç–µ—Å—Ç–æ–≤ –Ω–µ —É–∫–∞–∑–∞–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: ${TEST_CATEGORY}"
else
    TEST_CATEGORY="$1"
    echo "${INFO} –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ${TEST_CATEGORY}"
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ª–æ–≥–æ–≤
mkdir -p logs
echo "${INFO} –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è –ª–æ–≥–æ–≤ —Å–æ–∑–¥–∞–Ω–∞/–ø—Ä–æ–≤–µ—Ä–µ–Ω–∞"

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "${START} –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker-compose -f docker-compose.test.yml down -v

# –ú–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥—ã –≤ docker-compose.test.yml –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –Ω—É–∂–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
echo "${DEBUG} –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–æ–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ${TEST_CATEGORY}"
ORIGINAL_COMMAND="command:.*"
NEW_COMMAND="command: [\"npm\", \"run\", \"test:${TEST_CATEGORY}\"]  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å–∫–∞—Ç—å —Ç–µ—Å—Ç—ã –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"
sed -i.bak "s|${ORIGINAL_COMMAND}|${NEW_COMMAND}|g" docker-compose.test.yml

# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ä–µ–¥—ã
echo "${START} –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Å—Ä–µ–¥—É..."
docker-compose -f docker-compose.test.yml up --build -d

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
if [ $? -ne 0 ]; then
    echo "${ERROR} –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ"
    exit 1
fi

echo "${INFO} –û–∂–∏–¥–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
sleep 5

# –í—ã–≤–æ–¥ –ª–æ–≥–æ–≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
echo "${INFO} –í—ã–≤–æ–¥ –ª–æ–≥–æ–≤ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:"
docker logs -f neuro-blogger-telegram-bot-test | tee logs/test-${TEST_CATEGORY}.log || true

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤
TEST_EXIT_CODE=$(docker inspect --format='{{.State.ExitCode}}' neuro-blogger-telegram-bot-test)

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ä–µ–¥—ã
echo "${END} –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Å—Ä–µ–¥—É..."
docker-compose -f docker-compose.test.yml down -v

# –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ docker-compose.test.yml
mv docker-compose.test.yml.bak docker-compose.test.yml

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–æ–≤
if [ "$TEST_EXIT_CODE" -eq 0 ]; then
    echo "${SUCCESS} –¢–µ—Å—Ç—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '${TEST_CATEGORY}' —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω—ã!"
    exit 0
else
    echo "${ERROR} –¢–µ—Å—Ç—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '${TEST_CATEGORY}' –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å —Å –æ—à–∏–±–∫–∞–º–∏. –ö–æ–¥: ${TEST_EXIT_CODE}"
    echo "${INFO} –î–ª—è –¥–µ—Ç–∞–ª–µ–π –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª logs/test-${TEST_CATEGORY}.log"
    exit $TEST_EXIT_CODE
fi 