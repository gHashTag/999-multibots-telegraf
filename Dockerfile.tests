FROM node:20-alpine

WORKDIR /app

# Копируем package.json и package-lock.json для оптимизации кэширования
COPY package*.json ./

# Устанавливаем зависимости с более подробным логированием
RUN npm install && \
    npm cache clean --force

# Создаем директорию для логов и отчетов тестирования
RUN mkdir -p /app/logs /app/test-reports

# Копируем исходный код
COPY . .

# Устанавливаем переменные окружения для тестов
ENV NODE_ENV=test
ENV TESTING=true
ENV LOG_LEVEL=debug
ENV TEST_TIMEOUT=30000
ENV TEST_RETRY_COUNT=3
ENV SUPABASE_MOCK_ENABLED=true
ENV DATABASE_MOCK=true
ENV RUNNING_IN_TEST_ENV=true

# Экспонируем порт для возможной отладки
EXPOSE 9229

# Команда по умолчанию - запуск тестов сцен
CMD ["npm", "run", "test:scenes"]

# Альтернативная команда для запуска только определенных тестов
# Использование: docker run -e TEST_FILE=tests/scenes/helpScene.test.ts telegram-bot-tests npm run test:custom -- $TEST_FILE 