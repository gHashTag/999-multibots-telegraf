const { Inngest } = require('inngest')
const fetch = require('node-fetch')
require('dotenv').config()

// –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const INNGEST_EVENT_KEY = process.env.INNGEST_EVENT_KEY
const INNGEST_BASE_URL =
  process.env.INNGEST_BASE_URL || 'http://localhost:2999/api/inngest'

console.log('üåê –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑–æ–≤—ã–π URL:', INNGEST_BASE_URL)

// –ö–ª–∏–µ–Ω—Ç Inngest —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
const inngest = new Inngest({
  id: 'test-text-to-image',
  eventKey: INNGEST_EVENT_KEY,
  isDev: true,
  baseUrl: INNGEST_BASE_URL,
  fetch: async (url, init) => {
    console.log('üîÑ –ò—Å—Ö–æ–¥–Ω—ã–π URL –∑–∞–ø—Ä–æ—Å–∞:', url)

    // –ï—Å–ª–∏ —ç—Ç–æ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–±—ã—Ç–∏—è, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä
    if (url.includes('/e/')) {
      const newUrl = `${INNGEST_BASE_URL}/e`
      console.log(`üîÄ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞: ${newUrl}`)

      try {
        const response = await fetch(newUrl, init)
        console.log(`üîÑ –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: ${response.status}`)
        return response
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ:', error.message)
        throw error
      }
    }

    // –î–ª—è –¥—Ä—É–≥–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π URL
    return fetch(url, init)
  },
})

async function sendTextToImageEvent() {
  try {
    console.log('üöÄ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–±—ã—Ç–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...')

    const result = await inngest.send({
      name: 'text-to-image.requested',
      data: {
        prompt: '–ö—Ä–∞—Å–∏–≤—ã–π –∑–∞–∫–∞—Ç –Ω–∞–¥ –≥–æ—Ä–∞–º–∏ –≤ —Å—Ç–∏–ª–µ –∞–∫–≤–∞—Ä–µ–ª–∏',
        model: 'recraft v3',
        num_images: 1,
        telegram_id: '123456789',
        is_ru: true,
        bot_name: 'test_bot',
      },
    })

    console.log(
      '‚úÖ –°–æ–±—ã—Ç–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:',
      JSON.stringify(result, null, 2)
    )
    console.log('‚úÖ –û–∂–∏–¥–∞–π—Ç–µ –æ–±—Ä–∞–±–æ—Ç–∫—É –∑–∞–ø—Ä–æ—Å–∞ Inngest')

    // –û–∂–∏–¥–∞–Ω–∏–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏—è
    console.log('‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ 5 —Å–µ–∫—É–Ω–¥...')
    await new Promise(resolve => setTimeout(resolve, 5000))
    console.log('‚úÖ –ì–æ—Ç–æ–≤–æ!')
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–±—ã—Ç–∏—è:', error.message)

    if (error.stack) {
      console.error('–°—Ç–µ–∫ –æ—à–∏–±–∫–∏:', error.stack)
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–±—ã—Ç–∏—è
sendTextToImageEvent()
