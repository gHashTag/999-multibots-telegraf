# ⛔️ ВНИМАНИЕ! КРИТИЧЕСКИ ВАЖНЫЕ НАСТРОЙКИ! ⛔️
# 
# ********************************************************
# *                   !!!СТОП!!!                          *
# *        НЕ МЕНЯТЬ СЛЕДУЮЩИЕ НАСТРОЙКИ:                 *
# *                                                       *
# * 1. Сеть bot-network и её настройки                    *
# * 2. Порты приложения (2999, 3000-3007)                *
# * 3. Healthcheck настройки                              *
# * 4. Volumes и монтирование директорий                  *
# *                                                       *
# * ПОСЛЕДСТВИЯ ИЗМЕНЕНИЙ:                               *
# * - Перестанет работать nginx прокси                   *
# * - Боты потеряют связь с Telegram                     *
# * - Упадёт вся система                                 *
# *                                                       *
# * ЕСЛИ НУЖНЫ ИЗМЕНЕНИЯ:                                *
# * 1. Сделать бэкап этого файла                         *
# * 2. Проконсультироваться с тимлидом                   *
# * 3. Тестировать на staging                            *
# ********************************************************
#
# LAST WORKING UPDATE: 21.04.2025
# TESTED BY: @playra
<<<<<<< HEAD

version: '3.8'
=======
# UPDATED FOR BUN: 28.04.2025
>>>>>>> origin/feat/vitest-integration

services:
  app:
    container_name: 999-multibots
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - '2999:2999'  # !!! КРИТИЧНО: основной порт приложения
      - '3000-3007:3000-3007'  # !!! КРИТИЧНО: порты для ботов
    env_file:
      - .env
    environment:
      - BUN_ENV=production
      - BOT_TOKEN_1=${BOT_TOKEN_1}
      - BOT_TOKEN_2=${BOT_TOKEN_2}
      - BOT_TOKEN_3=${BOT_TOKEN_3}
      - BOT_TOKEN_4=${BOT_TOKEN_4}
      - BOT_TOKEN_5=${BOT_TOKEN_5}
      - BOT_TOKEN_6=${BOT_TOKEN_6}
      - BOT_TOKEN_7=${BOT_TOKEN_7}
      - INNGEST_EVENT_KEY=${INNGEST_EVENT_KEY}
      - INNGEST_SIGNING_KEY=${INNGEST_SIGNING_KEY}
      - INNGEST_URL=${INNGEST_URL}
      - INNGEST_BASE_URL=${INNGEST_BASE_URL}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - ORIGIN=${ORIGIN}
      - ADMIN_IDS=${ADMIN_IDS}
      - SECRET_KEY=${SECRET_KEY}
      - LOG_FORMAT=${LOG_FORMAT}
      - ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - REPLICATE_API_TOKEN=${REPLICATE_API_TOKEN}
      - DOCKER_ENVIRONMENT=true
<<<<<<< HEAD
      - DEBUG=true
      - TS_NODE_PROJECT=tsconfig.prod.json
    volumes:  # !!! КРИТИЧНО: не менять пути монтирования
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ./tmp:/app/tmp
=======
      - ./certs:/etc/pki:ro
    volumes:
      # Возвращаем важные пути монтирования
>>>>>>> origin/feat/vitest-integration
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/pki:/etc/pki:ro
    networks:  # !!! КРИТИЧНО: настройки сети
      bot-network:
        aliases:
          - app
    dns:  # !!! КРИТИЧНО: DNS серверы
      - 8.8.8.8
      - 8.8.4.4
    healthcheck:  # !!! КРИТИЧНО: проверка здоровья
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:2999/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    restart: unless-stopped

  nginx:
    image: nginx:latest
    container_name: bot-proxy
    ports:  # !!! КРИТИЧНО: порты nginx
      - '8443:443'
      - '8080:80'
    volumes:  # !!! КРИТИЧНО: конфигурация nginx
      - ./nginx-config:/etc/nginx/conf.d:ro
<<<<<<< HEAD
      - /etc/pki/cert.crt:/etc/pki/cert.crt:ro
      - /etc/pki/key.pem:/etc/pki/key.pem:ro
=======
      # Используем локальные самоподписанные сертификаты для разработки
      - ./certs/cert.crt:/etc/pki/cert.crt:ro
      - ./certs/key.pem:/etc/pki/key.pem:ro
>>>>>>> origin/feat/vitest-integration
    depends_on:
      app:
        condition: service_healthy
    networks:  # !!! КРИТИЧНО: настройки сети
      bot-network:
        aliases:
          - nginx
    restart: unless-stopped

# !!! КРИТИЧНО: настройки сети
networks:
  bot-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.27.0.0/16  # !!! НЕ МЕНЯТЬ SUBNET!

# Объявляем Docker Volume
volumes:
  nginx-config-volume:
