# ⛔️ ВНИМАНИЕ! КРИТИЧЕСКИ ВАЖНЫЕ НАСТРОЙКИ! ⛔️
# 
# ********************************************************
# *                   !!!СТОП!!!                          *
# *        НЕ МЕНЯТЬ СЛЕДУЮЩИЕ НАСТРОЙКИ:                 *
# *                                                       *
# * 1. Сеть bot-network и её настройки                    *
# * 2. Порты приложения (2999, 3000-3007)                *
# * 3. Healthcheck настройки                              *
# * 4. Volumes и монтирование директорий                  *
# *                                                       *
# * ПОСЛЕДСТВИЯ ИЗМЕНЕНИЙ:                               *
# * - Перестанет работать nginx прокси                   *
# * - Боты потеряют связь с Telegram                     *
# * - Упадёт вся система                                 *
# *                                                       *
# * ЕСЛИ НУЖНЫ ИЗМЕНЕНИЯ:                                *
# * 1. Сделать бэкап этого файла                         *
# * 2. Проконсультироваться с тимлидом                   *
# * 3. Тестировать на staging                            *
# ********************************************************
#
# LAST WORKING UPDATE: 21.04.2025
# TESTED BY: @playra
# UPDATED FOR BUN: 28.04.2025

services:
  app:
    container_name: 999-multibots
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - '2999:2999'
      - '3000:3000'
      - '3001:3001'
      - '3002:3002'
      - '3003:3003'
      - '3004:3004'
      - '3005:3005'
      - '3006:3006'
      - '3007:3007'
    env_file:
      - .env
    environment:
      - BUN_ENV=production # Оставляем BUN_ENV на случай, если где-то используется
      - BOT_TOKEN_1=${BOT_TOKEN_1}
      - BOT_TOKEN_2=${BOT_TOKEN_2}
      - BOT_TOKEN_3=${BOT_TOKEN_3}
      - BOT_TOKEN_4=${BOT_TOKEN_4}
      - BOT_TOKEN_5=${BOT_TOKEN_5}
      - BOT_TOKEN_6=${BOT_TOKEN_6}
      - BOT_TOKEN_7=${BOT_TOKEN_7}
      - INNGEST_EVENT_KEY=${INNGEST_EVENT_KEY}
      - INNGEST_SIGNING_KEY=${INNGEST_SIGNING_KEY}
      - INNGEST_URL=${INNGEST_URL}
      - INNGEST_BASE_URL=${INNGEST_BASE_URL}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - ORIGIN=${ORIGIN}
      - ADMIN_IDS=${ADMIN_IDS}
      - SECRET_KEY=${SECRET_KEY}
      - LOG_FORMAT=${LOG_FORMAT}
      - ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - REPLICATE_API_TOKEN=${REPLICATE_API_TOKEN}
      - DOCKER_ENVIRONMENT=true # Важно для docker-entrypoint
      # - ./certs:/etc/pki:ro # Монтирование certs теперь делается для nginx
    volumes:
      # Возвращаем важные пути монтирования
      - /var/run/docker.sock:/var/run/docker.sock # Может понадобиться entrypoint'у
      - /etc/nginx:/etc/nginx # Может понадобиться entrypoint'у
      - /etc/pki:/etc/pki     # Может понадобиться entrypoint'у
      # Оставляем закомментированным только проблемный путь
      # - /root/.ssh:/app/.ssh:ro
      # Файлы Ansible
      - ./playbook.yml:/app/playbook.yml:ro
      - ./inventory:/app/inventory:ro
      - ./roles:/app/roles:ro
    dns:
      - 8.8.8.8
      - 8.8.4.4
    extra_hosts:
      - "api.elevenlabs.io:127.0.0.1"
      - "host.docker.internal:host-gateway" # Обновлено для совместимости
    networks:
      - app-network
    restart: unless-stopped

  nginx:
    image: nginx:latest
    container_name: bot-proxy
    ports:
      - '8443:443'
      - '8080:80'
    volumes:
      # Используем нашу кастомную конфигурацию
      - ./nginx-config:/etc/nginx/conf.d:ro
      # Используем локальные самоподписанные сертификаты для разработки
      - ./certs/cert.crt:/etc/pki/cert.crt:ro
      - ./certs/key.pem:/etc/pki/key.pem:ro
    depends_on:
      - app
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.27.0.0/16

# Объявляем Docker Volume
volumes:
  nginx-config-volume:
