#!/bin/bash

# –ù–∞–∑–≤–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
SCRIPT_NAME="run-textToVideoWizard-tests.sh"
TIMESTAMP=$(date +"%Y-%m-%d_%H-%M-%S")
LOG_DIR="logs"
LOG_FILE="$LOG_DIR/textToVideoWizard-tests-$TIMESTAMP.log"
TEMP_DIR="temp-test-dir"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ª–æ–≥–æ–≤
if [ ! -d "$LOG_DIR" ]; then
  mkdir -p "$LOG_DIR"
  echo "üìÅ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è –ª–æ–≥–æ–≤: $LOG_DIR"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -d "$TEMP_DIR" ]; then
  mkdir -p "$TEMP_DIR"
  echo "üìÅ –°–æ–∑–¥–∞–Ω–∞ –≤—Ä–µ–º–µ–Ω–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $TEMP_DIR"
fi

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π —Å —ç–º–æ–¥–∑–∏
log_message() {
  echo "$1"
  echo "$1" >> "$LOG_FILE"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –∏–º–ø–æ—Ä—Ç–æ–≤ –∏–∑ ESM –≤ CommonJS
convert_to_commonjs() {
  local file="$1"
  local output="$2"
  
  # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  mkdir -p "$(dirname "$output")"
  
  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º ESM –∏–º–ø–æ—Ä—Ç—ã –≤ CommonJS
  sed 's/import \(.*\) from \(.*\);/const \1 = require(\2);/g' "$file" > "$output"
  
  log_message "üîÑ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω —Ñ–∞–π–ª $file –≤ CommonJS —Ñ–æ—Ä–º–∞—Ç"
}

# –ù–∞—á–∞–ª–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
log_message "üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ textToVideoWizard $TIMESTAMP"
log_message "üìù –õ–æ–≥–∏ –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª $LOG_FILE"

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
export NODE_ENV=test

# –ö–æ–ø–∏—Ä—É–µ–º –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è —Ç–µ—Å—Ç–æ–≤
log_message "üìã –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ñ–∞–π–ª–æ–≤ —Ç–µ—Å—Ç–æ–≤..."

# –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª tsconfig.json –¥–ª—è —Ç–µ—Å—Ç–æ–≤
cat > "$TEMP_DIR/tsconfig.json" << EOF
{
  "extends": "../tsconfig.json",
  "compilerOptions": {
    "module": "commonjs",
    "esModuleInterop": true,
    "paths": {
      "@/*": ["../src/*"]
    }
  }
}
EOF

log_message "‚úÖ –°–æ–∑–¥–∞–Ω –≤—Ä–µ–º–µ–Ω–Ω—ã–π tsconfig.json —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π module=commonjs"

# –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª —Ç–µ—Å—Ç–∞ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
cp src/test-utils/tests/scenes/textToVideoWizard.test.ts "$TEMP_DIR/"
log_message "‚úÖ –§–∞–π–ª —Ç–µ—Å—Ç–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é"

# –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π runner –¥–ª—è —Ç–µ—Å—Ç–æ–≤
cat > "$TEMP_DIR/run-test.js" << EOF
const path = require('path');
process.env.NODE_ENV = 'test';

// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º ts-node —Å –æ–ø—Ü–∏–µ–π –¥–ª—è CommonJS
require('ts-node').register({
  project: path.join(__dirname, 'tsconfig.json'),
  transpileOnly: true
});

// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º aliases –¥–ª—è –ø—É—Ç–µ–π
require('tsconfig-paths').register({
  baseUrl: path.join(__dirname, '..'),
  paths: { 
    '@/*': ['src/*'] 
  }
});

// –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
async function runTests() {
  try {
    const { runTextToVideoWizardTests } = require('./textToVideoWizard.test.ts');
    const results = await runTextToVideoWizardTests();
    
    // –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    console.log('\\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:');
    const successCount = results.filter(r => r.success).length;
    const failCount = results.length - successCount;
    
    console.log(\`–í—Å–µ–≥–æ: \${results.length}, –£—Å–ø–µ—à–Ω–æ: \${successCount}, –û—à–∏–±–∫–∏: \${failCount}\`);
    
    if (failCount > 0) {
      console.log('‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—à–∏–±–∫–∏ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö —Ç–µ—Å—Ç–∞—Ö:');
      results.filter(r => !r.success).forEach(result => {
        console.log(\`   - \${result.name}: \${result.message}\`);
      });
      process.exit(1);
    } else {
      console.log('‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω—ã!');
      process.exit(0);
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ç–µ—Å—Ç–æ–≤:', error);
    process.exit(1);
  }
}

runTests();
EOF

log_message "‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤ run-test.js"

# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
log_message "‚öôÔ∏è –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ textToVideoWizard..."
node "$TEMP_DIR/run-test.js" | tee -a "$LOG_FILE"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
RESULT=${PIPESTATUS[0]}
if [ $RESULT -eq 0 ]; then
  log_message "‚úÖ –¢–µ—Å—Ç—ã textToVideoWizard —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã"
else
  log_message "‚ùå –¢–µ—Å—Ç—ã textToVideoWizard –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å —Å –æ—à–∏–±–∫–æ–π (–∫–æ–¥ $RESULT)"
fi

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
log_message "üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
rm -rf "$TEMP_DIR"
log_message "‚úÖ –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã"

log_message "üèÅ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ $SCRIPT_NAME –∑–∞–≤–µ—Ä—à–µ–Ω–æ $TIMESTAMP"
exit $RESULT 